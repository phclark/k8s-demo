{
  "format_version": "1.0",
  "terraform_version": "1.1.4",
  "variables": {
    "cluster_name": {
      "value": "demo"
    },
    "environment": {
      "value": "dev"
    },
    "kubernetes_version": {
      "value": "1.21"
    },
    "tags": {
      "value": {}
    },
    "vpc_name": {
      "value": "demo"
    }
  },
  "planned_values": {
    "outputs": {
      "cluster_addons": {
        "sensitive": false,
        "value": {
          "coredns": {
            "addon_name": "coredns",
            "addon_version": "v1.8.4-eksbuild.1",
            "arn": "arn:aws:eks:us-east-1:767534018423:addon/dev-demo/coredns/80bf4445-f2f1-6c54-f1fb-f3128982c35b",
            "cluster_name": "dev-demo",
            "created_at": "2022-01-23T20:06:16Z",
            "id": "dev-demo:coredns",
            "modified_at": "2022-01-23T20:07:23Z",
            "resolve_conflicts": "OVERWRITE",
            "service_account_role_arn": "",
            "tags": {},
            "tags_all": {}
          },
          "kube-proxy": {
            "addon_name": "kube-proxy",
            "addon_version": "v1.21.2-eksbuild.2",
            "arn": "arn:aws:eks:us-east-1:767534018423:addon/dev-demo/kube-proxy/b8bf4426-84de-1796-3d65-a2690dbeca36",
            "cluster_name": "dev-demo",
            "created_at": "2022-01-23T18:57:37Z",
            "id": "dev-demo:kube-proxy",
            "modified_at": "2022-01-23T18:57:38Z",
            "resolve_conflicts": null,
            "service_account_role_arn": "",
            "tags": {},
            "tags_all": {}
          },
          "vpc-cni": {
            "addon_name": "vpc-cni",
            "addon_version": "v1.10.1-eksbuild.1",
            "arn": "arn:aws:eks:us-east-1:767534018423:addon/dev-demo/vpc-cni/7abf4426-84db-d9c0-8aa5-9e7349f4ef64",
            "cluster_name": "dev-demo",
            "created_at": "2022-01-23T18:57:37Z",
            "id": "dev-demo:vpc-cni",
            "modified_at": "2022-01-23T18:57:38Z",
            "resolve_conflicts": "OVERWRITE",
            "service_account_role_arn": "",
            "tags": {},
            "tags_all": {}
          }
        }
      },
      "cluster_endpoint": {
        "sensitive": false,
        "value": "https://25DA5279A39940D35B91C73BFFF97403.gr7.us-east-1.eks.amazonaws.com"
      },
      "cluster_name": {
        "sensitive": false,
        "value": "dev-demo"
      },
      "cluster_status": {
        "sensitive": false,
        "value": "ACTIVE"
      },
      "oidc_issuer_url": {
        "sensitive": false,
        "value": "https://oidc.eks.us-east-1.amazonaws.com/id/25DA5279A39940D35B91C73BFFF97403"
      },
      "oidc_provider_arn": {
        "sensitive": false,
        "value": "arn:aws:iam::767534018423:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/25DA5279A39940D35B91C73BFFF97403"
      },
      "private_subnets": {
        "sensitive": false,
        "value": [
          "subnet-067ea905e5e41ae0f",
          "subnet-069f93a090e0f24ed",
          "subnet-032ae1b0fdf5ec242"
        ]
      },
      "private_subnets_cidr_blocks": {
        "sensitive": false,
        "value": [
          "10.0.1.0/24",
          "10.0.2.0/24",
          "10.0.3.0/24"
        ]
      },
      "public_subnets": {
        "sensitive": false,
        "value": [
          "subnet-015a80f9cbeb9e75e",
          "subnet-08c80cb915aa41451",
          "subnet-0ecbc0b2e847025a0"
        ]
      },
      "public_subnets_cidr_blocks": {
        "sensitive": false,
        "value": [
          "10.0.101.0/24",
          "10.0.102.0/24",
          "10.0.103.0/24"
        ]
      },
      "vpc_arn": {
        "sensitive": false,
        "value": "arn:aws:ec2:us-east-1:767534018423:vpc/vpc-00fc46c587795f3a2"
      },
      "vpc_cidr_block": {
        "sensitive": false,
        "value": "10.0.0.0/16"
      },
      "vpc_id": {
        "sensitive": false,
        "value": "vpc-00fc46c587795f3a2"
      }
    },
    "root_module": {
      "resources": [
        {
          "address": "aws_kms_key.eks",
          "mode": "managed",
          "type": "aws_kms_key",
          "name": "eks",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "arn": "arn:aws:kms:us-east-1:767534018423:key/2ee0dad3-981a-4424-9df9-6f1726abb77e",
            "bypass_policy_lockout_safety_check": false,
            "customer_master_key_spec": "SYMMETRIC_DEFAULT",
            "deletion_window_in_days": 7,
            "description": "EKS Secret Encryption Key",
            "enable_key_rotation": true,
            "id": "2ee0dad3-981a-4424-9df9-6f1726abb77e",
            "is_enabled": true,
            "key_id": "2ee0dad3-981a-4424-9df9-6f1726abb77e",
            "key_usage": "ENCRYPT_DECRYPT",
            "multi_region": false,
            "policy": "{\"Id\":\"key-default-1\",\"Statement\":[{\"Action\":\"kms:*\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::767534018423:root\"},\"Resource\":\"*\",\"Sid\":\"Enable IAM User Permissions\"}],\"Version\":\"2012-10-17\"}",
            "tags": {}
          },
          "sensitive_values": {
            "tags": {},
            "tags_all": {}
          }
        }
      ],
      "child_modules": [
        {
          "resources": [
            {
              "address": "module.eks.aws_cloudwatch_log_group.this[0]",
              "mode": "managed",
              "type": "aws_cloudwatch_log_group",
              "name": "this",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "arn": "arn:aws:logs:us-east-1:767534018423:log-group:/aws/eks/dev-demo/cluster",
                "id": "/aws/eks/dev-demo/cluster",
                "kms_key_id": "",
                "name": "/aws/eks/dev-demo/cluster",
                "name_prefix": null,
                "retention_in_days": 90,
                "tags": {},
                "tags_all": {}
              },
              "sensitive_values": {
                "tags": {},
                "tags_all": {}
              }
            },
            {
              "address": "module.eks.aws_eks_addon.this[\"coredns\"]",
              "mode": "managed",
              "type": "aws_eks_addon",
              "name": "this",
              "index": "coredns",
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "addon_name": "coredns",
                "addon_version": "v1.8.4-eksbuild.1",
                "arn": "arn:aws:eks:us-east-1:767534018423:addon/dev-demo/coredns/80bf4445-f2f1-6c54-f1fb-f3128982c35b",
                "cluster_name": "dev-demo",
                "created_at": "2022-01-23T20:06:16Z",
                "id": "dev-demo:coredns",
                "modified_at": "2022-01-23T20:07:23Z",
                "resolve_conflicts": "OVERWRITE",
                "service_account_role_arn": "",
                "tags": {},
                "tags_all": {}
              },
              "sensitive_values": {
                "tags": {},
                "tags_all": {}
              }
            },
            {
              "address": "module.eks.aws_eks_addon.this[\"kube-proxy\"]",
              "mode": "managed",
              "type": "aws_eks_addon",
              "name": "this",
              "index": "kube-proxy",
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "addon_name": "kube-proxy",
                "addon_version": "v1.21.2-eksbuild.2",
                "arn": "arn:aws:eks:us-east-1:767534018423:addon/dev-demo/kube-proxy/b8bf4426-84de-1796-3d65-a2690dbeca36",
                "cluster_name": "dev-demo",
                "created_at": "2022-01-23T18:57:37Z",
                "id": "dev-demo:kube-proxy",
                "modified_at": "2022-01-23T18:57:38Z",
                "resolve_conflicts": null,
                "service_account_role_arn": "",
                "tags": {},
                "tags_all": {}
              },
              "sensitive_values": {
                "tags": {},
                "tags_all": {}
              }
            },
            {
              "address": "module.eks.aws_eks_addon.this[\"vpc-cni\"]",
              "mode": "managed",
              "type": "aws_eks_addon",
              "name": "this",
              "index": "vpc-cni",
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "addon_name": "vpc-cni",
                "addon_version": "v1.10.1-eksbuild.1",
                "arn": "arn:aws:eks:us-east-1:767534018423:addon/dev-demo/vpc-cni/7abf4426-84db-d9c0-8aa5-9e7349f4ef64",
                "cluster_name": "dev-demo",
                "created_at": "2022-01-23T18:57:37Z",
                "id": "dev-demo:vpc-cni",
                "modified_at": "2022-01-23T18:57:38Z",
                "resolve_conflicts": "OVERWRITE",
                "service_account_role_arn": "",
                "tags": {},
                "tags_all": {}
              },
              "sensitive_values": {
                "tags": {},
                "tags_all": {}
              }
            },
            {
              "address": "module.eks.aws_eks_cluster.this[0]",
              "mode": "managed",
              "type": "aws_eks_cluster",
              "name": "this",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "arn": "arn:aws:eks:us-east-1:767534018423:cluster/dev-demo",
                "certificate_authority": [
                  {
                    "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1ERXlNekU0TlRBME5Wb1hEVE15TURFeU1URTROVEEwTlZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTEdkCkRhTG5FTTh6UUJtbHJ3NGp3SjJCOXFzYXhrN21CcFM3L29nb3duNllCN2hPUnVGaG1mS2NITG8zWXdrTXI2RGoKQndBbWkrWkltOGZOYlRJN0djdER4WWlCUWFjbjgzS25ZZ01WeXZvVzRaRy9tOTB6WitIdThkYjZkZzRBY0xaVwowbnpUQ05oUm1QMG4rWCsxQkFyS1AwODRNU3poMUk5aWsxU3FtT09LbndvSXpDeGNJSTAvR3g4cWVNK1g1dnJwCkkvOFVTci9TNWdFM1NaT01YaGpaak9MQ21vM0dBRCtTTzFPMTZzUitYL3Q2YTEwMTdCWnJHd09ES2VMTlliMVgKWWRsTEdEbnUrc1d6N2JnN1BKWnpyY3NuUXJZc3I3eHNrc2x1WVdGZWNuWGNpQTRwRkpkTkh6dmFycnJmMkRiYgpwcmx0YzQrbHNzY2ozajZWMWtrQ0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZNK3d3eDZIM1c1VFJrYUNEaEZNc1lockF4Q3JNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFBYWdzdXp3QTJvYlBkRGt0Mng5ejJMWkhsSGpoV3dGeGFLUDF2Sm05RWJCalBZYVY2bQpUK2xBQnowRlFDSDRFQkxxRkFOakRNczNWYzhaWm4vODFDYkpvNE9zUE9acnU0K3lmcWRSaGIwYnUxamdaYW95Cm5iOElLUCs0Vy9RUTkvSGdrTWNvcVlpYXAyVmkrd2VNWFVBZFU1YkZXVW0xaWdld3htZkx6RlFYRk52a1BYWkoKZ21zTklYZjlCajE4aUpMQlYyaGExd3llWHlsdlU2Y1IzdFBZS01TSlFqYXJVaW5TOUUzQndDM3BnKzQ1VTYxcwpxTThvOWRkZDdQcll4bVdXcjQ5Z1dLTlRTQVcyNGRTSWo5ZCtXRW1ReUttVURvanlMM2o3aW40ZWtOejZpcGNxCmw2dys4b0pidUR2dDRsMnorNEY4ZlJnY0FraTNQSUFHTS9oRQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
                  }
                ],
                "created_at": "2022-01-23 18:44:06.563 +0000 UTC",
                "enabled_cluster_log_types": [
                  "api",
                  "audit",
                  "authenticator"
                ],
                "encryption_config": [
                  {
                    "provider": [
                      {
                        "key_arn": "arn:aws:kms:us-east-1:767534018423:key/2ee0dad3-981a-4424-9df9-6f1726abb77e"
                      }
                    ],
                    "resources": [
                      "secrets"
                    ]
                  }
                ],
                "endpoint": "https://25DA5279A39940D35B91C73BFFF97403.gr7.us-east-1.eks.amazonaws.com",
                "id": "dev-demo",
                "identity": [
                  {
                    "oidc": [
                      {
                        "issuer": "https://oidc.eks.us-east-1.amazonaws.com/id/25DA5279A39940D35B91C73BFFF97403"
                      }
                    ]
                  }
                ],
                "kubernetes_network_config": [
                  {
                    "ip_family": "ipv4",
                    "service_ipv4_cidr": "172.20.0.0/16"
                  }
                ],
                "name": "dev-demo",
                "platform_version": "eks.4",
                "role_arn": "arn:aws:iam::767534018423:role/dev-demo-cluster-20220123184037125300000001",
                "status": "ACTIVE",
                "tags": {},
                "tags_all": {},
                "timeouts": {
                  "create": null,
                  "delete": null,
                  "update": null
                },
                "version": "1.21",
                "vpc_config": [
                  {
                    "cluster_security_group_id": "sg-0657970c699ef7278",
                    "endpoint_private_access": true,
                    "endpoint_public_access": true,
                    "public_access_cidrs": [
                      "0.0.0.0/0"
                    ],
                    "security_group_ids": [
                      "sg-075f036ed87625991"
                    ],
                    "subnet_ids": [
                      "subnet-032ae1b0fdf5ec242",
                      "subnet-067ea905e5e41ae0f",
                      "subnet-069f93a090e0f24ed"
                    ],
                    "vpc_id": "vpc-00fc46c587795f3a2"
                  }
                ]
              },
              "sensitive_values": {
                "certificate_authority": [
                  {}
                ],
                "enabled_cluster_log_types": [
                  false,
                  false,
                  false
                ],
                "encryption_config": [
                  {
                    "provider": [
                      {}
                    ],
                    "resources": [
                      false
                    ]
                  }
                ],
                "identity": [
                  {
                    "oidc": [
                      {}
                    ]
                  }
                ],
                "kubernetes_network_config": [
                  {}
                ],
                "tags": {},
                "tags_all": {},
                "timeouts": {},
                "vpc_config": [
                  {
                    "public_access_cidrs": [
                      false
                    ],
                    "security_group_ids": [
                      false
                    ],
                    "subnet_ids": [
                      false,
                      false,
                      false
                    ]
                  }
                ]
              }
            },
            {
              "address": "module.eks.aws_iam_openid_connect_provider.oidc_provider[0]",
              "mode": "managed",
              "type": "aws_iam_openid_connect_provider",
              "name": "oidc_provider",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "arn": "arn:aws:iam::767534018423:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/25DA5279A39940D35B91C73BFFF97403",
                "client_id_list": [
                  "sts.amazonaws.com"
                ],
                "id": "arn:aws:iam::767534018423:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/25DA5279A39940D35B91C73BFFF97403",
                "tags": {
                  "Name": "dev-demo-eks-irsa"
                },
                "tags_all": {
                  "Name": "dev-demo-eks-irsa"
                },
                "thumbprint_list": [
                  "9e99a48a9960b14926bb7f3b02e22da2b0ab7280"
                ],
                "url": "oidc.eks.us-east-1.amazonaws.com/id/25DA5279A39940D35B91C73BFFF97403"
              },
              "sensitive_values": {
                "client_id_list": [
                  false
                ],
                "tags": {},
                "tags_all": {},
                "thumbprint_list": [
                  false
                ]
              }
            },
            {
              "address": "module.eks.aws_iam_role.this[0]",
              "mode": "managed",
              "type": "aws_iam_role",
              "name": "this",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "arn": "arn:aws:iam::767534018423:role/dev-demo-cluster-20220123184037125300000001",
                "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"EKSClusterAssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"eks.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                "create_date": "2022-01-23T18:40:42Z",
                "description": "",
                "force_detach_policies": true,
                "id": "dev-demo-cluster-20220123184037125300000001",
                "inline_policy": [
                  {
                    "name": "",
                    "policy": ""
                  }
                ],
                "managed_policy_arns": [
                  "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
                  "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController"
                ],
                "max_session_duration": 3600,
                "name": "dev-demo-cluster-20220123184037125300000001",
                "name_prefix": "dev-demo-cluster-",
                "path": "/",
                "permissions_boundary": null,
                "tags": {},
                "tags_all": {},
                "unique_id": "AROA3FNEXV53ZRKZR3HER"
              },
              "sensitive_values": {
                "inline_policy": [
                  {}
                ],
                "managed_policy_arns": [
                  false,
                  false
                ],
                "tags": {},
                "tags_all": {}
              }
            },
            {
              "address": "module.eks.aws_iam_role_policy_attachment.this[\"arn:aws:iam::aws:policy/AmazonEKSClusterPolicy\"]",
              "mode": "managed",
              "type": "aws_iam_role_policy_attachment",
              "name": "this",
              "index": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "id": "dev-demo-cluster-20220123184037125300000001-20220123184044089200000002",
                "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
                "role": "dev-demo-cluster-20220123184037125300000001"
              },
              "sensitive_values": {}
            },
            {
              "address": "module.eks.aws_iam_role_policy_attachment.this[\"arn:aws:iam::aws:policy/AmazonEKSVPCResourceController\"]",
              "mode": "managed",
              "type": "aws_iam_role_policy_attachment",
              "name": "this",
              "index": "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController",
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "id": "dev-demo-cluster-20220123184037125300000001-20220123184044090500000003",
                "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController",
                "role": "dev-demo-cluster-20220123184037125300000001"
              },
              "sensitive_values": {}
            },
            {
              "address": "module.eks.aws_security_group.cluster[0]",
              "mode": "managed",
              "type": "aws_security_group",
              "name": "cluster",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 1,
              "values": {
                "arn": "arn:aws:ec2:us-east-1:767534018423:security-group/sg-075f036ed87625991",
                "description": "EKS cluster security group",
                "egress": [
                  {
                    "cidr_blocks": [],
                    "description": "Cluster API to node groups",
                    "from_port": 443,
                    "ipv6_cidr_blocks": [],
                    "prefix_list_ids": [],
                    "protocol": "tcp",
                    "security_groups": [
                      "sg-08928dd39a77f67ac"
                    ],
                    "self": false,
                    "to_port": 443
                  },
                  {
                    "cidr_blocks": [],
                    "description": "Cluster API to node kubelets",
                    "from_port": 10250,
                    "ipv6_cidr_blocks": [],
                    "prefix_list_ids": [],
                    "protocol": "tcp",
                    "security_groups": [
                      "sg-08928dd39a77f67ac"
                    ],
                    "self": false,
                    "to_port": 10250
                  }
                ],
                "id": "sg-075f036ed87625991",
                "ingress": [
                  {
                    "cidr_blocks": [],
                    "description": "Node groups to cluster API",
                    "from_port": 443,
                    "ipv6_cidr_blocks": [],
                    "prefix_list_ids": [],
                    "protocol": "tcp",
                    "security_groups": [
                      "sg-08928dd39a77f67ac"
                    ],
                    "self": false,
                    "to_port": 443
                  }
                ],
                "name": "dev-demo-cluster-20220123184107765000000006",
                "name_prefix": "dev-demo-cluster-",
                "owner_id": "767534018423",
                "revoke_rules_on_delete": false,
                "tags": {
                  "Name": "dev-demo-cluster"
                },
                "tags_all": {
                  "Name": "dev-demo-cluster"
                },
                "timeouts": null,
                "vpc_id": "vpc-00fc46c587795f3a2"
              },
              "sensitive_values": {
                "egress": [
                  {
                    "cidr_blocks": [],
                    "ipv6_cidr_blocks": [],
                    "prefix_list_ids": [],
                    "security_groups": [
                      false
                    ]
                  },
                  {
                    "cidr_blocks": [],
                    "ipv6_cidr_blocks": [],
                    "prefix_list_ids": [],
                    "security_groups": [
                      false
                    ]
                  }
                ],
                "ingress": [
                  {
                    "cidr_blocks": [],
                    "ipv6_cidr_blocks": [],
                    "prefix_list_ids": [],
                    "security_groups": [
                      false
                    ]
                  }
                ],
                "tags": {},
                "tags_all": {}
              }
            },
            {
              "address": "module.eks.aws_security_group.node[0]",
              "mode": "managed",
              "type": "aws_security_group",
              "name": "node",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 1,
              "values": {
                "arn": "arn:aws:ec2:us-east-1:767534018423:security-group/sg-08928dd39a77f67ac",
                "description": "EKS node shared security group",
                "egress": [
                  {
                    "cidr_blocks": [
                      "0.0.0.0/0"
                    ],
                    "description": "Egress NTP/TCP to internet",
                    "from_port": 123,
                    "ipv6_cidr_blocks": [],
                    "prefix_list_ids": [],
                    "protocol": "tcp",
                    "security_groups": [],
                    "self": false,
                    "to_port": 123
                  },
                  {
                    "cidr_blocks": [
                      "0.0.0.0/0"
                    ],
                    "description": "Egress NTP/UDP to internet",
                    "from_port": 123,
                    "ipv6_cidr_blocks": [],
                    "prefix_list_ids": [],
                    "protocol": "udp",
                    "security_groups": [],
                    "self": false,
                    "to_port": 123
                  },
                  {
                    "cidr_blocks": [
                      "0.0.0.0/0"
                    ],
                    "description": "Egress all HTTPS to internet",
                    "from_port": 443,
                    "ipv6_cidr_blocks": [],
                    "prefix_list_ids": [],
                    "protocol": "tcp",
                    "security_groups": [],
                    "self": false,
                    "to_port": 443
                  },
                  {
                    "cidr_blocks": [],
                    "description": "Node groups to cluster API",
                    "from_port": 443,
                    "ipv6_cidr_blocks": [],
                    "prefix_list_ids": [],
                    "protocol": "tcp",
                    "security_groups": [
                      "sg-075f036ed87625991"
                    ],
                    "self": false,
                    "to_port": 443
                  },
                  {
                    "cidr_blocks": [],
                    "description": "Node to node CoreDNS",
                    "from_port": 53,
                    "ipv6_cidr_blocks": [],
                    "prefix_list_ids": [],
                    "protocol": "tcp",
                    "security_groups": [],
                    "self": true,
                    "to_port": 53
                  },
                  {
                    "cidr_blocks": [],
                    "description": "Node to node CoreDNS",
                    "from_port": 53,
                    "ipv6_cidr_blocks": [],
                    "prefix_list_ids": [],
                    "protocol": "udp",
                    "security_groups": [],
                    "self": true,
                    "to_port": 53
                  }
                ],
                "id": "sg-08928dd39a77f67ac",
                "ingress": [
                  {
                    "cidr_blocks": [],
                    "description": "",
                    "from_port": 0,
                    "ipv6_cidr_blocks": [],
                    "prefix_list_ids": [],
                    "protocol": "tcp",
                    "security_groups": [
                      "sg-019219e078749078d",
                      "sg-0f292d45544c84ff8"
                    ],
                    "self": false,
                    "to_port": 65535
                  },
                  {
                    "cidr_blocks": [],
                    "description": "Cluster API to node groups",
                    "from_port": 443,
                    "ipv6_cidr_blocks": [],
                    "prefix_list_ids": [],
                    "protocol": "tcp",
                    "security_groups": [
                      "sg-075f036ed87625991"
                    ],
                    "self": false,
                    "to_port": 443
                  },
                  {
                    "cidr_blocks": [],
                    "description": "Cluster API to node kubelets",
                    "from_port": 10250,
                    "ipv6_cidr_blocks": [],
                    "prefix_list_ids": [],
                    "protocol": "tcp",
                    "security_groups": [
                      "sg-075f036ed87625991"
                    ],
                    "self": false,
                    "to_port": 10250
                  },
                  {
                    "cidr_blocks": [],
                    "description": "Node to node CoreDNS",
                    "from_port": 53,
                    "ipv6_cidr_blocks": [],
                    "prefix_list_ids": [],
                    "protocol": "tcp",
                    "security_groups": [],
                    "self": true,
                    "to_port": 53
                  },
                  {
                    "cidr_blocks": [],
                    "description": "Node to node CoreDNS",
                    "from_port": 53,
                    "ipv6_cidr_blocks": [],
                    "prefix_list_ids": [],
                    "protocol": "udp",
                    "security_groups": [],
                    "self": true,
                    "to_port": 53
                  }
                ],
                "name": "dev-demo-node-20220123184107646300000005",
                "name_prefix": "dev-demo-node-",
                "owner_id": "767534018423",
                "revoke_rules_on_delete": false,
                "tags": {
                  "Name": "dev-demo-node",
                  "kubernetes.io/cluster/dev-demo": "owned"
                },
                "tags_all": {
                  "Name": "dev-demo-node",
                  "kubernetes.io/cluster/dev-demo": "owned"
                },
                "timeouts": null,
                "vpc_id": "vpc-00fc46c587795f3a2"
              },
              "sensitive_values": {
                "egress": [
                  {
                    "cidr_blocks": [
                      false
                    ],
                    "ipv6_cidr_blocks": [],
                    "prefix_list_ids": [],
                    "security_groups": []
                  },
                  {
                    "cidr_blocks": [
                      false
                    ],
                    "ipv6_cidr_blocks": [],
                    "prefix_list_ids": [],
                    "security_groups": []
                  },
                  {
                    "cidr_blocks": [
                      false
                    ],
                    "ipv6_cidr_blocks": [],
                    "prefix_list_ids": [],
                    "security_groups": []
                  },
                  {
                    "cidr_blocks": [],
                    "ipv6_cidr_blocks": [],
                    "prefix_list_ids": [],
                    "security_groups": [
                      false
                    ]
                  },
                  {
                    "cidr_blocks": [],
                    "ipv6_cidr_blocks": [],
                    "prefix_list_ids": [],
                    "security_groups": []
                  },
                  {
                    "cidr_blocks": [],
                    "ipv6_cidr_blocks": [],
                    "prefix_list_ids": [],
                    "security_groups": []
                  }
                ],
                "ingress": [
                  {
                    "cidr_blocks": [],
                    "ipv6_cidr_blocks": [],
                    "prefix_list_ids": [],
                    "security_groups": [
                      false,
                      false
                    ]
                  },
                  {
                    "cidr_blocks": [],
                    "ipv6_cidr_blocks": [],
                    "prefix_list_ids": [],
                    "security_groups": [
                      false
                    ]
                  },
                  {
                    "cidr_blocks": [],
                    "ipv6_cidr_blocks": [],
                    "prefix_list_ids": [],
                    "security_groups": [
                      false
                    ]
                  },
                  {
                    "cidr_blocks": [],
                    "ipv6_cidr_blocks": [],
                    "prefix_list_ids": [],
                    "security_groups": []
                  },
                  {
                    "cidr_blocks": [],
                    "ipv6_cidr_blocks": [],
                    "prefix_list_ids": [],
                    "security_groups": []
                  }
                ],
                "tags": {},
                "tags_all": {}
              }
            },
            {
              "address": "module.eks.aws_security_group_rule.cluster[\"egress_nodes_443\"]",
              "mode": "managed",
              "type": "aws_security_group_rule",
              "name": "cluster",
              "index": "egress_nodes_443",
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 2,
              "values": {
                "cidr_blocks": [],
                "description": "Cluster API to node groups",
                "from_port": 443,
                "id": "sgrule-2966506108",
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_group_id": "sg-075f036ed87625991",
                "self": false,
                "source_security_group_id": "sg-08928dd39a77f67ac",
                "to_port": 443,
                "type": "egress"
              },
              "sensitive_values": {
                "cidr_blocks": [],
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": []
              }
            },
            {
              "address": "module.eks.aws_security_group_rule.cluster[\"egress_nodes_kubelet\"]",
              "mode": "managed",
              "type": "aws_security_group_rule",
              "name": "cluster",
              "index": "egress_nodes_kubelet",
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 2,
              "values": {
                "cidr_blocks": [],
                "description": "Cluster API to node kubelets",
                "from_port": 10250,
                "id": "sgrule-4138226012",
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_group_id": "sg-075f036ed87625991",
                "self": false,
                "source_security_group_id": "sg-08928dd39a77f67ac",
                "to_port": 10250,
                "type": "egress"
              },
              "sensitive_values": {
                "cidr_blocks": [],
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": []
              }
            },
            {
              "address": "module.eks.aws_security_group_rule.cluster[\"ingress_nodes_443\"]",
              "mode": "managed",
              "type": "aws_security_group_rule",
              "name": "cluster",
              "index": "ingress_nodes_443",
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 2,
              "values": {
                "cidr_blocks": [],
                "description": "Node groups to cluster API",
                "from_port": 443,
                "id": "sgrule-436131350",
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_group_id": "sg-075f036ed87625991",
                "self": false,
                "source_security_group_id": "sg-08928dd39a77f67ac",
                "to_port": 443,
                "type": "ingress"
              },
              "sensitive_values": {
                "cidr_blocks": [],
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": []
              }
            },
            {
              "address": "module.eks.aws_security_group_rule.node[\"egress_cluster_443\"]",
              "mode": "managed",
              "type": "aws_security_group_rule",
              "name": "node",
              "index": "egress_cluster_443",
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 2,
              "values": {
                "cidr_blocks": [],
                "description": "Node groups to cluster API",
                "from_port": 443,
                "id": "sgrule-825455177",
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_group_id": "sg-08928dd39a77f67ac",
                "self": false,
                "source_security_group_id": "sg-075f036ed87625991",
                "to_port": 443,
                "type": "egress"
              },
              "sensitive_values": {
                "cidr_blocks": [],
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": []
              }
            },
            {
              "address": "module.eks.aws_security_group_rule.node[\"egress_https\"]",
              "mode": "managed",
              "type": "aws_security_group_rule",
              "name": "node",
              "index": "egress_https",
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 2,
              "values": {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "Egress all HTTPS to internet",
                "from_port": 443,
                "id": "sgrule-453343291",
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_group_id": "sg-08928dd39a77f67ac",
                "self": false,
                "source_security_group_id": null,
                "to_port": 443,
                "type": "egress"
              },
              "sensitive_values": {
                "cidr_blocks": [
                  false
                ],
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": []
              }
            },
            {
              "address": "module.eks.aws_security_group_rule.node[\"egress_ntp_tcp\"]",
              "mode": "managed",
              "type": "aws_security_group_rule",
              "name": "node",
              "index": "egress_ntp_tcp",
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 2,
              "values": {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "Egress NTP/TCP to internet",
                "from_port": 123,
                "id": "sgrule-3302704421",
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_group_id": "sg-08928dd39a77f67ac",
                "self": false,
                "source_security_group_id": null,
                "to_port": 123,
                "type": "egress"
              },
              "sensitive_values": {
                "cidr_blocks": [
                  false
                ],
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": []
              }
            },
            {
              "address": "module.eks.aws_security_group_rule.node[\"egress_ntp_udp\"]",
              "mode": "managed",
              "type": "aws_security_group_rule",
              "name": "node",
              "index": "egress_ntp_udp",
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 2,
              "values": {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "Egress NTP/UDP to internet",
                "from_port": 123,
                "id": "sgrule-3125108776",
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "udp",
                "security_group_id": "sg-08928dd39a77f67ac",
                "self": false,
                "source_security_group_id": null,
                "to_port": 123,
                "type": "egress"
              },
              "sensitive_values": {
                "cidr_blocks": [
                  false
                ],
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": []
              }
            },
            {
              "address": "module.eks.aws_security_group_rule.node[\"egress_self_coredns_tcp\"]",
              "mode": "managed",
              "type": "aws_security_group_rule",
              "name": "node",
              "index": "egress_self_coredns_tcp",
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 2,
              "values": {
                "cidr_blocks": [],
                "description": "Node to node CoreDNS",
                "from_port": 53,
                "id": "sgrule-2857198722",
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_group_id": "sg-08928dd39a77f67ac",
                "self": true,
                "source_security_group_id": "sg-08928dd39a77f67ac",
                "to_port": 53,
                "type": "egress"
              },
              "sensitive_values": {
                "cidr_blocks": [],
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": []
              }
            },
            {
              "address": "module.eks.aws_security_group_rule.node[\"egress_self_coredns_udp\"]",
              "mode": "managed",
              "type": "aws_security_group_rule",
              "name": "node",
              "index": "egress_self_coredns_udp",
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 2,
              "values": {
                "cidr_blocks": [],
                "description": "Node to node CoreDNS",
                "from_port": 53,
                "id": "sgrule-606791396",
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "udp",
                "security_group_id": "sg-08928dd39a77f67ac",
                "self": true,
                "source_security_group_id": "sg-08928dd39a77f67ac",
                "to_port": 53,
                "type": "egress"
              },
              "sensitive_values": {
                "cidr_blocks": [],
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": []
              }
            },
            {
              "address": "module.eks.aws_security_group_rule.node[\"ingress_cluster_443\"]",
              "mode": "managed",
              "type": "aws_security_group_rule",
              "name": "node",
              "index": "ingress_cluster_443",
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 2,
              "values": {
                "cidr_blocks": [],
                "description": "Cluster API to node groups",
                "from_port": 443,
                "id": "sgrule-3631171479",
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_group_id": "sg-08928dd39a77f67ac",
                "self": false,
                "source_security_group_id": "sg-075f036ed87625991",
                "to_port": 443,
                "type": "ingress"
              },
              "sensitive_values": {
                "cidr_blocks": [],
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": []
              }
            },
            {
              "address": "module.eks.aws_security_group_rule.node[\"ingress_cluster_kubelet\"]",
              "mode": "managed",
              "type": "aws_security_group_rule",
              "name": "node",
              "index": "ingress_cluster_kubelet",
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 2,
              "values": {
                "cidr_blocks": [],
                "description": "Cluster API to node kubelets",
                "from_port": 10250,
                "id": "sgrule-1111592918",
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_group_id": "sg-08928dd39a77f67ac",
                "self": false,
                "source_security_group_id": "sg-075f036ed87625991",
                "to_port": 10250,
                "type": "ingress"
              },
              "sensitive_values": {
                "cidr_blocks": [],
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": []
              }
            },
            {
              "address": "module.eks.aws_security_group_rule.node[\"ingress_self_coredns_tcp\"]",
              "mode": "managed",
              "type": "aws_security_group_rule",
              "name": "node",
              "index": "ingress_self_coredns_tcp",
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 2,
              "values": {
                "cidr_blocks": [],
                "description": "Node to node CoreDNS",
                "from_port": 53,
                "id": "sgrule-1138857251",
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_group_id": "sg-08928dd39a77f67ac",
                "self": true,
                "source_security_group_id": "sg-08928dd39a77f67ac",
                "to_port": 53,
                "type": "ingress"
              },
              "sensitive_values": {
                "cidr_blocks": [],
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": []
              }
            },
            {
              "address": "module.eks.aws_security_group_rule.node[\"ingress_self_coredns_udp\"]",
              "mode": "managed",
              "type": "aws_security_group_rule",
              "name": "node",
              "index": "ingress_self_coredns_udp",
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 2,
              "values": {
                "cidr_blocks": [],
                "description": "Node to node CoreDNS",
                "from_port": 53,
                "id": "sgrule-3888002764",
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "udp",
                "security_group_id": "sg-08928dd39a77f67ac",
                "self": true,
                "source_security_group_id": "sg-08928dd39a77f67ac",
                "to_port": 53,
                "type": "ingress"
              },
              "sensitive_values": {
                "cidr_blocks": [],
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": []
              }
            }
          ],
          "address": "module.eks",
          "child_modules": [
            {
              "resources": [
                {
                  "address": "module.eks.module.eks_managed_node_group[\"green\"].aws_eks_node_group.this[0]",
                  "mode": "managed",
                  "type": "aws_eks_node_group",
                  "name": "this",
                  "index": 0,
                  "provider_name": "registry.terraform.io/hashicorp/aws",
                  "schema_version": 0,
                  "values": {
                    "ami_type": "AL2_x86_64",
                    "arn": "arn:aws:eks:us-east-1:767534018423:nodegroup/dev-demo/green-20220123200614296200000001/24bf4445-ee8f-8da0-8398-b248ddd91ac7",
                    "capacity_type": "SPOT",
                    "cluster_name": "dev-demo",
                    "disk_size": 0,
                    "force_update_version": null,
                    "id": "dev-demo:green-20220123200614296200000001",
                    "instance_types": [
                      "t3.medium"
                    ],
                    "labels": {},
                    "launch_template": [
                      {
                        "id": "lt-0155e6d9255d12fea",
                        "name": "green-20220123185736995900000016"
                      }
                    ],
                    "node_group_name": "green-20220123200614296200000001",
                    "node_group_name_prefix": "green-",
                    "node_role_arn": "arn:aws:iam::767534018423:role/green-eks-node-group-2022012318411901130000000a",
                    "release_version": "1.21.5-20220112",
                    "remote_access": [],
                    "resources": [
                      {
                        "autoscaling_groups": [
                          {
                            "name": "eks-green-20220123200614296200000001-24bf4445-ee8f-8da0-8398-b248ddd91ac7"
                          }
                        ],
                        "remote_access_security_group_id": ""
                      }
                    ],
                    "scaling_config": [
                      {
                        "desired_size": 1,
                        "max_size": 10,
                        "min_size": 1
                      }
                    ],
                    "status": "ACTIVE",
                    "subnet_ids": [
                      "subnet-032ae1b0fdf5ec242",
                      "subnet-067ea905e5e41ae0f",
                      "subnet-069f93a090e0f24ed"
                    ],
                    "tags": {
                      "Name": "green"
                    },
                    "tags_all": {
                      "Name": "green"
                    },
                    "taint": [],
                    "timeouts": {
                      "create": null,
                      "delete": null,
                      "update": null
                    },
                    "update_config": [
                      {
                        "max_unavailable": 1,
                        "max_unavailable_percentage": 0
                      }
                    ],
                    "version": "1.21"
                  },
                  "sensitive_values": {
                    "instance_types": [
                      false
                    ],
                    "labels": {},
                    "launch_template": [
                      {}
                    ],
                    "remote_access": [],
                    "resources": [
                      {
                        "autoscaling_groups": [
                          {}
                        ]
                      }
                    ],
                    "scaling_config": [
                      {}
                    ],
                    "subnet_ids": [
                      false,
                      false,
                      false
                    ],
                    "tags": {},
                    "tags_all": {},
                    "taint": [],
                    "timeouts": {},
                    "update_config": [
                      {}
                    ]
                  }
                },
                {
                  "address": "module.eks.module.eks_managed_node_group[\"green\"].aws_iam_role.this[0]",
                  "mode": "managed",
                  "type": "aws_iam_role",
                  "name": "this",
                  "index": 0,
                  "provider_name": "registry.terraform.io/hashicorp/aws",
                  "schema_version": 0,
                  "values": {
                    "arn": "arn:aws:iam::767534018423:role/green-eks-node-group-2022012318411901130000000a",
                    "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"EKSNodeAssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                    "create_date": "2022-01-23T18:41:19Z",
                    "description": "EKS managed node group IAM role",
                    "force_detach_policies": true,
                    "id": "green-eks-node-group-2022012318411901130000000a",
                    "inline_policy": [
                      {
                        "name": "",
                        "policy": ""
                      }
                    ],
                    "managed_policy_arns": [
                      "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
                      "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
                      "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"
                    ],
                    "max_session_duration": 3600,
                    "name": "green-eks-node-group-2022012318411901130000000a",
                    "name_prefix": "green-eks-node-group-",
                    "path": "/",
                    "permissions_boundary": null,
                    "tags": {},
                    "unique_id": "AROA3FNEXV53U7NI7TN7C"
                  },
                  "sensitive_values": {
                    "inline_policy": [
                      {}
                    ],
                    "managed_policy_arns": [
                      false,
                      false,
                      false
                    ],
                    "tags": {},
                    "tags_all": {}
                  }
                },
                {
                  "address": "module.eks.module.eks_managed_node_group[\"green\"].aws_iam_role_policy_attachment.this[\"arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly\"]",
                  "mode": "managed",
                  "type": "aws_iam_role_policy_attachment",
                  "name": "this",
                  "index": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
                  "provider_name": "registry.terraform.io/hashicorp/aws",
                  "schema_version": 0,
                  "values": {
                    "id": "green-eks-node-group-2022012318411901130000000a-20220123184121525700000010",
                    "policy_arn": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
                    "role": "green-eks-node-group-2022012318411901130000000a"
                  },
                  "sensitive_values": {}
                },
                {
                  "address": "module.eks.module.eks_managed_node_group[\"green\"].aws_iam_role_policy_attachment.this[\"arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy\"]",
                  "mode": "managed",
                  "type": "aws_iam_role_policy_attachment",
                  "name": "this",
                  "index": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
                  "provider_name": "registry.terraform.io/hashicorp/aws",
                  "schema_version": 0,
                  "values": {
                    "id": "green-eks-node-group-2022012318411901130000000a-2022012318412139080000000f",
                    "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
                    "role": "green-eks-node-group-2022012318411901130000000a"
                  },
                  "sensitive_values": {}
                },
                {
                  "address": "module.eks.module.eks_managed_node_group[\"green\"].aws_iam_role_policy_attachment.this[\"arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy\"]",
                  "mode": "managed",
                  "type": "aws_iam_role_policy_attachment",
                  "name": "this",
                  "index": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
                  "provider_name": "registry.terraform.io/hashicorp/aws",
                  "schema_version": 0,
                  "values": {
                    "id": "green-eks-node-group-2022012318411901130000000a-2022012318412131010000000d",
                    "policy_arn": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
                    "role": "green-eks-node-group-2022012318411901130000000a"
                  },
                  "sensitive_values": {}
                },
                {
                  "address": "module.eks.module.eks_managed_node_group[\"green\"].aws_launch_template.this[0]",
                  "mode": "managed",
                  "type": "aws_launch_template",
                  "name": "this",
                  "index": 0,
                  "provider_name": "registry.terraform.io/hashicorp/aws",
                  "schema_version": 0,
                  "values": {
                    "arn": "arn:aws:ec2:us-east-1:767534018423:launch-template/lt-0155e6d9255d12fea",
                    "block_device_mappings": [],
                    "capacity_reservation_specification": [],
                    "cpu_options": [],
                    "credit_specification": [],
                    "description": "Custom launch template for green EKS managed node group",
                    "disable_api_termination": false,
                    "ebs_optimized": "",
                    "elastic_gpu_specifications": [],
                    "elastic_inference_accelerator": [],
                    "enclave_options": [],
                    "hibernation_options": [],
                    "iam_instance_profile": [],
                    "id": "lt-0155e6d9255d12fea",
                    "image_id": "",
                    "instance_initiated_shutdown_behavior": "",
                    "instance_market_options": [],
                    "instance_type": "",
                    "kernel_id": "",
                    "key_name": "",
                    "license_specification": [],
                    "metadata_options": [
                      {
                        "http_endpoint": "enabled",
                        "http_protocol_ipv6": "disabled",
                        "http_put_response_hop_limit": 2,
                        "http_tokens": "required",
                        "instance_metadata_tags": "disabled"
                      }
                    ],
                    "monitoring": [
                      {
                        "enabled": true
                      }
                    ],
                    "name": "green-20220123185736995900000016",
                    "name_prefix": "green-",
                    "network_interfaces": [],
                    "placement": [],
                    "ram_disk_id": "",
                    "security_group_names": [],
                    "tag_specifications": [
                      {
                        "resource_type": "instance",
                        "tags": {
                          "Name": "green"
                        }
                      },
                      {
                        "resource_type": "network-interface",
                        "tags": {
                          "Name": "green"
                        }
                      },
                      {
                        "resource_type": "volume",
                        "tags": {
                          "Name": "green"
                        }
                      }
                    ],
                    "tags": {},
                    "update_default_version": true,
                    "user_data": "",
                    "vpc_security_group_ids": [
                      "sg-07671c060ced2bc33",
                      "sg-08928dd39a77f67ac"
                    ]
                  },
                  "sensitive_values": {
                    "block_device_mappings": [],
                    "capacity_reservation_specification": [],
                    "cpu_options": [],
                    "credit_specification": [],
                    "elastic_gpu_specifications": [],
                    "elastic_inference_accelerator": [],
                    "enclave_options": [],
                    "hibernation_options": [],
                    "iam_instance_profile": [],
                    "instance_market_options": [],
                    "license_specification": [],
                    "metadata_options": [
                      {}
                    ],
                    "monitoring": [
                      {}
                    ],
                    "network_interfaces": [],
                    "placement": [],
                    "security_group_names": [],
                    "tag_specifications": [
                      {
                        "tags": {}
                      },
                      {
                        "tags": {}
                      },
                      {
                        "tags": {}
                      }
                    ],
                    "tags": {},
                    "tags_all": {},
                    "vpc_security_group_ids": [
                      false,
                      false
                    ]
                  }
                },
                {
                  "address": "module.eks.module.eks_managed_node_group[\"green\"].aws_security_group.this[0]",
                  "mode": "managed",
                  "type": "aws_security_group",
                  "name": "this",
                  "index": 0,
                  "provider_name": "registry.terraform.io/hashicorp/aws",
                  "schema_version": 1,
                  "values": {
                    "arn": "arn:aws:ec2:us-east-1:767534018423:security-group/sg-07671c060ced2bc33",
                    "description": "EKS managed node group security group",
                    "egress": [],
                    "id": "sg-07671c060ced2bc33",
                    "ingress": [],
                    "name": "green-eks-node-group-20220123184117153600000007",
                    "name_prefix": "green-eks-node-group-",
                    "owner_id": "767534018423",
                    "revoke_rules_on_delete": false,
                    "tags": {
                      "Name": "green-eks-node-group"
                    },
                    "tags_all": {
                      "Name": "green-eks-node-group"
                    },
                    "timeouts": null,
                    "vpc_id": "vpc-00fc46c587795f3a2"
                  },
                  "sensitive_values": {
                    "egress": [],
                    "ingress": [],
                    "tags": {},
                    "tags_all": {}
                  }
                }
              ],
              "address": "module.eks.module.eks_managed_node_group[\"green\"]"
            },
            {
              "resources": [
                {
                  "address": "module.eks.module.eks_managed_node_group[\"blue\"].aws_eks_node_group.this[0]",
                  "mode": "managed",
                  "type": "aws_eks_node_group",
                  "name": "this",
                  "index": 0,
                  "provider_name": "registry.terraform.io/hashicorp/aws",
                  "schema_version": 0,
                  "values": {
                    "ami_type": "AL2_x86_64",
                    "arn": "arn:aws:eks:us-east-1:767534018423:nodegroup/dev-demo/blue-20220123200614296800000003/f6bf4445-eefc-1ec1-69d9-693c79adb61a",
                    "capacity_type": "ON_DEMAND",
                    "cluster_name": "dev-demo",
                    "disk_size": 0,
                    "force_update_version": null,
                    "id": "dev-demo:blue-20220123200614296800000003",
                    "instance_types": [
                      "t3.medium",
                      "t3.large",
                      "c5.large"
                    ],
                    "labels": {},
                    "launch_template": [
                      {
                        "id": "lt-09056990f5a86652e",
                        "name": "blue-20220123185736995400000014"
                      }
                    ],
                    "node_group_name": "blue-20220123200614296800000003",
                    "node_group_name_prefix": "blue-",
                    "node_role_arn": "arn:aws:iam::767534018423:role/blue-eks-node-group-20220123184118752000000009",
                    "release_version": "1.21.5-20220112",
                    "remote_access": [],
                    "resources": [
                      {
                        "autoscaling_groups": [
                          {
                            "name": "eks-blue-20220123200614296800000003-f6bf4445-eefc-1ec1-69d9-693c79adb61a"
                          }
                        ],
                        "remote_access_security_group_id": ""
                      }
                    ],
                    "scaling_config": [
                      {
                        "desired_size": 1,
                        "max_size": 3,
                        "min_size": 1
                      }
                    ],
                    "status": "ACTIVE",
                    "subnet_ids": [
                      "subnet-032ae1b0fdf5ec242",
                      "subnet-067ea905e5e41ae0f",
                      "subnet-069f93a090e0f24ed"
                    ],
                    "tags": {
                      "Name": "blue"
                    },
                    "tags_all": {
                      "Name": "blue"
                    },
                    "taint": [],
                    "timeouts": {
                      "create": null,
                      "delete": null,
                      "update": null
                    },
                    "update_config": [
                      {
                        "max_unavailable": 1,
                        "max_unavailable_percentage": 0
                      }
                    ],
                    "version": "1.21"
                  },
                  "sensitive_values": {
                    "instance_types": [
                      false,
                      false,
                      false
                    ],
                    "labels": {},
                    "launch_template": [
                      {}
                    ],
                    "remote_access": [],
                    "resources": [
                      {
                        "autoscaling_groups": [
                          {}
                        ]
                      }
                    ],
                    "scaling_config": [
                      {}
                    ],
                    "subnet_ids": [
                      false,
                      false,
                      false
                    ],
                    "tags": {},
                    "tags_all": {},
                    "taint": [],
                    "timeouts": {},
                    "update_config": [
                      {}
                    ]
                  }
                },
                {
                  "address": "module.eks.module.eks_managed_node_group[\"blue\"].aws_iam_role.this[0]",
                  "mode": "managed",
                  "type": "aws_iam_role",
                  "name": "this",
                  "index": 0,
                  "provider_name": "registry.terraform.io/hashicorp/aws",
                  "schema_version": 0,
                  "values": {
                    "arn": "arn:aws:iam::767534018423:role/blue-eks-node-group-20220123184118752000000009",
                    "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"EKSNodeAssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                    "create_date": "2022-01-23T18:41:18Z",
                    "description": "EKS managed node group IAM role",
                    "force_detach_policies": true,
                    "id": "blue-eks-node-group-20220123184118752000000009",
                    "inline_policy": [
                      {
                        "name": "",
                        "policy": ""
                      }
                    ],
                    "managed_policy_arns": [
                      "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
                      "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
                      "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"
                    ],
                    "max_session_duration": 3600,
                    "name": "blue-eks-node-group-20220123184118752000000009",
                    "name_prefix": "blue-eks-node-group-",
                    "path": "/",
                    "permissions_boundary": null,
                    "tags": {},
                    "tags_all": {},
                    "unique_id": "AROA3FNEXV535CQ3GIGNZ"
                  },
                  "sensitive_values": {
                    "inline_policy": [
                      {}
                    ],
                    "managed_policy_arns": [
                      false,
                      false,
                      false
                    ],
                    "tags": {},
                    "tags_all": {}
                  }
                },
                {
                  "address": "module.eks.module.eks_managed_node_group[\"blue\"].aws_iam_role_policy_attachment.this[\"arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly\"]",
                  "mode": "managed",
                  "type": "aws_iam_role_policy_attachment",
                  "name": "this",
                  "index": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
                  "provider_name": "registry.terraform.io/hashicorp/aws",
                  "schema_version": 0,
                  "values": {
                    "id": "blue-eks-node-group-20220123184118752000000009-2022012318412103960000000c",
                    "policy_arn": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
                    "role": "blue-eks-node-group-20220123184118752000000009"
                  },
                  "sensitive_values": {}
                },
                {
                  "address": "module.eks.module.eks_managed_node_group[\"blue\"].aws_iam_role_policy_attachment.this[\"arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy\"]",
                  "mode": "managed",
                  "type": "aws_iam_role_policy_attachment",
                  "name": "this",
                  "index": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
                  "provider_name": "registry.terraform.io/hashicorp/aws",
                  "schema_version": 0,
                  "values": {
                    "id": "blue-eks-node-group-20220123184118752000000009-2022012318412132100000000e",
                    "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
                    "role": "blue-eks-node-group-20220123184118752000000009"
                  },
                  "sensitive_values": {}
                },
                {
                  "address": "module.eks.module.eks_managed_node_group[\"blue\"].aws_iam_role_policy_attachment.this[\"arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy\"]",
                  "mode": "managed",
                  "type": "aws_iam_role_policy_attachment",
                  "name": "this",
                  "index": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
                  "provider_name": "registry.terraform.io/hashicorp/aws",
                  "schema_version": 0,
                  "values": {
                    "id": "blue-eks-node-group-20220123184118752000000009-2022012318412080060000000b",
                    "policy_arn": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
                    "role": "blue-eks-node-group-20220123184118752000000009"
                  },
                  "sensitive_values": {}
                },
                {
                  "address": "module.eks.module.eks_managed_node_group[\"blue\"].aws_launch_template.this[0]",
                  "mode": "managed",
                  "type": "aws_launch_template",
                  "name": "this",
                  "index": 0,
                  "provider_name": "registry.terraform.io/hashicorp/aws",
                  "schema_version": 0,
                  "values": {
                    "arn": "arn:aws:ec2:us-east-1:767534018423:launch-template/lt-09056990f5a86652e",
                    "block_device_mappings": [],
                    "capacity_reservation_specification": [],
                    "cpu_options": [],
                    "credit_specification": [],
                    "description": "Custom launch template for blue EKS managed node group",
                    "disable_api_termination": false,
                    "ebs_optimized": "",
                    "elastic_gpu_specifications": [],
                    "elastic_inference_accelerator": [],
                    "enclave_options": [],
                    "hibernation_options": [],
                    "iam_instance_profile": [],
                    "id": "lt-09056990f5a86652e",
                    "image_id": "",
                    "instance_initiated_shutdown_behavior": "",
                    "instance_market_options": [],
                    "instance_type": "",
                    "kernel_id": "",
                    "key_name": "",
                    "license_specification": [],
                    "metadata_options": [
                      {
                        "http_endpoint": "enabled",
                        "http_protocol_ipv6": "disabled",
                        "http_put_response_hop_limit": 2,
                        "http_tokens": "required",
                        "instance_metadata_tags": "disabled"
                      }
                    ],
                    "monitoring": [
                      {
                        "enabled": true
                      }
                    ],
                    "name": "blue-20220123185736995400000014",
                    "name_prefix": "blue-",
                    "network_interfaces": [],
                    "placement": [],
                    "ram_disk_id": "",
                    "security_group_names": [],
                    "tag_specifications": [
                      {
                        "resource_type": "instance",
                        "tags": {
                          "Name": "blue"
                        }
                      },
                      {
                        "resource_type": "network-interface",
                        "tags": {
                          "Name": "blue"
                        }
                      },
                      {
                        "resource_type": "volume",
                        "tags": {
                          "Name": "blue"
                        }
                      }
                    ],
                    "tags": {},
                    "tags_all": {},
                    "update_default_version": true,
                    "user_data": "",
                    "vpc_security_group_ids": [
                      "sg-068475abe08320154",
                      "sg-08928dd39a77f67ac"
                    ]
                  },
                  "sensitive_values": {
                    "block_device_mappings": [],
                    "capacity_reservation_specification": [],
                    "cpu_options": [],
                    "credit_specification": [],
                    "elastic_gpu_specifications": [],
                    "elastic_inference_accelerator": [],
                    "enclave_options": [],
                    "hibernation_options": [],
                    "iam_instance_profile": [],
                    "instance_market_options": [],
                    "license_specification": [],
                    "metadata_options": [
                      {}
                    ],
                    "monitoring": [
                      {}
                    ],
                    "network_interfaces": [],
                    "placement": [],
                    "security_group_names": [],
                    "tag_specifications": [
                      {
                        "tags": {}
                      },
                      {
                        "tags": {}
                      },
                      {
                        "tags": {}
                      }
                    ],
                    "tags": {},
                    "tags_all": {},
                    "vpc_security_group_ids": [
                      false,
                      false
                    ]
                  }
                },
                {
                  "address": "module.eks.module.eks_managed_node_group[\"blue\"].aws_security_group.this[0]",
                  "mode": "managed",
                  "type": "aws_security_group",
                  "name": "this",
                  "index": 0,
                  "provider_name": "registry.terraform.io/hashicorp/aws",
                  "schema_version": 1,
                  "values": {
                    "arn": "arn:aws:ec2:us-east-1:767534018423:security-group/sg-068475abe08320154",
                    "description": "EKS managed node group security group",
                    "egress": [],
                    "id": "sg-068475abe08320154",
                    "ingress": [],
                    "name": "blue-eks-node-group-20220123184118375200000008",
                    "name_prefix": "blue-eks-node-group-",
                    "owner_id": "767534018423",
                    "revoke_rules_on_delete": false,
                    "tags": {
                      "Name": "blue-eks-node-group"
                    },
                    "tags_all": {
                      "Name": "blue-eks-node-group"
                    },
                    "timeouts": null,
                    "vpc_id": "vpc-00fc46c587795f3a2"
                  },
                  "sensitive_values": {
                    "egress": [],
                    "ingress": [],
                    "tags": {},
                    "tags_all": {}
                  }
                }
              ],
              "address": "module.eks.module.eks_managed_node_group[\"blue\"]"
            }
          ]
        },
        {
          "resources": [
            {
              "address": "module.vpc.aws_eip.nat[0]",
              "mode": "managed",
              "type": "aws_eip",
              "name": "nat",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "address": null,
                "allocation_id": "eipalloc-0bd9b6ac0c333edd0",
                "associate_with_private_ip": null,
                "association_id": "eipassoc-0e18ee59147831411",
                "carrier_ip": "",
                "customer_owned_ip": "",
                "customer_owned_ipv4_pool": "",
                "domain": "vpc",
                "id": "eipalloc-0bd9b6ac0c333edd0",
                "instance": "",
                "network_border_group": "us-east-1",
                "network_interface": "eni-072159fa7287e87b9",
                "private_dns": "ip-10-0-101-61.ec2.internal",
                "private_ip": "10.0.101.61",
                "public_dns": "ec2-3-211-123-169.compute-1.amazonaws.com",
                "public_ip": "3.211.123.169",
                "public_ipv4_pool": "amazon",
                "tags": {
                  "Name": "dev-demo-us-east-1a"
                },
                "tags_all": {
                  "Name": "dev-demo-us-east-1a"
                },
                "timeouts": null,
                "vpc": true
              },
              "sensitive_values": {
                "tags": {},
                "tags_all": {}
              }
            },
            {
              "address": "module.vpc.aws_internet_gateway.this[0]",
              "mode": "managed",
              "type": "aws_internet_gateway",
              "name": "this",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "arn": "arn:aws:ec2:us-east-1:767534018423:internet-gateway/igw-0b3e64c326d3990a7",
                "id": "igw-0b3e64c326d3990a7",
                "owner_id": "767534018423",
                "tags": {
                  "Name": "dev-demo"
                },
                "tags_all": {
                  "Name": "dev-demo"
                },
                "vpc_id": "vpc-00fc46c587795f3a2"
              },
              "sensitive_values": {
                "tags": {},
                "tags_all": {}
              }
            },
            {
              "address": "module.vpc.aws_nat_gateway.this[0]",
              "mode": "managed",
              "type": "aws_nat_gateway",
              "name": "this",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "allocation_id": "eipalloc-0bd9b6ac0c333edd0",
                "connectivity_type": "public",
                "id": "nat-01227269d9bda2820",
                "network_interface_id": "eni-072159fa7287e87b9",
                "private_ip": "10.0.101.61",
                "public_ip": "3.211.123.169",
                "subnet_id": "subnet-015a80f9cbeb9e75e",
                "tags": {
                  "Name": "dev-demo-us-east-1a"
                },
                "tags_all": {
                  "Name": "dev-demo-us-east-1a"
                }
              },
              "sensitive_values": {
                "tags": {},
                "tags_all": {}
              }
            },
            {
              "address": "module.vpc.aws_route.private_nat_gateway[0]",
              "mode": "managed",
              "type": "aws_route",
              "name": "private_nat_gateway",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "carrier_gateway_id": "",
                "destination_cidr_block": "0.0.0.0/0",
                "destination_ipv6_cidr_block": "",
                "destination_prefix_list_id": "",
                "egress_only_gateway_id": "",
                "gateway_id": "",
                "id": "r-rtb-0eb5c8bc130cb61471080289494",
                "instance_id": "",
                "instance_owner_id": "",
                "local_gateway_id": "",
                "nat_gateway_id": "nat-01227269d9bda2820",
                "network_interface_id": "",
                "origin": "CreateRoute",
                "route_table_id": "rtb-0eb5c8bc130cb6147",
                "state": "active",
                "timeouts": {
                  "create": "5m",
                  "delete": null,
                  "update": null
                },
                "transit_gateway_id": "",
                "vpc_endpoint_id": "",
                "vpc_peering_connection_id": ""
              },
              "sensitive_values": {
                "timeouts": {}
              }
            },
            {
              "address": "module.vpc.aws_route.public_internet_gateway[0]",
              "mode": "managed",
              "type": "aws_route",
              "name": "public_internet_gateway",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "carrier_gateway_id": "",
                "destination_cidr_block": "0.0.0.0/0",
                "destination_ipv6_cidr_block": "",
                "destination_prefix_list_id": "",
                "egress_only_gateway_id": "",
                "gateway_id": "igw-0b3e64c326d3990a7",
                "id": "r-rtb-0ca1a45db0732b6341080289494",
                "instance_id": "",
                "instance_owner_id": "",
                "local_gateway_id": "",
                "nat_gateway_id": "",
                "network_interface_id": "",
                "origin": "CreateRoute",
                "route_table_id": "rtb-0ca1a45db0732b634",
                "state": "active",
                "timeouts": {
                  "create": "5m",
                  "delete": null,
                  "update": null
                },
                "transit_gateway_id": "",
                "vpc_endpoint_id": "",
                "vpc_peering_connection_id": ""
              },
              "sensitive_values": {
                "timeouts": {}
              }
            },
            {
              "address": "module.vpc.aws_route_table.private[0]",
              "mode": "managed",
              "type": "aws_route_table",
              "name": "private",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "arn": "arn:aws:ec2:us-east-1:767534018423:route-table/rtb-0eb5c8bc130cb6147",
                "id": "rtb-0eb5c8bc130cb6147",
                "owner_id": "767534018423",
                "propagating_vgws": [],
                "route": [
                  {
                    "carrier_gateway_id": "",
                    "cidr_block": "0.0.0.0/0",
                    "destination_prefix_list_id": "",
                    "egress_only_gateway_id": "",
                    "gateway_id": "",
                    "instance_id": "",
                    "ipv6_cidr_block": "",
                    "local_gateway_id": "",
                    "nat_gateway_id": "nat-01227269d9bda2820",
                    "network_interface_id": "",
                    "transit_gateway_id": "",
                    "vpc_endpoint_id": "",
                    "vpc_peering_connection_id": ""
                  }
                ],
                "tags": {
                  "Name": "dev-demo-private"
                },
                "tags_all": {
                  "Name": "dev-demo-private"
                },
                "timeouts": null,
                "vpc_id": "vpc-00fc46c587795f3a2"
              },
              "sensitive_values": {
                "propagating_vgws": [],
                "route": [
                  {}
                ],
                "tags": {},
                "tags_all": {}
              }
            },
            {
              "address": "module.vpc.aws_route_table.public[0]",
              "mode": "managed",
              "type": "aws_route_table",
              "name": "public",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "arn": "arn:aws:ec2:us-east-1:767534018423:route-table/rtb-0ca1a45db0732b634",
                "id": "rtb-0ca1a45db0732b634",
                "owner_id": "767534018423",
                "propagating_vgws": [],
                "route": [
                  {
                    "carrier_gateway_id": "",
                    "cidr_block": "0.0.0.0/0",
                    "destination_prefix_list_id": "",
                    "egress_only_gateway_id": "",
                    "gateway_id": "igw-0b3e64c326d3990a7",
                    "instance_id": "",
                    "ipv6_cidr_block": "",
                    "local_gateway_id": "",
                    "nat_gateway_id": "",
                    "network_interface_id": "",
                    "transit_gateway_id": "",
                    "vpc_endpoint_id": "",
                    "vpc_peering_connection_id": ""
                  }
                ],
                "tags": {
                  "Name": "dev-demo-public"
                },
                "tags_all": {
                  "Name": "dev-demo-public"
                },
                "timeouts": null,
                "vpc_id": "vpc-00fc46c587795f3a2"
              },
              "sensitive_values": {
                "propagating_vgws": [],
                "route": [
                  {}
                ],
                "tags": {},
                "tags_all": {}
              }
            },
            {
              "address": "module.vpc.aws_route_table_association.private[0]",
              "mode": "managed",
              "type": "aws_route_table_association",
              "name": "private",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "gateway_id": "",
                "id": "rtbassoc-0dbf897e6c0674c74",
                "route_table_id": "rtb-0eb5c8bc130cb6147",
                "subnet_id": "subnet-067ea905e5e41ae0f"
              },
              "sensitive_values": {}
            },
            {
              "address": "module.vpc.aws_route_table_association.private[1]",
              "mode": "managed",
              "type": "aws_route_table_association",
              "name": "private",
              "index": 1,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "gateway_id": "",
                "id": "rtbassoc-0ae2be6d9e1029d67",
                "route_table_id": "rtb-0eb5c8bc130cb6147",
                "subnet_id": "subnet-069f93a090e0f24ed"
              },
              "sensitive_values": {}
            },
            {
              "address": "module.vpc.aws_route_table_association.private[2]",
              "mode": "managed",
              "type": "aws_route_table_association",
              "name": "private",
              "index": 2,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "gateway_id": "",
                "id": "rtbassoc-0fd8306dcd3c5b927",
                "route_table_id": "rtb-0eb5c8bc130cb6147",
                "subnet_id": "subnet-032ae1b0fdf5ec242"
              },
              "sensitive_values": {}
            },
            {
              "address": "module.vpc.aws_route_table_association.public[0]",
              "mode": "managed",
              "type": "aws_route_table_association",
              "name": "public",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "gateway_id": "",
                "id": "rtbassoc-04058f42e5bec65b3",
                "route_table_id": "rtb-0ca1a45db0732b634",
                "subnet_id": "subnet-015a80f9cbeb9e75e"
              },
              "sensitive_values": {}
            },
            {
              "address": "module.vpc.aws_route_table_association.public[1]",
              "mode": "managed",
              "type": "aws_route_table_association",
              "name": "public",
              "index": 1,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "gateway_id": "",
                "id": "rtbassoc-0ffe7adffcfff917c",
                "route_table_id": "rtb-0ca1a45db0732b634",
                "subnet_id": "subnet-08c80cb915aa41451"
              },
              "sensitive_values": {}
            },
            {
              "address": "module.vpc.aws_route_table_association.public[2]",
              "mode": "managed",
              "type": "aws_route_table_association",
              "name": "public",
              "index": 2,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "gateway_id": "",
                "id": "rtbassoc-0de8ab0eaf4aa392f",
                "route_table_id": "rtb-0ca1a45db0732b634",
                "subnet_id": "subnet-0ecbc0b2e847025a0"
              },
              "sensitive_values": {}
            },
            {
              "address": "module.vpc.aws_subnet.private[0]",
              "mode": "managed",
              "type": "aws_subnet",
              "name": "private",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 1,
              "values": {
                "arn": "arn:aws:ec2:us-east-1:767534018423:subnet/subnet-067ea905e5e41ae0f",
                "assign_ipv6_address_on_creation": false,
                "availability_zone": "us-east-1a",
                "availability_zone_id": "use1-az2",
                "cidr_block": "10.0.1.0/24",
                "customer_owned_ipv4_pool": "",
                "enable_dns64": false,
                "enable_resource_name_dns_a_record_on_launch": false,
                "enable_resource_name_dns_aaaa_record_on_launch": false,
                "id": "subnet-067ea905e5e41ae0f",
                "ipv6_cidr_block": "",
                "ipv6_cidr_block_association_id": "",
                "ipv6_native": false,
                "map_customer_owned_ip_on_launch": false,
                "map_public_ip_on_launch": false,
                "outpost_arn": "",
                "owner_id": "767534018423",
                "private_dns_hostname_type_on_launch": "ip-name",
                "tags": {
                  "Name": "dev-demo-private-us-east-1a",
                  "kubernetes.io/cluster/dev-demo": "shared",
                  "kubernetes.io/role/internal-elb": "1"
                },
                "tags_all": {
                  "Name": "dev-demo-private-us-east-1a",
                  "kubernetes.io/cluster/dev-demo": "shared",
                  "kubernetes.io/role/internal-elb": "1"
                },
                "timeouts": null,
                "vpc_id": "vpc-00fc46c587795f3a2"
              },
              "sensitive_values": {
                "tags": {},
                "tags_all": {}
              }
            },
            {
              "address": "module.vpc.aws_subnet.private[1]",
              "mode": "managed",
              "type": "aws_subnet",
              "name": "private",
              "index": 1,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 1,
              "values": {
                "arn": "arn:aws:ec2:us-east-1:767534018423:subnet/subnet-069f93a090e0f24ed",
                "assign_ipv6_address_on_creation": false,
                "availability_zone": "us-east-1b",
                "availability_zone_id": "use1-az4",
                "cidr_block": "10.0.2.0/24",
                "customer_owned_ipv4_pool": "",
                "enable_dns64": false,
                "enable_resource_name_dns_a_record_on_launch": false,
                "enable_resource_name_dns_aaaa_record_on_launch": false,
                "id": "subnet-069f93a090e0f24ed",
                "ipv6_cidr_block": "",
                "ipv6_cidr_block_association_id": "",
                "ipv6_native": false,
                "map_customer_owned_ip_on_launch": false,
                "map_public_ip_on_launch": false,
                "outpost_arn": "",
                "owner_id": "767534018423",
                "private_dns_hostname_type_on_launch": "ip-name",
                "tags": {
                  "Name": "dev-demo-private-us-east-1b",
                  "kubernetes.io/cluster/dev-demo": "shared",
                  "kubernetes.io/role/internal-elb": "1"
                },
                "tags_all": {
                  "Name": "dev-demo-private-us-east-1b",
                  "kubernetes.io/cluster/dev-demo": "shared",
                  "kubernetes.io/role/internal-elb": "1"
                },
                "timeouts": null,
                "vpc_id": "vpc-00fc46c587795f3a2"
              },
              "sensitive_values": {
                "tags": {},
                "tags_all": {}
              }
            },
            {
              "address": "module.vpc.aws_subnet.private[2]",
              "mode": "managed",
              "type": "aws_subnet",
              "name": "private",
              "index": 2,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 1,
              "values": {
                "arn": "arn:aws:ec2:us-east-1:767534018423:subnet/subnet-032ae1b0fdf5ec242",
                "assign_ipv6_address_on_creation": false,
                "availability_zone": "us-east-1c",
                "availability_zone_id": "use1-az6",
                "cidr_block": "10.0.3.0/24",
                "customer_owned_ipv4_pool": "",
                "enable_dns64": false,
                "enable_resource_name_dns_a_record_on_launch": false,
                "enable_resource_name_dns_aaaa_record_on_launch": false,
                "id": "subnet-032ae1b0fdf5ec242",
                "ipv6_cidr_block": "",
                "ipv6_cidr_block_association_id": "",
                "ipv6_native": false,
                "map_customer_owned_ip_on_launch": false,
                "map_public_ip_on_launch": false,
                "outpost_arn": "",
                "owner_id": "767534018423",
                "private_dns_hostname_type_on_launch": "ip-name",
                "tags": {
                  "Name": "dev-demo-private-us-east-1c",
                  "kubernetes.io/cluster/dev-demo": "shared",
                  "kubernetes.io/role/internal-elb": "1"
                },
                "tags_all": {
                  "Name": "dev-demo-private-us-east-1c",
                  "kubernetes.io/cluster/dev-demo": "shared",
                  "kubernetes.io/role/internal-elb": "1"
                },
                "timeouts": null,
                "vpc_id": "vpc-00fc46c587795f3a2"
              },
              "sensitive_values": {
                "tags": {},
                "tags_all": {}
              }
            },
            {
              "address": "module.vpc.aws_subnet.public[0]",
              "mode": "managed",
              "type": "aws_subnet",
              "name": "public",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 1,
              "values": {
                "arn": "arn:aws:ec2:us-east-1:767534018423:subnet/subnet-015a80f9cbeb9e75e",
                "assign_ipv6_address_on_creation": false,
                "availability_zone": "us-east-1a",
                "availability_zone_id": "use1-az2",
                "cidr_block": "10.0.101.0/24",
                "customer_owned_ipv4_pool": "",
                "enable_dns64": false,
                "enable_resource_name_dns_a_record_on_launch": false,
                "enable_resource_name_dns_aaaa_record_on_launch": false,
                "id": "subnet-015a80f9cbeb9e75e",
                "ipv6_cidr_block": "",
                "ipv6_cidr_block_association_id": "",
                "ipv6_native": false,
                "map_customer_owned_ip_on_launch": false,
                "map_public_ip_on_launch": true,
                "outpost_arn": "",
                "owner_id": "767534018423",
                "private_dns_hostname_type_on_launch": "ip-name",
                "tags": {
                  "Name": "dev-demo-public-us-east-1a",
                  "kubernetes.io/cluster/dev-demo": "shared",
                  "kubernetes.io/role/elb": "1"
                },
                "tags_all": {
                  "Name": "dev-demo-public-us-east-1a",
                  "kubernetes.io/cluster/dev-demo": "shared",
                  "kubernetes.io/role/elb": "1"
                },
                "timeouts": null,
                "vpc_id": "vpc-00fc46c587795f3a2"
              },
              "sensitive_values": {
                "tags": {},
                "tags_all": {}
              }
            },
            {
              "address": "module.vpc.aws_subnet.public[1]",
              "mode": "managed",
              "type": "aws_subnet",
              "name": "public",
              "index": 1,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 1,
              "values": {
                "arn": "arn:aws:ec2:us-east-1:767534018423:subnet/subnet-08c80cb915aa41451",
                "assign_ipv6_address_on_creation": false,
                "availability_zone": "us-east-1b",
                "availability_zone_id": "use1-az4",
                "cidr_block": "10.0.102.0/24",
                "customer_owned_ipv4_pool": "",
                "enable_dns64": false,
                "enable_resource_name_dns_a_record_on_launch": false,
                "enable_resource_name_dns_aaaa_record_on_launch": false,
                "id": "subnet-08c80cb915aa41451",
                "ipv6_cidr_block": "",
                "ipv6_cidr_block_association_id": "",
                "ipv6_native": false,
                "map_customer_owned_ip_on_launch": false,
                "map_public_ip_on_launch": true,
                "outpost_arn": "",
                "owner_id": "767534018423",
                "private_dns_hostname_type_on_launch": "ip-name",
                "tags": {
                  "Name": "dev-demo-public-us-east-1b",
                  "kubernetes.io/cluster/dev-demo": "shared",
                  "kubernetes.io/role/elb": "1"
                },
                "tags_all": {
                  "Name": "dev-demo-public-us-east-1b",
                  "kubernetes.io/cluster/dev-demo": "shared",
                  "kubernetes.io/role/elb": "1"
                },
                "timeouts": null,
                "vpc_id": "vpc-00fc46c587795f3a2"
              },
              "sensitive_values": {
                "tags": {},
                "tags_all": {}
              }
            },
            {
              "address": "module.vpc.aws_subnet.public[2]",
              "mode": "managed",
              "type": "aws_subnet",
              "name": "public",
              "index": 2,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 1,
              "values": {
                "arn": "arn:aws:ec2:us-east-1:767534018423:subnet/subnet-0ecbc0b2e847025a0",
                "assign_ipv6_address_on_creation": false,
                "availability_zone": "us-east-1c",
                "availability_zone_id": "use1-az6",
                "cidr_block": "10.0.103.0/24",
                "customer_owned_ipv4_pool": "",
                "enable_dns64": false,
                "enable_resource_name_dns_a_record_on_launch": false,
                "enable_resource_name_dns_aaaa_record_on_launch": false,
                "id": "subnet-0ecbc0b2e847025a0",
                "ipv6_cidr_block": "",
                "ipv6_cidr_block_association_id": "",
                "ipv6_native": false,
                "map_customer_owned_ip_on_launch": false,
                "map_public_ip_on_launch": true,
                "outpost_arn": "",
                "owner_id": "767534018423",
                "private_dns_hostname_type_on_launch": "ip-name",
                "tags": {
                  "Name": "dev-demo-public-us-east-1c",
                  "kubernetes.io/cluster/dev-demo": "shared",
                  "kubernetes.io/role/elb": "1"
                },
                "tags_all": {
                  "Name": "dev-demo-public-us-east-1c",
                  "kubernetes.io/cluster/dev-demo": "shared",
                  "kubernetes.io/role/elb": "1"
                },
                "timeouts": null,
                "vpc_id": "vpc-00fc46c587795f3a2"
              },
              "sensitive_values": {
                "tags": {},
                "tags_all": {}
              }
            },
            {
              "address": "module.vpc.aws_vpc.this[0]",
              "mode": "managed",
              "type": "aws_vpc",
              "name": "this",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 1,
              "values": {
                "arn": "arn:aws:ec2:us-east-1:767534018423:vpc/vpc-00fc46c587795f3a2",
                "assign_generated_ipv6_cidr_block": false,
                "cidr_block": "10.0.0.0/16",
                "default_network_acl_id": "acl-015989da2afa14fe8",
                "default_route_table_id": "rtb-08c3bf87fdb0fa331",
                "default_security_group_id": "sg-01c19b363e66bc9ed",
                "dhcp_options_id": "dopt-d2aa95ab",
                "enable_classiclink": false,
                "enable_classiclink_dns_support": false,
                "enable_dns_hostnames": true,
                "enable_dns_support": true,
                "id": "vpc-00fc46c587795f3a2",
                "instance_tenancy": "default",
                "ipv4_ipam_pool_id": null,
                "ipv4_netmask_length": null,
                "ipv6_association_id": "",
                "ipv6_cidr_block": "",
                "ipv6_cidr_block_network_border_group": "",
                "ipv6_ipam_pool_id": "",
                "ipv6_netmask_length": 0,
                "main_route_table_id": "rtb-08c3bf87fdb0fa331",
                "owner_id": "767534018423",
                "tags": {
                  "Name": "dev-demo"
                },
                "tags_all": {
                  "Name": "dev-demo"
                }
              },
              "sensitive_values": {
                "tags": {},
                "tags_all": {}
              }
            }
          ],
          "address": "module.vpc"
        }
      ]
    }
  },
  "resource_drift": [
    {
      "address": "module.eks.aws_security_group.node[0]",
      "module_address": "module.eks",
      "mode": "managed",
      "type": "aws_security_group",
      "name": "node",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "update"
        ],
        "before": {
          "arn": "arn:aws:ec2:us-east-1:767534018423:security-group/sg-08928dd39a77f67ac",
          "description": "EKS node shared security group",
          "egress": [
            {
              "cidr_blocks": [
                "0.0.0.0/0"
              ],
              "description": "Egress NTP/TCP to internet",
              "from_port": 123,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [],
              "self": false,
              "to_port": 123
            },
            {
              "cidr_blocks": [
                "0.0.0.0/0"
              ],
              "description": "Egress NTP/UDP to internet",
              "from_port": 123,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "udp",
              "security_groups": [],
              "self": false,
              "to_port": 123
            },
            {
              "cidr_blocks": [
                "0.0.0.0/0"
              ],
              "description": "Egress all HTTPS to internet",
              "from_port": 443,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [],
              "self": false,
              "to_port": 443
            },
            {
              "cidr_blocks": [],
              "description": "Node groups to cluster API",
              "from_port": 443,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [
                "sg-075f036ed87625991"
              ],
              "self": false,
              "to_port": 443
            },
            {
              "cidr_blocks": [],
              "description": "Node to node CoreDNS",
              "from_port": 53,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [],
              "self": true,
              "to_port": 53
            },
            {
              "cidr_blocks": [],
              "description": "Node to node CoreDNS",
              "from_port": 53,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "udp",
              "security_groups": [],
              "self": true,
              "to_port": 53
            }
          ],
          "id": "sg-08928dd39a77f67ac",
          "ingress": [
            {
              "cidr_blocks": [],
              "description": "",
              "from_port": 0,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [
                "sg-0fdea54f66abbdaee"
              ],
              "self": false,
              "to_port": 65535
            },
            {
              "cidr_blocks": [],
              "description": "Cluster API to node groups",
              "from_port": 443,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [
                "sg-075f036ed87625991"
              ],
              "self": false,
              "to_port": 443
            },
            {
              "cidr_blocks": [],
              "description": "Cluster API to node kubelets",
              "from_port": 10250,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [
                "sg-075f036ed87625991"
              ],
              "self": false,
              "to_port": 10250
            },
            {
              "cidr_blocks": [],
              "description": "Node to node CoreDNS",
              "from_port": 53,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [],
              "self": true,
              "to_port": 53
            },
            {
              "cidr_blocks": [],
              "description": "Node to node CoreDNS",
              "from_port": 53,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "udp",
              "security_groups": [],
              "self": true,
              "to_port": 53
            }
          ],
          "name": "dev-demo-node-20220123184107646300000005",
          "name_prefix": "dev-demo-node-",
          "owner_id": "767534018423",
          "revoke_rules_on_delete": false,
          "tags": {
            "Name": "dev-demo-node",
            "kubernetes.io/cluster/dev-demo": "owned"
          },
          "tags_all": {
            "Name": "dev-demo-node",
            "kubernetes.io/cluster/dev-demo": "owned"
          },
          "timeouts": null,
          "vpc_id": "vpc-00fc46c587795f3a2"
        },
        "after": {
          "arn": "arn:aws:ec2:us-east-1:767534018423:security-group/sg-08928dd39a77f67ac",
          "description": "EKS node shared security group",
          "egress": [
            {
              "cidr_blocks": [
                "0.0.0.0/0"
              ],
              "description": "Egress NTP/TCP to internet",
              "from_port": 123,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [],
              "self": false,
              "to_port": 123
            },
            {
              "cidr_blocks": [
                "0.0.0.0/0"
              ],
              "description": "Egress NTP/UDP to internet",
              "from_port": 123,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "udp",
              "security_groups": [],
              "self": false,
              "to_port": 123
            },
            {
              "cidr_blocks": [
                "0.0.0.0/0"
              ],
              "description": "Egress all HTTPS to internet",
              "from_port": 443,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [],
              "self": false,
              "to_port": 443
            },
            {
              "cidr_blocks": [],
              "description": "Node groups to cluster API",
              "from_port": 443,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [
                "sg-075f036ed87625991"
              ],
              "self": false,
              "to_port": 443
            },
            {
              "cidr_blocks": [],
              "description": "Node to node CoreDNS",
              "from_port": 53,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [],
              "self": true,
              "to_port": 53
            },
            {
              "cidr_blocks": [],
              "description": "Node to node CoreDNS",
              "from_port": 53,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "udp",
              "security_groups": [],
              "self": true,
              "to_port": 53
            }
          ],
          "id": "sg-08928dd39a77f67ac",
          "ingress": [
            {
              "cidr_blocks": [],
              "description": "",
              "from_port": 0,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [
                "sg-019219e078749078d",
                "sg-0f292d45544c84ff8"
              ],
              "self": false,
              "to_port": 65535
            },
            {
              "cidr_blocks": [],
              "description": "Cluster API to node groups",
              "from_port": 443,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [
                "sg-075f036ed87625991"
              ],
              "self": false,
              "to_port": 443
            },
            {
              "cidr_blocks": [],
              "description": "Cluster API to node kubelets",
              "from_port": 10250,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [
                "sg-075f036ed87625991"
              ],
              "self": false,
              "to_port": 10250
            },
            {
              "cidr_blocks": [],
              "description": "Node to node CoreDNS",
              "from_port": 53,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [],
              "self": true,
              "to_port": 53
            },
            {
              "cidr_blocks": [],
              "description": "Node to node CoreDNS",
              "from_port": 53,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "udp",
              "security_groups": [],
              "self": true,
              "to_port": 53
            }
          ],
          "name": "dev-demo-node-20220123184107646300000005",
          "name_prefix": "dev-demo-node-",
          "owner_id": "767534018423",
          "revoke_rules_on_delete": false,
          "tags": {
            "Name": "dev-demo-node",
            "kubernetes.io/cluster/dev-demo": "owned"
          },
          "tags_all": {
            "Name": "dev-demo-node",
            "kubernetes.io/cluster/dev-demo": "owned"
          },
          "timeouts": null,
          "vpc_id": "vpc-00fc46c587795f3a2"
        },
        "after_unknown": {},
        "before_sensitive": {
          "egress": [
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            },
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            },
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            },
            {
              "cidr_blocks": [],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": [
                false
              ]
            },
            {
              "cidr_blocks": [],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            },
            {
              "cidr_blocks": [],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            }
          ],
          "ingress": [
            {
              "cidr_blocks": [],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": [
                false
              ]
            },
            {
              "cidr_blocks": [],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": [
                false
              ]
            },
            {
              "cidr_blocks": [],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": [
                false
              ]
            },
            {
              "cidr_blocks": [],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            },
            {
              "cidr_blocks": [],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            }
          ],
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "egress": [
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            },
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            },
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            },
            {
              "cidr_blocks": [],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": [
                false
              ]
            },
            {
              "cidr_blocks": [],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            },
            {
              "cidr_blocks": [],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            }
          ],
          "ingress": [
            {
              "cidr_blocks": [],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": [
                false,
                false
              ]
            },
            {
              "cidr_blocks": [],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": [
                false
              ]
            },
            {
              "cidr_blocks": [],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": [
                false
              ]
            },
            {
              "cidr_blocks": [],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            },
            {
              "cidr_blocks": [],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            }
          ],
          "tags": {},
          "tags_all": {}
        }
      }
    }
  ],
  "resource_changes": [
    {
      "address": "aws_kms_key.eks",
      "mode": "managed",
      "type": "aws_kms_key",
      "name": "eks",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "update"
        ],
        "before": {
          "arn": "arn:aws:kms:us-east-1:767534018423:key/2ee0dad3-981a-4424-9df9-6f1726abb77e",
          "bypass_policy_lockout_safety_check": false,
          "customer_master_key_spec": "SYMMETRIC_DEFAULT",
          "deletion_window_in_days": 7,
          "description": "EKS Secret Encryption Key",
          "enable_key_rotation": true,
          "id": "2ee0dad3-981a-4424-9df9-6f1726abb77e",
          "is_enabled": true,
          "key_id": "2ee0dad3-981a-4424-9df9-6f1726abb77e",
          "key_usage": "ENCRYPT_DECRYPT",
          "multi_region": false,
          "policy": "{\"Id\":\"key-default-1\",\"Statement\":[{\"Action\":\"kms:*\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::767534018423:root\"},\"Resource\":\"*\",\"Sid\":\"Enable IAM User Permissions\"}],\"Version\":\"2012-10-17\"}",
          "tags": {
            "ControlledBy": "Terraform",
            "Terraform": "true",
            "environment": "dev"
          },
          "tags_all": {
            "ControlledBy": "Terraform",
            "Terraform": "true",
            "environment": "dev"
          }
        },
        "after": {
          "arn": "arn:aws:kms:us-east-1:767534018423:key/2ee0dad3-981a-4424-9df9-6f1726abb77e",
          "bypass_policy_lockout_safety_check": false,
          "customer_master_key_spec": "SYMMETRIC_DEFAULT",
          "deletion_window_in_days": 7,
          "description": "EKS Secret Encryption Key",
          "enable_key_rotation": true,
          "id": "2ee0dad3-981a-4424-9df9-6f1726abb77e",
          "is_enabled": true,
          "key_id": "2ee0dad3-981a-4424-9df9-6f1726abb77e",
          "key_usage": "ENCRYPT_DECRYPT",
          "multi_region": false,
          "policy": "{\"Id\":\"key-default-1\",\"Statement\":[{\"Action\":\"kms:*\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::767534018423:root\"},\"Resource\":\"*\",\"Sid\":\"Enable IAM User Permissions\"}],\"Version\":\"2012-10-17\"}",
          "tags": {}
        },
        "after_unknown": {
          "tags": {},
          "tags_all": true
        },
        "before_sensitive": {
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "aws_security_group.additional",
      "mode": "managed",
      "type": "aws_security_group",
      "name": "additional",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "delete"
        ],
        "before": {
          "arn": "arn:aws:ec2:us-east-1:767534018423:security-group/sg-03574098139c61e81",
          "description": "Managed by Terraform",
          "egress": [],
          "id": "sg-03574098139c61e81",
          "ingress": [
            {
              "cidr_blocks": [
                "10.0.0.0/8",
                "172.16.0.0/12",
                "192.168.0.0/16"
              ],
              "description": "",
              "from_port": 22,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [],
              "self": false,
              "to_port": 22
            }
          ],
          "name": "dev-demo-additional20220123184106696900000004",
          "name_prefix": "dev-demo-additional",
          "owner_id": "767534018423",
          "revoke_rules_on_delete": false,
          "tags": {
            "ControlledBy": "Terraform",
            "Terraform": "true",
            "environment": "dev"
          },
          "tags_all": {
            "ControlledBy": "Terraform",
            "Terraform": "true",
            "environment": "dev"
          },
          "timeouts": null,
          "vpc_id": "vpc-00fc46c587795f3a2"
        },
        "after": null,
        "after_unknown": {},
        "before_sensitive": {
          "egress": [],
          "ingress": [
            {
              "cidr_blocks": [
                false,
                false,
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            }
          ],
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": false
      },
      "action_reason": "delete_because_no_resource_config"
    },
    {
      "address": "module.eks.aws_cloudwatch_log_group.this[0]",
      "module_address": "module.eks",
      "mode": "managed",
      "type": "aws_cloudwatch_log_group",
      "name": "this",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "arn": "arn:aws:logs:us-east-1:767534018423:log-group:/aws/eks/dev-demo/cluster",
          "id": "/aws/eks/dev-demo/cluster",
          "kms_key_id": "",
          "name": "/aws/eks/dev-demo/cluster",
          "name_prefix": null,
          "retention_in_days": 90,
          "tags": {},
          "tags_all": {}
        },
        "after": {
          "arn": "arn:aws:logs:us-east-1:767534018423:log-group:/aws/eks/dev-demo/cluster",
          "id": "/aws/eks/dev-demo/cluster",
          "kms_key_id": "",
          "name": "/aws/eks/dev-demo/cluster",
          "name_prefix": null,
          "retention_in_days": 90,
          "tags": {},
          "tags_all": {}
        },
        "after_unknown": {},
        "before_sensitive": {
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.eks.aws_eks_addon.this[\"coredns\"]",
      "module_address": "module.eks",
      "mode": "managed",
      "type": "aws_eks_addon",
      "name": "this",
      "index": "coredns",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "addon_name": "coredns",
          "addon_version": "v1.8.4-eksbuild.1",
          "arn": "arn:aws:eks:us-east-1:767534018423:addon/dev-demo/coredns/80bf4445-f2f1-6c54-f1fb-f3128982c35b",
          "cluster_name": "dev-demo",
          "created_at": "2022-01-23T20:06:16Z",
          "id": "dev-demo:coredns",
          "modified_at": "2022-01-23T20:07:23Z",
          "resolve_conflicts": "OVERWRITE",
          "service_account_role_arn": "",
          "tags": {},
          "tags_all": {}
        },
        "after": {
          "addon_name": "coredns",
          "addon_version": "v1.8.4-eksbuild.1",
          "arn": "arn:aws:eks:us-east-1:767534018423:addon/dev-demo/coredns/80bf4445-f2f1-6c54-f1fb-f3128982c35b",
          "cluster_name": "dev-demo",
          "created_at": "2022-01-23T20:06:16Z",
          "id": "dev-demo:coredns",
          "modified_at": "2022-01-23T20:07:23Z",
          "resolve_conflicts": "OVERWRITE",
          "service_account_role_arn": "",
          "tags": {},
          "tags_all": {}
        },
        "after_unknown": {},
        "before_sensitive": {
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.eks.aws_eks_addon.this[\"kube-proxy\"]",
      "module_address": "module.eks",
      "mode": "managed",
      "type": "aws_eks_addon",
      "name": "this",
      "index": "kube-proxy",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "addon_name": "kube-proxy",
          "addon_version": "v1.21.2-eksbuild.2",
          "arn": "arn:aws:eks:us-east-1:767534018423:addon/dev-demo/kube-proxy/b8bf4426-84de-1796-3d65-a2690dbeca36",
          "cluster_name": "dev-demo",
          "created_at": "2022-01-23T18:57:37Z",
          "id": "dev-demo:kube-proxy",
          "modified_at": "2022-01-23T18:57:38Z",
          "resolve_conflicts": null,
          "service_account_role_arn": "",
          "tags": {},
          "tags_all": {}
        },
        "after": {
          "addon_name": "kube-proxy",
          "addon_version": "v1.21.2-eksbuild.2",
          "arn": "arn:aws:eks:us-east-1:767534018423:addon/dev-demo/kube-proxy/b8bf4426-84de-1796-3d65-a2690dbeca36",
          "cluster_name": "dev-demo",
          "created_at": "2022-01-23T18:57:37Z",
          "id": "dev-demo:kube-proxy",
          "modified_at": "2022-01-23T18:57:38Z",
          "resolve_conflicts": null,
          "service_account_role_arn": "",
          "tags": {},
          "tags_all": {}
        },
        "after_unknown": {},
        "before_sensitive": {
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.eks.aws_eks_addon.this[\"vpc-cni\"]",
      "module_address": "module.eks",
      "mode": "managed",
      "type": "aws_eks_addon",
      "name": "this",
      "index": "vpc-cni",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "addon_name": "vpc-cni",
          "addon_version": "v1.10.1-eksbuild.1",
          "arn": "arn:aws:eks:us-east-1:767534018423:addon/dev-demo/vpc-cni/7abf4426-84db-d9c0-8aa5-9e7349f4ef64",
          "cluster_name": "dev-demo",
          "created_at": "2022-01-23T18:57:37Z",
          "id": "dev-demo:vpc-cni",
          "modified_at": "2022-01-23T18:57:38Z",
          "resolve_conflicts": "OVERWRITE",
          "service_account_role_arn": "",
          "tags": {},
          "tags_all": {}
        },
        "after": {
          "addon_name": "vpc-cni",
          "addon_version": "v1.10.1-eksbuild.1",
          "arn": "arn:aws:eks:us-east-1:767534018423:addon/dev-demo/vpc-cni/7abf4426-84db-d9c0-8aa5-9e7349f4ef64",
          "cluster_name": "dev-demo",
          "created_at": "2022-01-23T18:57:37Z",
          "id": "dev-demo:vpc-cni",
          "modified_at": "2022-01-23T18:57:38Z",
          "resolve_conflicts": "OVERWRITE",
          "service_account_role_arn": "",
          "tags": {},
          "tags_all": {}
        },
        "after_unknown": {},
        "before_sensitive": {
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.eks.aws_eks_cluster.this[0]",
      "module_address": "module.eks",
      "mode": "managed",
      "type": "aws_eks_cluster",
      "name": "this",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "arn": "arn:aws:eks:us-east-1:767534018423:cluster/dev-demo",
          "certificate_authority": [
            {
              "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1ERXlNekU0TlRBME5Wb1hEVE15TURFeU1URTROVEEwTlZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTEdkCkRhTG5FTTh6UUJtbHJ3NGp3SjJCOXFzYXhrN21CcFM3L29nb3duNllCN2hPUnVGaG1mS2NITG8zWXdrTXI2RGoKQndBbWkrWkltOGZOYlRJN0djdER4WWlCUWFjbjgzS25ZZ01WeXZvVzRaRy9tOTB6WitIdThkYjZkZzRBY0xaVwowbnpUQ05oUm1QMG4rWCsxQkFyS1AwODRNU3poMUk5aWsxU3FtT09LbndvSXpDeGNJSTAvR3g4cWVNK1g1dnJwCkkvOFVTci9TNWdFM1NaT01YaGpaak9MQ21vM0dBRCtTTzFPMTZzUitYL3Q2YTEwMTdCWnJHd09ES2VMTlliMVgKWWRsTEdEbnUrc1d6N2JnN1BKWnpyY3NuUXJZc3I3eHNrc2x1WVdGZWNuWGNpQTRwRkpkTkh6dmFycnJmMkRiYgpwcmx0YzQrbHNzY2ozajZWMWtrQ0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZNK3d3eDZIM1c1VFJrYUNEaEZNc1lockF4Q3JNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFBYWdzdXp3QTJvYlBkRGt0Mng5ejJMWkhsSGpoV3dGeGFLUDF2Sm05RWJCalBZYVY2bQpUK2xBQnowRlFDSDRFQkxxRkFOakRNczNWYzhaWm4vODFDYkpvNE9zUE9acnU0K3lmcWRSaGIwYnUxamdaYW95Cm5iOElLUCs0Vy9RUTkvSGdrTWNvcVlpYXAyVmkrd2VNWFVBZFU1YkZXVW0xaWdld3htZkx6RlFYRk52a1BYWkoKZ21zTklYZjlCajE4aUpMQlYyaGExd3llWHlsdlU2Y1IzdFBZS01TSlFqYXJVaW5TOUUzQndDM3BnKzQ1VTYxcwpxTThvOWRkZDdQcll4bVdXcjQ5Z1dLTlRTQVcyNGRTSWo5ZCtXRW1ReUttVURvanlMM2o3aW40ZWtOejZpcGNxCmw2dys4b0pidUR2dDRsMnorNEY4ZlJnY0FraTNQSUFHTS9oRQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
            }
          ],
          "created_at": "2022-01-23 18:44:06.563 +0000 UTC",
          "enabled_cluster_log_types": [
            "api",
            "audit",
            "authenticator"
          ],
          "encryption_config": [
            {
              "provider": [
                {
                  "key_arn": "arn:aws:kms:us-east-1:767534018423:key/2ee0dad3-981a-4424-9df9-6f1726abb77e"
                }
              ],
              "resources": [
                "secrets"
              ]
            }
          ],
          "endpoint": "https://25DA5279A39940D35B91C73BFFF97403.gr7.us-east-1.eks.amazonaws.com",
          "id": "dev-demo",
          "identity": [
            {
              "oidc": [
                {
                  "issuer": "https://oidc.eks.us-east-1.amazonaws.com/id/25DA5279A39940D35B91C73BFFF97403"
                }
              ]
            }
          ],
          "kubernetes_network_config": [
            {
              "ip_family": "ipv4",
              "service_ipv4_cidr": "172.20.0.0/16"
            }
          ],
          "name": "dev-demo",
          "platform_version": "eks.4",
          "role_arn": "arn:aws:iam::767534018423:role/dev-demo-cluster-20220123184037125300000001",
          "status": "ACTIVE",
          "tags": {},
          "tags_all": {},
          "timeouts": {
            "create": null,
            "delete": null,
            "update": null
          },
          "version": "1.21",
          "vpc_config": [
            {
              "cluster_security_group_id": "sg-0657970c699ef7278",
              "endpoint_private_access": true,
              "endpoint_public_access": true,
              "public_access_cidrs": [
                "0.0.0.0/0"
              ],
              "security_group_ids": [
                "sg-075f036ed87625991"
              ],
              "subnet_ids": [
                "subnet-032ae1b0fdf5ec242",
                "subnet-067ea905e5e41ae0f",
                "subnet-069f93a090e0f24ed"
              ],
              "vpc_id": "vpc-00fc46c587795f3a2"
            }
          ]
        },
        "after": {
          "arn": "arn:aws:eks:us-east-1:767534018423:cluster/dev-demo",
          "certificate_authority": [
            {
              "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1ERXlNekU0TlRBME5Wb1hEVE15TURFeU1URTROVEEwTlZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTEdkCkRhTG5FTTh6UUJtbHJ3NGp3SjJCOXFzYXhrN21CcFM3L29nb3duNllCN2hPUnVGaG1mS2NITG8zWXdrTXI2RGoKQndBbWkrWkltOGZOYlRJN0djdER4WWlCUWFjbjgzS25ZZ01WeXZvVzRaRy9tOTB6WitIdThkYjZkZzRBY0xaVwowbnpUQ05oUm1QMG4rWCsxQkFyS1AwODRNU3poMUk5aWsxU3FtT09LbndvSXpDeGNJSTAvR3g4cWVNK1g1dnJwCkkvOFVTci9TNWdFM1NaT01YaGpaak9MQ21vM0dBRCtTTzFPMTZzUitYL3Q2YTEwMTdCWnJHd09ES2VMTlliMVgKWWRsTEdEbnUrc1d6N2JnN1BKWnpyY3NuUXJZc3I3eHNrc2x1WVdGZWNuWGNpQTRwRkpkTkh6dmFycnJmMkRiYgpwcmx0YzQrbHNzY2ozajZWMWtrQ0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZNK3d3eDZIM1c1VFJrYUNEaEZNc1lockF4Q3JNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFBYWdzdXp3QTJvYlBkRGt0Mng5ejJMWkhsSGpoV3dGeGFLUDF2Sm05RWJCalBZYVY2bQpUK2xBQnowRlFDSDRFQkxxRkFOakRNczNWYzhaWm4vODFDYkpvNE9zUE9acnU0K3lmcWRSaGIwYnUxamdaYW95Cm5iOElLUCs0Vy9RUTkvSGdrTWNvcVlpYXAyVmkrd2VNWFVBZFU1YkZXVW0xaWdld3htZkx6RlFYRk52a1BYWkoKZ21zTklYZjlCajE4aUpMQlYyaGExd3llWHlsdlU2Y1IzdFBZS01TSlFqYXJVaW5TOUUzQndDM3BnKzQ1VTYxcwpxTThvOWRkZDdQcll4bVdXcjQ5Z1dLTlRTQVcyNGRTSWo5ZCtXRW1ReUttVURvanlMM2o3aW40ZWtOejZpcGNxCmw2dys4b0pidUR2dDRsMnorNEY4ZlJnY0FraTNQSUFHTS9oRQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
            }
          ],
          "created_at": "2022-01-23 18:44:06.563 +0000 UTC",
          "enabled_cluster_log_types": [
            "api",
            "audit",
            "authenticator"
          ],
          "encryption_config": [
            {
              "provider": [
                {
                  "key_arn": "arn:aws:kms:us-east-1:767534018423:key/2ee0dad3-981a-4424-9df9-6f1726abb77e"
                }
              ],
              "resources": [
                "secrets"
              ]
            }
          ],
          "endpoint": "https://25DA5279A39940D35B91C73BFFF97403.gr7.us-east-1.eks.amazonaws.com",
          "id": "dev-demo",
          "identity": [
            {
              "oidc": [
                {
                  "issuer": "https://oidc.eks.us-east-1.amazonaws.com/id/25DA5279A39940D35B91C73BFFF97403"
                }
              ]
            }
          ],
          "kubernetes_network_config": [
            {
              "ip_family": "ipv4",
              "service_ipv4_cidr": "172.20.0.0/16"
            }
          ],
          "name": "dev-demo",
          "platform_version": "eks.4",
          "role_arn": "arn:aws:iam::767534018423:role/dev-demo-cluster-20220123184037125300000001",
          "status": "ACTIVE",
          "tags": {},
          "tags_all": {},
          "timeouts": {
            "create": null,
            "delete": null,
            "update": null
          },
          "version": "1.21",
          "vpc_config": [
            {
              "cluster_security_group_id": "sg-0657970c699ef7278",
              "endpoint_private_access": true,
              "endpoint_public_access": true,
              "public_access_cidrs": [
                "0.0.0.0/0"
              ],
              "security_group_ids": [
                "sg-075f036ed87625991"
              ],
              "subnet_ids": [
                "subnet-032ae1b0fdf5ec242",
                "subnet-067ea905e5e41ae0f",
                "subnet-069f93a090e0f24ed"
              ],
              "vpc_id": "vpc-00fc46c587795f3a2"
            }
          ]
        },
        "after_unknown": {},
        "before_sensitive": {
          "certificate_authority": [
            {}
          ],
          "enabled_cluster_log_types": [
            false,
            false,
            false
          ],
          "encryption_config": [
            {
              "provider": [
                {}
              ],
              "resources": [
                false
              ]
            }
          ],
          "identity": [
            {
              "oidc": [
                {}
              ]
            }
          ],
          "kubernetes_network_config": [
            {}
          ],
          "tags": {},
          "tags_all": {},
          "timeouts": {},
          "vpc_config": [
            {
              "public_access_cidrs": [
                false
              ],
              "security_group_ids": [
                false
              ],
              "subnet_ids": [
                false,
                false,
                false
              ]
            }
          ]
        },
        "after_sensitive": {
          "certificate_authority": [
            {}
          ],
          "enabled_cluster_log_types": [
            false,
            false,
            false
          ],
          "encryption_config": [
            {
              "provider": [
                {}
              ],
              "resources": [
                false
              ]
            }
          ],
          "identity": [
            {
              "oidc": [
                {}
              ]
            }
          ],
          "kubernetes_network_config": [
            {}
          ],
          "tags": {},
          "tags_all": {},
          "timeouts": {},
          "vpc_config": [
            {
              "public_access_cidrs": [
                false
              ],
              "security_group_ids": [
                false
              ],
              "subnet_ids": [
                false,
                false,
                false
              ]
            }
          ]
        }
      }
    },
    {
      "address": "module.eks.aws_iam_openid_connect_provider.oidc_provider[0]",
      "module_address": "module.eks",
      "mode": "managed",
      "type": "aws_iam_openid_connect_provider",
      "name": "oidc_provider",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "arn": "arn:aws:iam::767534018423:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/25DA5279A39940D35B91C73BFFF97403",
          "client_id_list": [
            "sts.amazonaws.com"
          ],
          "id": "arn:aws:iam::767534018423:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/25DA5279A39940D35B91C73BFFF97403",
          "tags": {
            "Name": "dev-demo-eks-irsa"
          },
          "tags_all": {
            "Name": "dev-demo-eks-irsa"
          },
          "thumbprint_list": [
            "9e99a48a9960b14926bb7f3b02e22da2b0ab7280"
          ],
          "url": "oidc.eks.us-east-1.amazonaws.com/id/25DA5279A39940D35B91C73BFFF97403"
        },
        "after": {
          "arn": "arn:aws:iam::767534018423:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/25DA5279A39940D35B91C73BFFF97403",
          "client_id_list": [
            "sts.amazonaws.com"
          ],
          "id": "arn:aws:iam::767534018423:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/25DA5279A39940D35B91C73BFFF97403",
          "tags": {
            "Name": "dev-demo-eks-irsa"
          },
          "tags_all": {
            "Name": "dev-demo-eks-irsa"
          },
          "thumbprint_list": [
            "9e99a48a9960b14926bb7f3b02e22da2b0ab7280"
          ],
          "url": "oidc.eks.us-east-1.amazonaws.com/id/25DA5279A39940D35B91C73BFFF97403"
        },
        "after_unknown": {},
        "before_sensitive": {
          "client_id_list": [
            false
          ],
          "tags": {},
          "tags_all": {},
          "thumbprint_list": [
            false
          ]
        },
        "after_sensitive": {
          "client_id_list": [
            false
          ],
          "tags": {},
          "tags_all": {},
          "thumbprint_list": [
            false
          ]
        }
      }
    },
    {
      "address": "module.eks.aws_iam_role.this[0]",
      "module_address": "module.eks",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "this",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "arn": "arn:aws:iam::767534018423:role/dev-demo-cluster-20220123184037125300000001",
          "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"EKSClusterAssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"eks.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
          "create_date": "2022-01-23T18:40:42Z",
          "description": "",
          "force_detach_policies": true,
          "id": "dev-demo-cluster-20220123184037125300000001",
          "inline_policy": [
            {
              "name": "",
              "policy": ""
            }
          ],
          "managed_policy_arns": [
            "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
            "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController"
          ],
          "max_session_duration": 3600,
          "name": "dev-demo-cluster-20220123184037125300000001",
          "name_prefix": "dev-demo-cluster-",
          "path": "/",
          "permissions_boundary": null,
          "tags": {},
          "tags_all": {},
          "unique_id": "AROA3FNEXV53ZRKZR3HER"
        },
        "after": {
          "arn": "arn:aws:iam::767534018423:role/dev-demo-cluster-20220123184037125300000001",
          "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"EKSClusterAssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"eks.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
          "create_date": "2022-01-23T18:40:42Z",
          "description": "",
          "force_detach_policies": true,
          "id": "dev-demo-cluster-20220123184037125300000001",
          "inline_policy": [
            {
              "name": "",
              "policy": ""
            }
          ],
          "managed_policy_arns": [
            "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
            "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController"
          ],
          "max_session_duration": 3600,
          "name": "dev-demo-cluster-20220123184037125300000001",
          "name_prefix": "dev-demo-cluster-",
          "path": "/",
          "permissions_boundary": null,
          "tags": {},
          "tags_all": {},
          "unique_id": "AROA3FNEXV53ZRKZR3HER"
        },
        "after_unknown": {},
        "before_sensitive": {
          "inline_policy": [
            {}
          ],
          "managed_policy_arns": [
            false,
            false
          ],
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "inline_policy": [
            {}
          ],
          "managed_policy_arns": [
            false,
            false
          ],
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.eks.aws_iam_role_policy_attachment.this[\"arn:aws:iam::aws:policy/AmazonEKSClusterPolicy\"]",
      "module_address": "module.eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "this",
      "index": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "id": "dev-demo-cluster-20220123184037125300000001-20220123184044089200000002",
          "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
          "role": "dev-demo-cluster-20220123184037125300000001"
        },
        "after": {
          "id": "dev-demo-cluster-20220123184037125300000001-20220123184044089200000002",
          "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
          "role": "dev-demo-cluster-20220123184037125300000001"
        },
        "after_unknown": {},
        "before_sensitive": {},
        "after_sensitive": {}
      }
    },
    {
      "address": "module.eks.aws_iam_role_policy_attachment.this[\"arn:aws:iam::aws:policy/AmazonEKSVPCResourceController\"]",
      "module_address": "module.eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "this",
      "index": "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "id": "dev-demo-cluster-20220123184037125300000001-20220123184044090500000003",
          "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController",
          "role": "dev-demo-cluster-20220123184037125300000001"
        },
        "after": {
          "id": "dev-demo-cluster-20220123184037125300000001-20220123184044090500000003",
          "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController",
          "role": "dev-demo-cluster-20220123184037125300000001"
        },
        "after_unknown": {},
        "before_sensitive": {},
        "after_sensitive": {}
      }
    },
    {
      "address": "module.eks.aws_security_group.cluster[0]",
      "module_address": "module.eks",
      "mode": "managed",
      "type": "aws_security_group",
      "name": "cluster",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "arn": "arn:aws:ec2:us-east-1:767534018423:security-group/sg-075f036ed87625991",
          "description": "EKS cluster security group",
          "egress": [
            {
              "cidr_blocks": [],
              "description": "Cluster API to node groups",
              "from_port": 443,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [
                "sg-08928dd39a77f67ac"
              ],
              "self": false,
              "to_port": 443
            },
            {
              "cidr_blocks": [],
              "description": "Cluster API to node kubelets",
              "from_port": 10250,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [
                "sg-08928dd39a77f67ac"
              ],
              "self": false,
              "to_port": 10250
            }
          ],
          "id": "sg-075f036ed87625991",
          "ingress": [
            {
              "cidr_blocks": [],
              "description": "Node groups to cluster API",
              "from_port": 443,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [
                "sg-08928dd39a77f67ac"
              ],
              "self": false,
              "to_port": 443
            }
          ],
          "name": "dev-demo-cluster-20220123184107765000000006",
          "name_prefix": "dev-demo-cluster-",
          "owner_id": "767534018423",
          "revoke_rules_on_delete": false,
          "tags": {
            "Name": "dev-demo-cluster"
          },
          "tags_all": {
            "Name": "dev-demo-cluster"
          },
          "timeouts": null,
          "vpc_id": "vpc-00fc46c587795f3a2"
        },
        "after": {
          "arn": "arn:aws:ec2:us-east-1:767534018423:security-group/sg-075f036ed87625991",
          "description": "EKS cluster security group",
          "egress": [
            {
              "cidr_blocks": [],
              "description": "Cluster API to node groups",
              "from_port": 443,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [
                "sg-08928dd39a77f67ac"
              ],
              "self": false,
              "to_port": 443
            },
            {
              "cidr_blocks": [],
              "description": "Cluster API to node kubelets",
              "from_port": 10250,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [
                "sg-08928dd39a77f67ac"
              ],
              "self": false,
              "to_port": 10250
            }
          ],
          "id": "sg-075f036ed87625991",
          "ingress": [
            {
              "cidr_blocks": [],
              "description": "Node groups to cluster API",
              "from_port": 443,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [
                "sg-08928dd39a77f67ac"
              ],
              "self": false,
              "to_port": 443
            }
          ],
          "name": "dev-demo-cluster-20220123184107765000000006",
          "name_prefix": "dev-demo-cluster-",
          "owner_id": "767534018423",
          "revoke_rules_on_delete": false,
          "tags": {
            "Name": "dev-demo-cluster"
          },
          "tags_all": {
            "Name": "dev-demo-cluster"
          },
          "timeouts": null,
          "vpc_id": "vpc-00fc46c587795f3a2"
        },
        "after_unknown": {},
        "before_sensitive": {
          "egress": [
            {
              "cidr_blocks": [],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": [
                false
              ]
            },
            {
              "cidr_blocks": [],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": [
                false
              ]
            }
          ],
          "ingress": [
            {
              "cidr_blocks": [],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": [
                false
              ]
            }
          ],
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "egress": [
            {
              "cidr_blocks": [],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": [
                false
              ]
            },
            {
              "cidr_blocks": [],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": [
                false
              ]
            }
          ],
          "ingress": [
            {
              "cidr_blocks": [],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": [
                false
              ]
            }
          ],
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.eks.aws_security_group.node[0]",
      "module_address": "module.eks",
      "mode": "managed",
      "type": "aws_security_group",
      "name": "node",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "arn": "arn:aws:ec2:us-east-1:767534018423:security-group/sg-08928dd39a77f67ac",
          "description": "EKS node shared security group",
          "egress": [
            {
              "cidr_blocks": [
                "0.0.0.0/0"
              ],
              "description": "Egress NTP/TCP to internet",
              "from_port": 123,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [],
              "self": false,
              "to_port": 123
            },
            {
              "cidr_blocks": [
                "0.0.0.0/0"
              ],
              "description": "Egress NTP/UDP to internet",
              "from_port": 123,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "udp",
              "security_groups": [],
              "self": false,
              "to_port": 123
            },
            {
              "cidr_blocks": [
                "0.0.0.0/0"
              ],
              "description": "Egress all HTTPS to internet",
              "from_port": 443,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [],
              "self": false,
              "to_port": 443
            },
            {
              "cidr_blocks": [],
              "description": "Node groups to cluster API",
              "from_port": 443,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [
                "sg-075f036ed87625991"
              ],
              "self": false,
              "to_port": 443
            },
            {
              "cidr_blocks": [],
              "description": "Node to node CoreDNS",
              "from_port": 53,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [],
              "self": true,
              "to_port": 53
            },
            {
              "cidr_blocks": [],
              "description": "Node to node CoreDNS",
              "from_port": 53,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "udp",
              "security_groups": [],
              "self": true,
              "to_port": 53
            }
          ],
          "id": "sg-08928dd39a77f67ac",
          "ingress": [
            {
              "cidr_blocks": [],
              "description": "",
              "from_port": 0,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [
                "sg-019219e078749078d",
                "sg-0f292d45544c84ff8"
              ],
              "self": false,
              "to_port": 65535
            },
            {
              "cidr_blocks": [],
              "description": "Cluster API to node groups",
              "from_port": 443,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [
                "sg-075f036ed87625991"
              ],
              "self": false,
              "to_port": 443
            },
            {
              "cidr_blocks": [],
              "description": "Cluster API to node kubelets",
              "from_port": 10250,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [
                "sg-075f036ed87625991"
              ],
              "self": false,
              "to_port": 10250
            },
            {
              "cidr_blocks": [],
              "description": "Node to node CoreDNS",
              "from_port": 53,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [],
              "self": true,
              "to_port": 53
            },
            {
              "cidr_blocks": [],
              "description": "Node to node CoreDNS",
              "from_port": 53,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "udp",
              "security_groups": [],
              "self": true,
              "to_port": 53
            }
          ],
          "name": "dev-demo-node-20220123184107646300000005",
          "name_prefix": "dev-demo-node-",
          "owner_id": "767534018423",
          "revoke_rules_on_delete": false,
          "tags": {
            "Name": "dev-demo-node",
            "kubernetes.io/cluster/dev-demo": "owned"
          },
          "tags_all": {
            "Name": "dev-demo-node",
            "kubernetes.io/cluster/dev-demo": "owned"
          },
          "timeouts": null,
          "vpc_id": "vpc-00fc46c587795f3a2"
        },
        "after": {
          "arn": "arn:aws:ec2:us-east-1:767534018423:security-group/sg-08928dd39a77f67ac",
          "description": "EKS node shared security group",
          "egress": [
            {
              "cidr_blocks": [
                "0.0.0.0/0"
              ],
              "description": "Egress NTP/TCP to internet",
              "from_port": 123,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [],
              "self": false,
              "to_port": 123
            },
            {
              "cidr_blocks": [
                "0.0.0.0/0"
              ],
              "description": "Egress NTP/UDP to internet",
              "from_port": 123,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "udp",
              "security_groups": [],
              "self": false,
              "to_port": 123
            },
            {
              "cidr_blocks": [
                "0.0.0.0/0"
              ],
              "description": "Egress all HTTPS to internet",
              "from_port": 443,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [],
              "self": false,
              "to_port": 443
            },
            {
              "cidr_blocks": [],
              "description": "Node groups to cluster API",
              "from_port": 443,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [
                "sg-075f036ed87625991"
              ],
              "self": false,
              "to_port": 443
            },
            {
              "cidr_blocks": [],
              "description": "Node to node CoreDNS",
              "from_port": 53,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [],
              "self": true,
              "to_port": 53
            },
            {
              "cidr_blocks": [],
              "description": "Node to node CoreDNS",
              "from_port": 53,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "udp",
              "security_groups": [],
              "self": true,
              "to_port": 53
            }
          ],
          "id": "sg-08928dd39a77f67ac",
          "ingress": [
            {
              "cidr_blocks": [],
              "description": "",
              "from_port": 0,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [
                "sg-019219e078749078d",
                "sg-0f292d45544c84ff8"
              ],
              "self": false,
              "to_port": 65535
            },
            {
              "cidr_blocks": [],
              "description": "Cluster API to node groups",
              "from_port": 443,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [
                "sg-075f036ed87625991"
              ],
              "self": false,
              "to_port": 443
            },
            {
              "cidr_blocks": [],
              "description": "Cluster API to node kubelets",
              "from_port": 10250,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [
                "sg-075f036ed87625991"
              ],
              "self": false,
              "to_port": 10250
            },
            {
              "cidr_blocks": [],
              "description": "Node to node CoreDNS",
              "from_port": 53,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [],
              "self": true,
              "to_port": 53
            },
            {
              "cidr_blocks": [],
              "description": "Node to node CoreDNS",
              "from_port": 53,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "udp",
              "security_groups": [],
              "self": true,
              "to_port": 53
            }
          ],
          "name": "dev-demo-node-20220123184107646300000005",
          "name_prefix": "dev-demo-node-",
          "owner_id": "767534018423",
          "revoke_rules_on_delete": false,
          "tags": {
            "Name": "dev-demo-node",
            "kubernetes.io/cluster/dev-demo": "owned"
          },
          "tags_all": {
            "Name": "dev-demo-node",
            "kubernetes.io/cluster/dev-demo": "owned"
          },
          "timeouts": null,
          "vpc_id": "vpc-00fc46c587795f3a2"
        },
        "after_unknown": {},
        "before_sensitive": {
          "egress": [
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            },
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            },
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            },
            {
              "cidr_blocks": [],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": [
                false
              ]
            },
            {
              "cidr_blocks": [],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            },
            {
              "cidr_blocks": [],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            }
          ],
          "ingress": [
            {
              "cidr_blocks": [],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": [
                false,
                false
              ]
            },
            {
              "cidr_blocks": [],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": [
                false
              ]
            },
            {
              "cidr_blocks": [],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": [
                false
              ]
            },
            {
              "cidr_blocks": [],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            },
            {
              "cidr_blocks": [],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            }
          ],
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "egress": [
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            },
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            },
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            },
            {
              "cidr_blocks": [],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": [
                false
              ]
            },
            {
              "cidr_blocks": [],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            },
            {
              "cidr_blocks": [],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            }
          ],
          "ingress": [
            {
              "cidr_blocks": [],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": [
                false,
                false
              ]
            },
            {
              "cidr_blocks": [],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": [
                false
              ]
            },
            {
              "cidr_blocks": [],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": [
                false
              ]
            },
            {
              "cidr_blocks": [],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            },
            {
              "cidr_blocks": [],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            }
          ],
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.eks.aws_security_group_rule.cluster[\"egress_nodes_443\"]",
      "module_address": "module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "cluster",
      "index": "egress_nodes_443",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "cidr_blocks": [],
          "description": "Cluster API to node groups",
          "from_port": 443,
          "id": "sgrule-2966506108",
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_group_id": "sg-075f036ed87625991",
          "self": false,
          "source_security_group_id": "sg-08928dd39a77f67ac",
          "to_port": 443,
          "type": "egress"
        },
        "after": {
          "cidr_blocks": [],
          "description": "Cluster API to node groups",
          "from_port": 443,
          "id": "sgrule-2966506108",
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_group_id": "sg-075f036ed87625991",
          "self": false,
          "source_security_group_id": "sg-08928dd39a77f67ac",
          "to_port": 443,
          "type": "egress"
        },
        "after_unknown": {},
        "before_sensitive": {
          "cidr_blocks": [],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": []
        },
        "after_sensitive": {
          "cidr_blocks": [],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": []
        }
      }
    },
    {
      "address": "module.eks.aws_security_group_rule.cluster[\"egress_nodes_kubelet\"]",
      "module_address": "module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "cluster",
      "index": "egress_nodes_kubelet",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "cidr_blocks": [],
          "description": "Cluster API to node kubelets",
          "from_port": 10250,
          "id": "sgrule-4138226012",
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_group_id": "sg-075f036ed87625991",
          "self": false,
          "source_security_group_id": "sg-08928dd39a77f67ac",
          "to_port": 10250,
          "type": "egress"
        },
        "after": {
          "cidr_blocks": [],
          "description": "Cluster API to node kubelets",
          "from_port": 10250,
          "id": "sgrule-4138226012",
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_group_id": "sg-075f036ed87625991",
          "self": false,
          "source_security_group_id": "sg-08928dd39a77f67ac",
          "to_port": 10250,
          "type": "egress"
        },
        "after_unknown": {},
        "before_sensitive": {
          "cidr_blocks": [],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": []
        },
        "after_sensitive": {
          "cidr_blocks": [],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": []
        }
      }
    },
    {
      "address": "module.eks.aws_security_group_rule.cluster[\"ingress_nodes_443\"]",
      "module_address": "module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "cluster",
      "index": "ingress_nodes_443",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "cidr_blocks": [],
          "description": "Node groups to cluster API",
          "from_port": 443,
          "id": "sgrule-436131350",
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_group_id": "sg-075f036ed87625991",
          "self": false,
          "source_security_group_id": "sg-08928dd39a77f67ac",
          "to_port": 443,
          "type": "ingress"
        },
        "after": {
          "cidr_blocks": [],
          "description": "Node groups to cluster API",
          "from_port": 443,
          "id": "sgrule-436131350",
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_group_id": "sg-075f036ed87625991",
          "self": false,
          "source_security_group_id": "sg-08928dd39a77f67ac",
          "to_port": 443,
          "type": "ingress"
        },
        "after_unknown": {},
        "before_sensitive": {
          "cidr_blocks": [],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": []
        },
        "after_sensitive": {
          "cidr_blocks": [],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": []
        }
      }
    },
    {
      "address": "module.eks.aws_security_group_rule.node[\"egress_cluster_443\"]",
      "module_address": "module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "node",
      "index": "egress_cluster_443",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "cidr_blocks": [],
          "description": "Node groups to cluster API",
          "from_port": 443,
          "id": "sgrule-825455177",
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_group_id": "sg-08928dd39a77f67ac",
          "self": false,
          "source_security_group_id": "sg-075f036ed87625991",
          "to_port": 443,
          "type": "egress"
        },
        "after": {
          "cidr_blocks": [],
          "description": "Node groups to cluster API",
          "from_port": 443,
          "id": "sgrule-825455177",
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_group_id": "sg-08928dd39a77f67ac",
          "self": false,
          "source_security_group_id": "sg-075f036ed87625991",
          "to_port": 443,
          "type": "egress"
        },
        "after_unknown": {},
        "before_sensitive": {
          "cidr_blocks": [],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": []
        },
        "after_sensitive": {
          "cidr_blocks": [],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": []
        }
      }
    },
    {
      "address": "module.eks.aws_security_group_rule.node[\"egress_https\"]",
      "module_address": "module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "node",
      "index": "egress_https",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "cidr_blocks": [
            "0.0.0.0/0"
          ],
          "description": "Egress all HTTPS to internet",
          "from_port": 443,
          "id": "sgrule-453343291",
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_group_id": "sg-08928dd39a77f67ac",
          "self": false,
          "source_security_group_id": null,
          "to_port": 443,
          "type": "egress"
        },
        "after": {
          "cidr_blocks": [
            "0.0.0.0/0"
          ],
          "description": "Egress all HTTPS to internet",
          "from_port": 443,
          "id": "sgrule-453343291",
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_group_id": "sg-08928dd39a77f67ac",
          "self": false,
          "source_security_group_id": null,
          "to_port": 443,
          "type": "egress"
        },
        "after_unknown": {},
        "before_sensitive": {
          "cidr_blocks": [
            false
          ],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": []
        },
        "after_sensitive": {
          "cidr_blocks": [
            false
          ],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": []
        }
      }
    },
    {
      "address": "module.eks.aws_security_group_rule.node[\"egress_ntp_tcp\"]",
      "module_address": "module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "node",
      "index": "egress_ntp_tcp",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "cidr_blocks": [
            "0.0.0.0/0"
          ],
          "description": "Egress NTP/TCP to internet",
          "from_port": 123,
          "id": "sgrule-3302704421",
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_group_id": "sg-08928dd39a77f67ac",
          "self": false,
          "source_security_group_id": null,
          "to_port": 123,
          "type": "egress"
        },
        "after": {
          "cidr_blocks": [
            "0.0.0.0/0"
          ],
          "description": "Egress NTP/TCP to internet",
          "from_port": 123,
          "id": "sgrule-3302704421",
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_group_id": "sg-08928dd39a77f67ac",
          "self": false,
          "source_security_group_id": null,
          "to_port": 123,
          "type": "egress"
        },
        "after_unknown": {},
        "before_sensitive": {
          "cidr_blocks": [
            false
          ],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": []
        },
        "after_sensitive": {
          "cidr_blocks": [
            false
          ],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": []
        }
      }
    },
    {
      "address": "module.eks.aws_security_group_rule.node[\"egress_ntp_udp\"]",
      "module_address": "module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "node",
      "index": "egress_ntp_udp",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "cidr_blocks": [
            "0.0.0.0/0"
          ],
          "description": "Egress NTP/UDP to internet",
          "from_port": 123,
          "id": "sgrule-3125108776",
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "udp",
          "security_group_id": "sg-08928dd39a77f67ac",
          "self": false,
          "source_security_group_id": null,
          "to_port": 123,
          "type": "egress"
        },
        "after": {
          "cidr_blocks": [
            "0.0.0.0/0"
          ],
          "description": "Egress NTP/UDP to internet",
          "from_port": 123,
          "id": "sgrule-3125108776",
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "udp",
          "security_group_id": "sg-08928dd39a77f67ac",
          "self": false,
          "source_security_group_id": null,
          "to_port": 123,
          "type": "egress"
        },
        "after_unknown": {},
        "before_sensitive": {
          "cidr_blocks": [
            false
          ],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": []
        },
        "after_sensitive": {
          "cidr_blocks": [
            false
          ],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": []
        }
      }
    },
    {
      "address": "module.eks.aws_security_group_rule.node[\"egress_self_coredns_tcp\"]",
      "module_address": "module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "node",
      "index": "egress_self_coredns_tcp",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "cidr_blocks": [],
          "description": "Node to node CoreDNS",
          "from_port": 53,
          "id": "sgrule-2857198722",
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_group_id": "sg-08928dd39a77f67ac",
          "self": true,
          "source_security_group_id": "sg-08928dd39a77f67ac",
          "to_port": 53,
          "type": "egress"
        },
        "after": {
          "cidr_blocks": [],
          "description": "Node to node CoreDNS",
          "from_port": 53,
          "id": "sgrule-2857198722",
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_group_id": "sg-08928dd39a77f67ac",
          "self": true,
          "source_security_group_id": "sg-08928dd39a77f67ac",
          "to_port": 53,
          "type": "egress"
        },
        "after_unknown": {},
        "before_sensitive": {
          "cidr_blocks": [],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": []
        },
        "after_sensitive": {
          "cidr_blocks": [],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": []
        }
      }
    },
    {
      "address": "module.eks.aws_security_group_rule.node[\"egress_self_coredns_udp\"]",
      "module_address": "module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "node",
      "index": "egress_self_coredns_udp",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "cidr_blocks": [],
          "description": "Node to node CoreDNS",
          "from_port": 53,
          "id": "sgrule-606791396",
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "udp",
          "security_group_id": "sg-08928dd39a77f67ac",
          "self": true,
          "source_security_group_id": "sg-08928dd39a77f67ac",
          "to_port": 53,
          "type": "egress"
        },
        "after": {
          "cidr_blocks": [],
          "description": "Node to node CoreDNS",
          "from_port": 53,
          "id": "sgrule-606791396",
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "udp",
          "security_group_id": "sg-08928dd39a77f67ac",
          "self": true,
          "source_security_group_id": "sg-08928dd39a77f67ac",
          "to_port": 53,
          "type": "egress"
        },
        "after_unknown": {},
        "before_sensitive": {
          "cidr_blocks": [],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": []
        },
        "after_sensitive": {
          "cidr_blocks": [],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": []
        }
      }
    },
    {
      "address": "module.eks.aws_security_group_rule.node[\"ingress_cluster_443\"]",
      "module_address": "module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "node",
      "index": "ingress_cluster_443",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "cidr_blocks": [],
          "description": "Cluster API to node groups",
          "from_port": 443,
          "id": "sgrule-3631171479",
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_group_id": "sg-08928dd39a77f67ac",
          "self": false,
          "source_security_group_id": "sg-075f036ed87625991",
          "to_port": 443,
          "type": "ingress"
        },
        "after": {
          "cidr_blocks": [],
          "description": "Cluster API to node groups",
          "from_port": 443,
          "id": "sgrule-3631171479",
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_group_id": "sg-08928dd39a77f67ac",
          "self": false,
          "source_security_group_id": "sg-075f036ed87625991",
          "to_port": 443,
          "type": "ingress"
        },
        "after_unknown": {},
        "before_sensitive": {
          "cidr_blocks": [],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": []
        },
        "after_sensitive": {
          "cidr_blocks": [],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": []
        }
      }
    },
    {
      "address": "module.eks.aws_security_group_rule.node[\"ingress_cluster_kubelet\"]",
      "module_address": "module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "node",
      "index": "ingress_cluster_kubelet",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "cidr_blocks": [],
          "description": "Cluster API to node kubelets",
          "from_port": 10250,
          "id": "sgrule-1111592918",
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_group_id": "sg-08928dd39a77f67ac",
          "self": false,
          "source_security_group_id": "sg-075f036ed87625991",
          "to_port": 10250,
          "type": "ingress"
        },
        "after": {
          "cidr_blocks": [],
          "description": "Cluster API to node kubelets",
          "from_port": 10250,
          "id": "sgrule-1111592918",
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_group_id": "sg-08928dd39a77f67ac",
          "self": false,
          "source_security_group_id": "sg-075f036ed87625991",
          "to_port": 10250,
          "type": "ingress"
        },
        "after_unknown": {},
        "before_sensitive": {
          "cidr_blocks": [],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": []
        },
        "after_sensitive": {
          "cidr_blocks": [],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": []
        }
      }
    },
    {
      "address": "module.eks.aws_security_group_rule.node[\"ingress_self_coredns_tcp\"]",
      "module_address": "module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "node",
      "index": "ingress_self_coredns_tcp",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "cidr_blocks": [],
          "description": "Node to node CoreDNS",
          "from_port": 53,
          "id": "sgrule-1138857251",
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_group_id": "sg-08928dd39a77f67ac",
          "self": true,
          "source_security_group_id": "sg-08928dd39a77f67ac",
          "to_port": 53,
          "type": "ingress"
        },
        "after": {
          "cidr_blocks": [],
          "description": "Node to node CoreDNS",
          "from_port": 53,
          "id": "sgrule-1138857251",
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_group_id": "sg-08928dd39a77f67ac",
          "self": true,
          "source_security_group_id": "sg-08928dd39a77f67ac",
          "to_port": 53,
          "type": "ingress"
        },
        "after_unknown": {},
        "before_sensitive": {
          "cidr_blocks": [],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": []
        },
        "after_sensitive": {
          "cidr_blocks": [],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": []
        }
      }
    },
    {
      "address": "module.eks.aws_security_group_rule.node[\"ingress_self_coredns_udp\"]",
      "module_address": "module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "node",
      "index": "ingress_self_coredns_udp",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "cidr_blocks": [],
          "description": "Node to node CoreDNS",
          "from_port": 53,
          "id": "sgrule-3888002764",
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "udp",
          "security_group_id": "sg-08928dd39a77f67ac",
          "self": true,
          "source_security_group_id": "sg-08928dd39a77f67ac",
          "to_port": 53,
          "type": "ingress"
        },
        "after": {
          "cidr_blocks": [],
          "description": "Node to node CoreDNS",
          "from_port": 53,
          "id": "sgrule-3888002764",
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "udp",
          "security_group_id": "sg-08928dd39a77f67ac",
          "self": true,
          "source_security_group_id": "sg-08928dd39a77f67ac",
          "to_port": 53,
          "type": "ingress"
        },
        "after_unknown": {},
        "before_sensitive": {
          "cidr_blocks": [],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": []
        },
        "after_sensitive": {
          "cidr_blocks": [],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": []
        }
      }
    },
    {
      "address": "module.eks.module.eks_managed_node_group[\"blue\"].aws_eks_node_group.this[0]",
      "module_address": "module.eks.module.eks_managed_node_group[\"blue\"]",
      "mode": "managed",
      "type": "aws_eks_node_group",
      "name": "this",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "update"
        ],
        "before": {
          "ami_type": "AL2_x86_64",
          "arn": "arn:aws:eks:us-east-1:767534018423:nodegroup/dev-demo/blue-20220123200614296800000003/f6bf4445-eefc-1ec1-69d9-693c79adb61a",
          "capacity_type": "ON_DEMAND",
          "cluster_name": "dev-demo",
          "disk_size": 0,
          "force_update_version": null,
          "id": "dev-demo:blue-20220123200614296800000003",
          "instance_types": [
            "t3.medium",
            "t3.large",
            "c5.large"
          ],
          "labels": {},
          "launch_template": [
            {
              "id": "lt-09056990f5a86652e",
              "name": "blue-20220123185736995400000014",
              "version": "1"
            }
          ],
          "node_group_name": "blue-20220123200614296800000003",
          "node_group_name_prefix": "blue-",
          "node_role_arn": "arn:aws:iam::767534018423:role/blue-eks-node-group-20220123184118752000000009",
          "release_version": "1.21.5-20220112",
          "remote_access": [],
          "resources": [
            {
              "autoscaling_groups": [
                {
                  "name": "eks-blue-20220123200614296800000003-f6bf4445-eefc-1ec1-69d9-693c79adb61a"
                }
              ],
              "remote_access_security_group_id": ""
            }
          ],
          "scaling_config": [
            {
              "desired_size": 1,
              "max_size": 3,
              "min_size": 1
            }
          ],
          "status": "ACTIVE",
          "subnet_ids": [
            "subnet-032ae1b0fdf5ec242",
            "subnet-067ea905e5e41ae0f",
            "subnet-069f93a090e0f24ed"
          ],
          "tags": {
            "Name": "blue"
          },
          "tags_all": {
            "Name": "blue"
          },
          "taint": [],
          "timeouts": {
            "create": null,
            "delete": null,
            "update": null
          },
          "update_config": [
            {
              "max_unavailable": 1,
              "max_unavailable_percentage": 0
            }
          ],
          "version": "1.21"
        },
        "after": {
          "ami_type": "AL2_x86_64",
          "arn": "arn:aws:eks:us-east-1:767534018423:nodegroup/dev-demo/blue-20220123200614296800000003/f6bf4445-eefc-1ec1-69d9-693c79adb61a",
          "capacity_type": "ON_DEMAND",
          "cluster_name": "dev-demo",
          "disk_size": 0,
          "force_update_version": null,
          "id": "dev-demo:blue-20220123200614296800000003",
          "instance_types": [
            "t3.medium",
            "t3.large",
            "c5.large"
          ],
          "labels": {},
          "launch_template": [
            {
              "id": "lt-09056990f5a86652e",
              "name": "blue-20220123185736995400000014"
            }
          ],
          "node_group_name": "blue-20220123200614296800000003",
          "node_group_name_prefix": "blue-",
          "node_role_arn": "arn:aws:iam::767534018423:role/blue-eks-node-group-20220123184118752000000009",
          "release_version": "1.21.5-20220112",
          "remote_access": [],
          "resources": [
            {
              "autoscaling_groups": [
                {
                  "name": "eks-blue-20220123200614296800000003-f6bf4445-eefc-1ec1-69d9-693c79adb61a"
                }
              ],
              "remote_access_security_group_id": ""
            }
          ],
          "scaling_config": [
            {
              "desired_size": 1,
              "max_size": 3,
              "min_size": 1
            }
          ],
          "status": "ACTIVE",
          "subnet_ids": [
            "subnet-032ae1b0fdf5ec242",
            "subnet-067ea905e5e41ae0f",
            "subnet-069f93a090e0f24ed"
          ],
          "tags": {
            "Name": "blue"
          },
          "tags_all": {
            "Name": "blue"
          },
          "taint": [],
          "timeouts": {
            "create": null,
            "delete": null,
            "update": null
          },
          "update_config": [
            {
              "max_unavailable": 1,
              "max_unavailable_percentage": 0
            }
          ],
          "version": "1.21"
        },
        "after_unknown": {
          "instance_types": [
            false,
            false,
            false
          ],
          "labels": {},
          "launch_template": [
            {
              "version": true
            }
          ],
          "remote_access": [],
          "resources": [
            {
              "autoscaling_groups": [
                {}
              ]
            }
          ],
          "scaling_config": [
            {}
          ],
          "subnet_ids": [
            false,
            false,
            false
          ],
          "tags": {},
          "tags_all": {},
          "taint": [],
          "timeouts": {},
          "update_config": [
            {}
          ]
        },
        "before_sensitive": {
          "instance_types": [
            false,
            false,
            false
          ],
          "labels": {},
          "launch_template": [
            {}
          ],
          "remote_access": [],
          "resources": [
            {
              "autoscaling_groups": [
                {}
              ]
            }
          ],
          "scaling_config": [
            {}
          ],
          "subnet_ids": [
            false,
            false,
            false
          ],
          "tags": {},
          "tags_all": {},
          "taint": [],
          "timeouts": {},
          "update_config": [
            {}
          ]
        },
        "after_sensitive": {
          "instance_types": [
            false,
            false,
            false
          ],
          "labels": {},
          "launch_template": [
            {}
          ],
          "remote_access": [],
          "resources": [
            {
              "autoscaling_groups": [
                {}
              ]
            }
          ],
          "scaling_config": [
            {}
          ],
          "subnet_ids": [
            false,
            false,
            false
          ],
          "tags": {},
          "tags_all": {},
          "taint": [],
          "timeouts": {},
          "update_config": [
            {}
          ]
        }
      }
    },
    {
      "address": "module.eks.module.eks_managed_node_group[\"blue\"].aws_iam_role.this[0]",
      "module_address": "module.eks.module.eks_managed_node_group[\"blue\"]",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "this",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "arn": "arn:aws:iam::767534018423:role/blue-eks-node-group-20220123184118752000000009",
          "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"EKSNodeAssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
          "create_date": "2022-01-23T18:41:18Z",
          "description": "EKS managed node group IAM role",
          "force_detach_policies": true,
          "id": "blue-eks-node-group-20220123184118752000000009",
          "inline_policy": [
            {
              "name": "",
              "policy": ""
            }
          ],
          "managed_policy_arns": [
            "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
            "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
            "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"
          ],
          "max_session_duration": 3600,
          "name": "blue-eks-node-group-20220123184118752000000009",
          "name_prefix": "blue-eks-node-group-",
          "path": "/",
          "permissions_boundary": null,
          "tags": {},
          "tags_all": {},
          "unique_id": "AROA3FNEXV535CQ3GIGNZ"
        },
        "after": {
          "arn": "arn:aws:iam::767534018423:role/blue-eks-node-group-20220123184118752000000009",
          "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"EKSNodeAssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
          "create_date": "2022-01-23T18:41:18Z",
          "description": "EKS managed node group IAM role",
          "force_detach_policies": true,
          "id": "blue-eks-node-group-20220123184118752000000009",
          "inline_policy": [
            {
              "name": "",
              "policy": ""
            }
          ],
          "managed_policy_arns": [
            "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
            "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
            "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"
          ],
          "max_session_duration": 3600,
          "name": "blue-eks-node-group-20220123184118752000000009",
          "name_prefix": "blue-eks-node-group-",
          "path": "/",
          "permissions_boundary": null,
          "tags": {},
          "tags_all": {},
          "unique_id": "AROA3FNEXV535CQ3GIGNZ"
        },
        "after_unknown": {},
        "before_sensitive": {
          "inline_policy": [
            {}
          ],
          "managed_policy_arns": [
            false,
            false,
            false
          ],
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "inline_policy": [
            {}
          ],
          "managed_policy_arns": [
            false,
            false,
            false
          ],
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.eks.module.eks_managed_node_group[\"blue\"].aws_iam_role_policy_attachment.this[\"arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly\"]",
      "module_address": "module.eks.module.eks_managed_node_group[\"blue\"]",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "this",
      "index": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "id": "blue-eks-node-group-20220123184118752000000009-2022012318412103960000000c",
          "policy_arn": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
          "role": "blue-eks-node-group-20220123184118752000000009"
        },
        "after": {
          "id": "blue-eks-node-group-20220123184118752000000009-2022012318412103960000000c",
          "policy_arn": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
          "role": "blue-eks-node-group-20220123184118752000000009"
        },
        "after_unknown": {},
        "before_sensitive": {},
        "after_sensitive": {}
      }
    },
    {
      "address": "module.eks.module.eks_managed_node_group[\"blue\"].aws_iam_role_policy_attachment.this[\"arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy\"]",
      "module_address": "module.eks.module.eks_managed_node_group[\"blue\"]",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "this",
      "index": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "id": "blue-eks-node-group-20220123184118752000000009-2022012318412132100000000e",
          "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
          "role": "blue-eks-node-group-20220123184118752000000009"
        },
        "after": {
          "id": "blue-eks-node-group-20220123184118752000000009-2022012318412132100000000e",
          "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
          "role": "blue-eks-node-group-20220123184118752000000009"
        },
        "after_unknown": {},
        "before_sensitive": {},
        "after_sensitive": {}
      }
    },
    {
      "address": "module.eks.module.eks_managed_node_group[\"blue\"].aws_iam_role_policy_attachment.this[\"arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy\"]",
      "module_address": "module.eks.module.eks_managed_node_group[\"blue\"]",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "this",
      "index": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "id": "blue-eks-node-group-20220123184118752000000009-2022012318412080060000000b",
          "policy_arn": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
          "role": "blue-eks-node-group-20220123184118752000000009"
        },
        "after": {
          "id": "blue-eks-node-group-20220123184118752000000009-2022012318412080060000000b",
          "policy_arn": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
          "role": "blue-eks-node-group-20220123184118752000000009"
        },
        "after_unknown": {},
        "before_sensitive": {},
        "after_sensitive": {}
      }
    },
    {
      "address": "module.eks.module.eks_managed_node_group[\"blue\"].aws_launch_template.this[0]",
      "module_address": "module.eks.module.eks_managed_node_group[\"blue\"]",
      "mode": "managed",
      "type": "aws_launch_template",
      "name": "this",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "update"
        ],
        "before": {
          "arn": "arn:aws:ec2:us-east-1:767534018423:launch-template/lt-09056990f5a86652e",
          "block_device_mappings": [],
          "capacity_reservation_specification": [],
          "cpu_options": [],
          "credit_specification": [],
          "default_version": 1,
          "description": "Custom launch template for blue EKS managed node group",
          "disable_api_termination": false,
          "ebs_optimized": "",
          "elastic_gpu_specifications": [],
          "elastic_inference_accelerator": [],
          "enclave_options": [],
          "hibernation_options": [],
          "iam_instance_profile": [],
          "id": "lt-09056990f5a86652e",
          "image_id": "",
          "instance_initiated_shutdown_behavior": "",
          "instance_market_options": [],
          "instance_type": "",
          "kernel_id": "",
          "key_name": "",
          "latest_version": 1,
          "license_specification": [],
          "metadata_options": [
            {
              "http_endpoint": "enabled",
              "http_protocol_ipv6": "disabled",
              "http_put_response_hop_limit": 2,
              "http_tokens": "required",
              "instance_metadata_tags": "disabled"
            }
          ],
          "monitoring": [
            {
              "enabled": true
            }
          ],
          "name": "blue-20220123185736995400000014",
          "name_prefix": "blue-",
          "network_interfaces": [],
          "placement": [],
          "ram_disk_id": "",
          "security_group_names": [],
          "tag_specifications": [
            {
              "resource_type": "instance",
              "tags": {
                "Name": "blue"
              }
            },
            {
              "resource_type": "network-interface",
              "tags": {
                "Name": "blue"
              }
            },
            {
              "resource_type": "volume",
              "tags": {
                "Name": "blue"
              }
            }
          ],
          "tags": {},
          "tags_all": {},
          "update_default_version": true,
          "user_data": "",
          "vpc_security_group_ids": [
            "sg-03574098139c61e81",
            "sg-068475abe08320154",
            "sg-08928dd39a77f67ac"
          ]
        },
        "after": {
          "arn": "arn:aws:ec2:us-east-1:767534018423:launch-template/lt-09056990f5a86652e",
          "block_device_mappings": [],
          "capacity_reservation_specification": [],
          "cpu_options": [],
          "credit_specification": [],
          "description": "Custom launch template for blue EKS managed node group",
          "disable_api_termination": false,
          "ebs_optimized": "",
          "elastic_gpu_specifications": [],
          "elastic_inference_accelerator": [],
          "enclave_options": [],
          "hibernation_options": [],
          "iam_instance_profile": [],
          "id": "lt-09056990f5a86652e",
          "image_id": "",
          "instance_initiated_shutdown_behavior": "",
          "instance_market_options": [],
          "instance_type": "",
          "kernel_id": "",
          "key_name": "",
          "license_specification": [],
          "metadata_options": [
            {
              "http_endpoint": "enabled",
              "http_protocol_ipv6": "disabled",
              "http_put_response_hop_limit": 2,
              "http_tokens": "required",
              "instance_metadata_tags": "disabled"
            }
          ],
          "monitoring": [
            {
              "enabled": true
            }
          ],
          "name": "blue-20220123185736995400000014",
          "name_prefix": "blue-",
          "network_interfaces": [],
          "placement": [],
          "ram_disk_id": "",
          "security_group_names": [],
          "tag_specifications": [
            {
              "resource_type": "instance",
              "tags": {
                "Name": "blue"
              }
            },
            {
              "resource_type": "network-interface",
              "tags": {
                "Name": "blue"
              }
            },
            {
              "resource_type": "volume",
              "tags": {
                "Name": "blue"
              }
            }
          ],
          "tags": {},
          "tags_all": {},
          "update_default_version": true,
          "user_data": "",
          "vpc_security_group_ids": [
            "sg-068475abe08320154",
            "sg-08928dd39a77f67ac"
          ]
        },
        "after_unknown": {
          "block_device_mappings": [],
          "capacity_reservation_specification": [],
          "cpu_options": [],
          "credit_specification": [],
          "default_version": true,
          "elastic_gpu_specifications": [],
          "elastic_inference_accelerator": [],
          "enclave_options": [],
          "hibernation_options": [],
          "iam_instance_profile": [],
          "instance_market_options": [],
          "latest_version": true,
          "license_specification": [],
          "metadata_options": [
            {}
          ],
          "monitoring": [
            {}
          ],
          "network_interfaces": [],
          "placement": [],
          "security_group_names": [],
          "tag_specifications": [
            {
              "tags": {}
            },
            {
              "tags": {}
            },
            {
              "tags": {}
            }
          ],
          "tags": {},
          "tags_all": {},
          "vpc_security_group_ids": [
            false,
            false
          ]
        },
        "before_sensitive": {
          "block_device_mappings": [],
          "capacity_reservation_specification": [],
          "cpu_options": [],
          "credit_specification": [],
          "elastic_gpu_specifications": [],
          "elastic_inference_accelerator": [],
          "enclave_options": [],
          "hibernation_options": [],
          "iam_instance_profile": [],
          "instance_market_options": [],
          "license_specification": [],
          "metadata_options": [
            {}
          ],
          "monitoring": [
            {}
          ],
          "network_interfaces": [],
          "placement": [],
          "security_group_names": [],
          "tag_specifications": [
            {
              "tags": {}
            },
            {
              "tags": {}
            },
            {
              "tags": {}
            }
          ],
          "tags": {},
          "tags_all": {},
          "vpc_security_group_ids": [
            false,
            false,
            false
          ]
        },
        "after_sensitive": {
          "block_device_mappings": [],
          "capacity_reservation_specification": [],
          "cpu_options": [],
          "credit_specification": [],
          "elastic_gpu_specifications": [],
          "elastic_inference_accelerator": [],
          "enclave_options": [],
          "hibernation_options": [],
          "iam_instance_profile": [],
          "instance_market_options": [],
          "license_specification": [],
          "metadata_options": [
            {}
          ],
          "monitoring": [
            {}
          ],
          "network_interfaces": [],
          "placement": [],
          "security_group_names": [],
          "tag_specifications": [
            {
              "tags": {}
            },
            {
              "tags": {}
            },
            {
              "tags": {}
            }
          ],
          "tags": {},
          "tags_all": {},
          "vpc_security_group_ids": [
            false,
            false
          ]
        }
      }
    },
    {
      "address": "module.eks.module.eks_managed_node_group[\"blue\"].aws_security_group.this[0]",
      "module_address": "module.eks.module.eks_managed_node_group[\"blue\"]",
      "mode": "managed",
      "type": "aws_security_group",
      "name": "this",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "arn": "arn:aws:ec2:us-east-1:767534018423:security-group/sg-068475abe08320154",
          "description": "EKS managed node group security group",
          "egress": [],
          "id": "sg-068475abe08320154",
          "ingress": [],
          "name": "blue-eks-node-group-20220123184118375200000008",
          "name_prefix": "blue-eks-node-group-",
          "owner_id": "767534018423",
          "revoke_rules_on_delete": false,
          "tags": {
            "Name": "blue-eks-node-group"
          },
          "tags_all": {
            "Name": "blue-eks-node-group"
          },
          "timeouts": null,
          "vpc_id": "vpc-00fc46c587795f3a2"
        },
        "after": {
          "arn": "arn:aws:ec2:us-east-1:767534018423:security-group/sg-068475abe08320154",
          "description": "EKS managed node group security group",
          "egress": [],
          "id": "sg-068475abe08320154",
          "ingress": [],
          "name": "blue-eks-node-group-20220123184118375200000008",
          "name_prefix": "blue-eks-node-group-",
          "owner_id": "767534018423",
          "revoke_rules_on_delete": false,
          "tags": {
            "Name": "blue-eks-node-group"
          },
          "tags_all": {
            "Name": "blue-eks-node-group"
          },
          "timeouts": null,
          "vpc_id": "vpc-00fc46c587795f3a2"
        },
        "after_unknown": {},
        "before_sensitive": {
          "egress": [],
          "ingress": [],
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "egress": [],
          "ingress": [],
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.eks.module.eks_managed_node_group[\"green\"].aws_eks_node_group.this[0]",
      "module_address": "module.eks.module.eks_managed_node_group[\"green\"]",
      "mode": "managed",
      "type": "aws_eks_node_group",
      "name": "this",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "update"
        ],
        "before": {
          "ami_type": "AL2_x86_64",
          "arn": "arn:aws:eks:us-east-1:767534018423:nodegroup/dev-demo/green-20220123200614296200000001/24bf4445-ee8f-8da0-8398-b248ddd91ac7",
          "capacity_type": "SPOT",
          "cluster_name": "dev-demo",
          "disk_size": 0,
          "force_update_version": null,
          "id": "dev-demo:green-20220123200614296200000001",
          "instance_types": [
            "t3.medium"
          ],
          "labels": {
            "ControlledBy": "Terraform",
            "Terraform": "true",
            "environment": "dev"
          },
          "launch_template": [
            {
              "id": "lt-0155e6d9255d12fea",
              "name": "green-20220123185736995900000016",
              "version": "1"
            }
          ],
          "node_group_name": "green-20220123200614296200000001",
          "node_group_name_prefix": "green-",
          "node_role_arn": "arn:aws:iam::767534018423:role/green-eks-node-group-2022012318411901130000000a",
          "release_version": "1.21.5-20220112",
          "remote_access": [],
          "resources": [
            {
              "autoscaling_groups": [
                {
                  "name": "eks-green-20220123200614296200000001-24bf4445-ee8f-8da0-8398-b248ddd91ac7"
                }
              ],
              "remote_access_security_group_id": ""
            }
          ],
          "scaling_config": [
            {
              "desired_size": 1,
              "max_size": 10,
              "min_size": 1
            }
          ],
          "status": "ACTIVE",
          "subnet_ids": [
            "subnet-032ae1b0fdf5ec242",
            "subnet-067ea905e5e41ae0f",
            "subnet-069f93a090e0f24ed"
          ],
          "tags": {
            "ControlledBy": "Terraform",
            "Name": "green",
            "Terraform": "true",
            "environment": "dev"
          },
          "tags_all": {
            "ControlledBy": "Terraform",
            "Name": "green",
            "Terraform": "true",
            "environment": "dev"
          },
          "taint": [],
          "timeouts": {
            "create": null,
            "delete": null,
            "update": null
          },
          "update_config": [
            {
              "max_unavailable": 1,
              "max_unavailable_percentage": 0
            }
          ],
          "version": "1.21"
        },
        "after": {
          "ami_type": "AL2_x86_64",
          "arn": "arn:aws:eks:us-east-1:767534018423:nodegroup/dev-demo/green-20220123200614296200000001/24bf4445-ee8f-8da0-8398-b248ddd91ac7",
          "capacity_type": "SPOT",
          "cluster_name": "dev-demo",
          "disk_size": 0,
          "force_update_version": null,
          "id": "dev-demo:green-20220123200614296200000001",
          "instance_types": [
            "t3.medium"
          ],
          "labels": {},
          "launch_template": [
            {
              "id": "lt-0155e6d9255d12fea",
              "name": "green-20220123185736995900000016"
            }
          ],
          "node_group_name": "green-20220123200614296200000001",
          "node_group_name_prefix": "green-",
          "node_role_arn": "arn:aws:iam::767534018423:role/green-eks-node-group-2022012318411901130000000a",
          "release_version": "1.21.5-20220112",
          "remote_access": [],
          "resources": [
            {
              "autoscaling_groups": [
                {
                  "name": "eks-green-20220123200614296200000001-24bf4445-ee8f-8da0-8398-b248ddd91ac7"
                }
              ],
              "remote_access_security_group_id": ""
            }
          ],
          "scaling_config": [
            {
              "desired_size": 1,
              "max_size": 10,
              "min_size": 1
            }
          ],
          "status": "ACTIVE",
          "subnet_ids": [
            "subnet-032ae1b0fdf5ec242",
            "subnet-067ea905e5e41ae0f",
            "subnet-069f93a090e0f24ed"
          ],
          "tags": {
            "Name": "green"
          },
          "tags_all": {
            "Name": "green"
          },
          "taint": [],
          "timeouts": {
            "create": null,
            "delete": null,
            "update": null
          },
          "update_config": [
            {
              "max_unavailable": 1,
              "max_unavailable_percentage": 0
            }
          ],
          "version": "1.21"
        },
        "after_unknown": {
          "instance_types": [
            false
          ],
          "labels": {},
          "launch_template": [
            {
              "version": true
            }
          ],
          "remote_access": [],
          "resources": [
            {
              "autoscaling_groups": [
                {}
              ]
            }
          ],
          "scaling_config": [
            {}
          ],
          "subnet_ids": [
            false,
            false,
            false
          ],
          "tags": {},
          "tags_all": {},
          "taint": [],
          "timeouts": {},
          "update_config": [
            {}
          ]
        },
        "before_sensitive": {
          "instance_types": [
            false
          ],
          "labels": {},
          "launch_template": [
            {}
          ],
          "remote_access": [],
          "resources": [
            {
              "autoscaling_groups": [
                {}
              ]
            }
          ],
          "scaling_config": [
            {}
          ],
          "subnet_ids": [
            false,
            false,
            false
          ],
          "tags": {},
          "tags_all": {},
          "taint": [],
          "timeouts": {},
          "update_config": [
            {}
          ]
        },
        "after_sensitive": {
          "instance_types": [
            false
          ],
          "labels": {},
          "launch_template": [
            {}
          ],
          "remote_access": [],
          "resources": [
            {
              "autoscaling_groups": [
                {}
              ]
            }
          ],
          "scaling_config": [
            {}
          ],
          "subnet_ids": [
            false,
            false,
            false
          ],
          "tags": {},
          "tags_all": {},
          "taint": [],
          "timeouts": {},
          "update_config": [
            {}
          ]
        }
      }
    },
    {
      "address": "module.eks.module.eks_managed_node_group[\"green\"].aws_iam_role.this[0]",
      "module_address": "module.eks.module.eks_managed_node_group[\"green\"]",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "this",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "update"
        ],
        "before": {
          "arn": "arn:aws:iam::767534018423:role/green-eks-node-group-2022012318411901130000000a",
          "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"EKSNodeAssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
          "create_date": "2022-01-23T18:41:19Z",
          "description": "EKS managed node group IAM role",
          "force_detach_policies": true,
          "id": "green-eks-node-group-2022012318411901130000000a",
          "inline_policy": [
            {
              "name": "",
              "policy": ""
            }
          ],
          "managed_policy_arns": [
            "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
            "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
            "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"
          ],
          "max_session_duration": 3600,
          "name": "green-eks-node-group-2022012318411901130000000a",
          "name_prefix": "green-eks-node-group-",
          "path": "/",
          "permissions_boundary": null,
          "tags": {
            "ControlledBy": "Terraform",
            "Terraform": "true",
            "environment": "dev"
          },
          "tags_all": {
            "ControlledBy": "Terraform",
            "Terraform": "true",
            "environment": "dev"
          },
          "unique_id": "AROA3FNEXV53U7NI7TN7C"
        },
        "after": {
          "arn": "arn:aws:iam::767534018423:role/green-eks-node-group-2022012318411901130000000a",
          "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"EKSNodeAssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
          "create_date": "2022-01-23T18:41:19Z",
          "description": "EKS managed node group IAM role",
          "force_detach_policies": true,
          "id": "green-eks-node-group-2022012318411901130000000a",
          "inline_policy": [
            {
              "name": "",
              "policy": ""
            }
          ],
          "managed_policy_arns": [
            "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
            "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
            "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"
          ],
          "max_session_duration": 3600,
          "name": "green-eks-node-group-2022012318411901130000000a",
          "name_prefix": "green-eks-node-group-",
          "path": "/",
          "permissions_boundary": null,
          "tags": {},
          "unique_id": "AROA3FNEXV53U7NI7TN7C"
        },
        "after_unknown": {
          "inline_policy": [
            {}
          ],
          "managed_policy_arns": [
            false,
            false,
            false
          ],
          "tags": {},
          "tags_all": true
        },
        "before_sensitive": {
          "inline_policy": [
            {}
          ],
          "managed_policy_arns": [
            false,
            false,
            false
          ],
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "inline_policy": [
            {}
          ],
          "managed_policy_arns": [
            false,
            false,
            false
          ],
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.eks.module.eks_managed_node_group[\"green\"].aws_iam_role_policy_attachment.this[\"arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly\"]",
      "module_address": "module.eks.module.eks_managed_node_group[\"green\"]",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "this",
      "index": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "id": "green-eks-node-group-2022012318411901130000000a-20220123184121525700000010",
          "policy_arn": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
          "role": "green-eks-node-group-2022012318411901130000000a"
        },
        "after": {
          "id": "green-eks-node-group-2022012318411901130000000a-20220123184121525700000010",
          "policy_arn": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
          "role": "green-eks-node-group-2022012318411901130000000a"
        },
        "after_unknown": {},
        "before_sensitive": {},
        "after_sensitive": {}
      }
    },
    {
      "address": "module.eks.module.eks_managed_node_group[\"green\"].aws_iam_role_policy_attachment.this[\"arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy\"]",
      "module_address": "module.eks.module.eks_managed_node_group[\"green\"]",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "this",
      "index": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "id": "green-eks-node-group-2022012318411901130000000a-2022012318412139080000000f",
          "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
          "role": "green-eks-node-group-2022012318411901130000000a"
        },
        "after": {
          "id": "green-eks-node-group-2022012318411901130000000a-2022012318412139080000000f",
          "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
          "role": "green-eks-node-group-2022012318411901130000000a"
        },
        "after_unknown": {},
        "before_sensitive": {},
        "after_sensitive": {}
      }
    },
    {
      "address": "module.eks.module.eks_managed_node_group[\"green\"].aws_iam_role_policy_attachment.this[\"arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy\"]",
      "module_address": "module.eks.module.eks_managed_node_group[\"green\"]",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "this",
      "index": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "id": "green-eks-node-group-2022012318411901130000000a-2022012318412131010000000d",
          "policy_arn": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
          "role": "green-eks-node-group-2022012318411901130000000a"
        },
        "after": {
          "id": "green-eks-node-group-2022012318411901130000000a-2022012318412131010000000d",
          "policy_arn": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
          "role": "green-eks-node-group-2022012318411901130000000a"
        },
        "after_unknown": {},
        "before_sensitive": {},
        "after_sensitive": {}
      }
    },
    {
      "address": "module.eks.module.eks_managed_node_group[\"green\"].aws_launch_template.this[0]",
      "module_address": "module.eks.module.eks_managed_node_group[\"green\"]",
      "mode": "managed",
      "type": "aws_launch_template",
      "name": "this",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "update"
        ],
        "before": {
          "arn": "arn:aws:ec2:us-east-1:767534018423:launch-template/lt-0155e6d9255d12fea",
          "block_device_mappings": [],
          "capacity_reservation_specification": [],
          "cpu_options": [],
          "credit_specification": [],
          "default_version": 1,
          "description": "Custom launch template for green EKS managed node group",
          "disable_api_termination": false,
          "ebs_optimized": "",
          "elastic_gpu_specifications": [],
          "elastic_inference_accelerator": [],
          "enclave_options": [],
          "hibernation_options": [],
          "iam_instance_profile": [],
          "id": "lt-0155e6d9255d12fea",
          "image_id": "",
          "instance_initiated_shutdown_behavior": "",
          "instance_market_options": [],
          "instance_type": "",
          "kernel_id": "",
          "key_name": "",
          "latest_version": 1,
          "license_specification": [],
          "metadata_options": [
            {
              "http_endpoint": "enabled",
              "http_protocol_ipv6": "disabled",
              "http_put_response_hop_limit": 2,
              "http_tokens": "required",
              "instance_metadata_tags": "disabled"
            }
          ],
          "monitoring": [
            {
              "enabled": true
            }
          ],
          "name": "green-20220123185736995900000016",
          "name_prefix": "green-",
          "network_interfaces": [],
          "placement": [],
          "ram_disk_id": "",
          "security_group_names": [],
          "tag_specifications": [
            {
              "resource_type": "instance",
              "tags": {
                "ControlledBy": "Terraform",
                "Name": "green",
                "Terraform": "true",
                "environment": "dev"
              }
            },
            {
              "resource_type": "network-interface",
              "tags": {
                "ControlledBy": "Terraform",
                "Name": "green",
                "Terraform": "true",
                "environment": "dev"
              }
            },
            {
              "resource_type": "volume",
              "tags": {
                "ControlledBy": "Terraform",
                "Name": "green",
                "Terraform": "true",
                "environment": "dev"
              }
            }
          ],
          "tags": {
            "ControlledBy": "Terraform",
            "Terraform": "true",
            "environment": "dev"
          },
          "tags_all": {
            "ControlledBy": "Terraform",
            "Terraform": "true",
            "environment": "dev"
          },
          "update_default_version": true,
          "user_data": "",
          "vpc_security_group_ids": [
            "sg-03574098139c61e81",
            "sg-07671c060ced2bc33",
            "sg-08928dd39a77f67ac"
          ]
        },
        "after": {
          "arn": "arn:aws:ec2:us-east-1:767534018423:launch-template/lt-0155e6d9255d12fea",
          "block_device_mappings": [],
          "capacity_reservation_specification": [],
          "cpu_options": [],
          "credit_specification": [],
          "description": "Custom launch template for green EKS managed node group",
          "disable_api_termination": false,
          "ebs_optimized": "",
          "elastic_gpu_specifications": [],
          "elastic_inference_accelerator": [],
          "enclave_options": [],
          "hibernation_options": [],
          "iam_instance_profile": [],
          "id": "lt-0155e6d9255d12fea",
          "image_id": "",
          "instance_initiated_shutdown_behavior": "",
          "instance_market_options": [],
          "instance_type": "",
          "kernel_id": "",
          "key_name": "",
          "license_specification": [],
          "metadata_options": [
            {
              "http_endpoint": "enabled",
              "http_protocol_ipv6": "disabled",
              "http_put_response_hop_limit": 2,
              "http_tokens": "required",
              "instance_metadata_tags": "disabled"
            }
          ],
          "monitoring": [
            {
              "enabled": true
            }
          ],
          "name": "green-20220123185736995900000016",
          "name_prefix": "green-",
          "network_interfaces": [],
          "placement": [],
          "ram_disk_id": "",
          "security_group_names": [],
          "tag_specifications": [
            {
              "resource_type": "instance",
              "tags": {
                "Name": "green"
              }
            },
            {
              "resource_type": "network-interface",
              "tags": {
                "Name": "green"
              }
            },
            {
              "resource_type": "volume",
              "tags": {
                "Name": "green"
              }
            }
          ],
          "tags": {},
          "update_default_version": true,
          "user_data": "",
          "vpc_security_group_ids": [
            "sg-07671c060ced2bc33",
            "sg-08928dd39a77f67ac"
          ]
        },
        "after_unknown": {
          "block_device_mappings": [],
          "capacity_reservation_specification": [],
          "cpu_options": [],
          "credit_specification": [],
          "default_version": true,
          "elastic_gpu_specifications": [],
          "elastic_inference_accelerator": [],
          "enclave_options": [],
          "hibernation_options": [],
          "iam_instance_profile": [],
          "instance_market_options": [],
          "latest_version": true,
          "license_specification": [],
          "metadata_options": [
            {}
          ],
          "monitoring": [
            {}
          ],
          "network_interfaces": [],
          "placement": [],
          "security_group_names": [],
          "tag_specifications": [
            {
              "tags": {}
            },
            {
              "tags": {}
            },
            {
              "tags": {}
            }
          ],
          "tags": {},
          "tags_all": true,
          "vpc_security_group_ids": [
            false,
            false
          ]
        },
        "before_sensitive": {
          "block_device_mappings": [],
          "capacity_reservation_specification": [],
          "cpu_options": [],
          "credit_specification": [],
          "elastic_gpu_specifications": [],
          "elastic_inference_accelerator": [],
          "enclave_options": [],
          "hibernation_options": [],
          "iam_instance_profile": [],
          "instance_market_options": [],
          "license_specification": [],
          "metadata_options": [
            {}
          ],
          "monitoring": [
            {}
          ],
          "network_interfaces": [],
          "placement": [],
          "security_group_names": [],
          "tag_specifications": [
            {
              "tags": {}
            },
            {
              "tags": {}
            },
            {
              "tags": {}
            }
          ],
          "tags": {},
          "tags_all": {},
          "vpc_security_group_ids": [
            false,
            false,
            false
          ]
        },
        "after_sensitive": {
          "block_device_mappings": [],
          "capacity_reservation_specification": [],
          "cpu_options": [],
          "credit_specification": [],
          "elastic_gpu_specifications": [],
          "elastic_inference_accelerator": [],
          "enclave_options": [],
          "hibernation_options": [],
          "iam_instance_profile": [],
          "instance_market_options": [],
          "license_specification": [],
          "metadata_options": [
            {}
          ],
          "monitoring": [
            {}
          ],
          "network_interfaces": [],
          "placement": [],
          "security_group_names": [],
          "tag_specifications": [
            {
              "tags": {}
            },
            {
              "tags": {}
            },
            {
              "tags": {}
            }
          ],
          "tags": {},
          "tags_all": {},
          "vpc_security_group_ids": [
            false,
            false
          ]
        }
      }
    },
    {
      "address": "module.eks.module.eks_managed_node_group[\"green\"].aws_security_group.this[0]",
      "module_address": "module.eks.module.eks_managed_node_group[\"green\"]",
      "mode": "managed",
      "type": "aws_security_group",
      "name": "this",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "update"
        ],
        "before": {
          "arn": "arn:aws:ec2:us-east-1:767534018423:security-group/sg-07671c060ced2bc33",
          "description": "EKS managed node group security group",
          "egress": [],
          "id": "sg-07671c060ced2bc33",
          "ingress": [],
          "name": "green-eks-node-group-20220123184117153600000007",
          "name_prefix": "green-eks-node-group-",
          "owner_id": "767534018423",
          "revoke_rules_on_delete": false,
          "tags": {
            "ControlledBy": "Terraform",
            "Name": "green-eks-node-group",
            "Terraform": "true",
            "environment": "dev"
          },
          "tags_all": {
            "ControlledBy": "Terraform",
            "Name": "green-eks-node-group",
            "Terraform": "true",
            "environment": "dev"
          },
          "timeouts": null,
          "vpc_id": "vpc-00fc46c587795f3a2"
        },
        "after": {
          "arn": "arn:aws:ec2:us-east-1:767534018423:security-group/sg-07671c060ced2bc33",
          "description": "EKS managed node group security group",
          "egress": [],
          "id": "sg-07671c060ced2bc33",
          "ingress": [],
          "name": "green-eks-node-group-20220123184117153600000007",
          "name_prefix": "green-eks-node-group-",
          "owner_id": "767534018423",
          "revoke_rules_on_delete": false,
          "tags": {
            "Name": "green-eks-node-group"
          },
          "tags_all": {
            "Name": "green-eks-node-group"
          },
          "timeouts": null,
          "vpc_id": "vpc-00fc46c587795f3a2"
        },
        "after_unknown": {},
        "before_sensitive": {
          "egress": [],
          "ingress": [],
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "egress": [],
          "ingress": [],
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.vpc.aws_eip.nat[0]",
      "module_address": "module.vpc",
      "mode": "managed",
      "type": "aws_eip",
      "name": "nat",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "update"
        ],
        "before": {
          "address": null,
          "allocation_id": "eipalloc-0bd9b6ac0c333edd0",
          "associate_with_private_ip": null,
          "association_id": "eipassoc-0e18ee59147831411",
          "carrier_ip": "",
          "customer_owned_ip": "",
          "customer_owned_ipv4_pool": "",
          "domain": "vpc",
          "id": "eipalloc-0bd9b6ac0c333edd0",
          "instance": "",
          "network_border_group": "us-east-1",
          "network_interface": "eni-072159fa7287e87b9",
          "private_dns": "ip-10-0-101-61.ec2.internal",
          "private_ip": "10.0.101.61",
          "public_dns": "ec2-3-211-123-169.compute-1.amazonaws.com",
          "public_ip": "3.211.123.169",
          "public_ipv4_pool": "amazon",
          "tags": {
            "ControlledBy": "Terraform",
            "Name": "dev-demo-us-east-1a",
            "Terraform": "true",
            "environment": "dev"
          },
          "tags_all": {
            "ControlledBy": "Terraform",
            "Name": "dev-demo-us-east-1a",
            "Terraform": "true",
            "environment": "dev"
          },
          "timeouts": null,
          "vpc": true
        },
        "after": {
          "address": null,
          "allocation_id": "eipalloc-0bd9b6ac0c333edd0",
          "associate_with_private_ip": null,
          "association_id": "eipassoc-0e18ee59147831411",
          "carrier_ip": "",
          "customer_owned_ip": "",
          "customer_owned_ipv4_pool": "",
          "domain": "vpc",
          "id": "eipalloc-0bd9b6ac0c333edd0",
          "instance": "",
          "network_border_group": "us-east-1",
          "network_interface": "eni-072159fa7287e87b9",
          "private_dns": "ip-10-0-101-61.ec2.internal",
          "private_ip": "10.0.101.61",
          "public_dns": "ec2-3-211-123-169.compute-1.amazonaws.com",
          "public_ip": "3.211.123.169",
          "public_ipv4_pool": "amazon",
          "tags": {
            "Name": "dev-demo-us-east-1a"
          },
          "tags_all": {
            "Name": "dev-demo-us-east-1a"
          },
          "timeouts": null,
          "vpc": true
        },
        "after_unknown": {},
        "before_sensitive": {
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.vpc.aws_internet_gateway.this[0]",
      "module_address": "module.vpc",
      "mode": "managed",
      "type": "aws_internet_gateway",
      "name": "this",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "update"
        ],
        "before": {
          "arn": "arn:aws:ec2:us-east-1:767534018423:internet-gateway/igw-0b3e64c326d3990a7",
          "id": "igw-0b3e64c326d3990a7",
          "owner_id": "767534018423",
          "tags": {
            "ControlledBy": "Terraform",
            "Name": "dev-demo",
            "Terraform": "true",
            "environment": "dev"
          },
          "tags_all": {
            "ControlledBy": "Terraform",
            "Name": "dev-demo",
            "Terraform": "true",
            "environment": "dev"
          },
          "vpc_id": "vpc-00fc46c587795f3a2"
        },
        "after": {
          "arn": "arn:aws:ec2:us-east-1:767534018423:internet-gateway/igw-0b3e64c326d3990a7",
          "id": "igw-0b3e64c326d3990a7",
          "owner_id": "767534018423",
          "tags": {
            "Name": "dev-demo"
          },
          "tags_all": {
            "Name": "dev-demo"
          },
          "vpc_id": "vpc-00fc46c587795f3a2"
        },
        "after_unknown": {},
        "before_sensitive": {
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.vpc.aws_nat_gateway.this[0]",
      "module_address": "module.vpc",
      "mode": "managed",
      "type": "aws_nat_gateway",
      "name": "this",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "update"
        ],
        "before": {
          "allocation_id": "eipalloc-0bd9b6ac0c333edd0",
          "connectivity_type": "public",
          "id": "nat-01227269d9bda2820",
          "network_interface_id": "eni-072159fa7287e87b9",
          "private_ip": "10.0.101.61",
          "public_ip": "3.211.123.169",
          "subnet_id": "subnet-015a80f9cbeb9e75e",
          "tags": {
            "ControlledBy": "Terraform",
            "Name": "dev-demo-us-east-1a",
            "Terraform": "true",
            "environment": "dev"
          },
          "tags_all": {
            "ControlledBy": "Terraform",
            "Name": "dev-demo-us-east-1a",
            "Terraform": "true",
            "environment": "dev"
          }
        },
        "after": {
          "allocation_id": "eipalloc-0bd9b6ac0c333edd0",
          "connectivity_type": "public",
          "id": "nat-01227269d9bda2820",
          "network_interface_id": "eni-072159fa7287e87b9",
          "private_ip": "10.0.101.61",
          "public_ip": "3.211.123.169",
          "subnet_id": "subnet-015a80f9cbeb9e75e",
          "tags": {
            "Name": "dev-demo-us-east-1a"
          },
          "tags_all": {
            "Name": "dev-demo-us-east-1a"
          }
        },
        "after_unknown": {},
        "before_sensitive": {
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.vpc.aws_route.private_nat_gateway[0]",
      "module_address": "module.vpc",
      "mode": "managed",
      "type": "aws_route",
      "name": "private_nat_gateway",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "carrier_gateway_id": "",
          "destination_cidr_block": "0.0.0.0/0",
          "destination_ipv6_cidr_block": "",
          "destination_prefix_list_id": "",
          "egress_only_gateway_id": "",
          "gateway_id": "",
          "id": "r-rtb-0eb5c8bc130cb61471080289494",
          "instance_id": "",
          "instance_owner_id": "",
          "local_gateway_id": "",
          "nat_gateway_id": "nat-01227269d9bda2820",
          "network_interface_id": "",
          "origin": "CreateRoute",
          "route_table_id": "rtb-0eb5c8bc130cb6147",
          "state": "active",
          "timeouts": {
            "create": "5m",
            "delete": null,
            "update": null
          },
          "transit_gateway_id": "",
          "vpc_endpoint_id": "",
          "vpc_peering_connection_id": ""
        },
        "after": {
          "carrier_gateway_id": "",
          "destination_cidr_block": "0.0.0.0/0",
          "destination_ipv6_cidr_block": "",
          "destination_prefix_list_id": "",
          "egress_only_gateway_id": "",
          "gateway_id": "",
          "id": "r-rtb-0eb5c8bc130cb61471080289494",
          "instance_id": "",
          "instance_owner_id": "",
          "local_gateway_id": "",
          "nat_gateway_id": "nat-01227269d9bda2820",
          "network_interface_id": "",
          "origin": "CreateRoute",
          "route_table_id": "rtb-0eb5c8bc130cb6147",
          "state": "active",
          "timeouts": {
            "create": "5m",
            "delete": null,
            "update": null
          },
          "transit_gateway_id": "",
          "vpc_endpoint_id": "",
          "vpc_peering_connection_id": ""
        },
        "after_unknown": {},
        "before_sensitive": {
          "timeouts": {}
        },
        "after_sensitive": {
          "timeouts": {}
        }
      }
    },
    {
      "address": "module.vpc.aws_route.public_internet_gateway[0]",
      "module_address": "module.vpc",
      "mode": "managed",
      "type": "aws_route",
      "name": "public_internet_gateway",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "carrier_gateway_id": "",
          "destination_cidr_block": "0.0.0.0/0",
          "destination_ipv6_cidr_block": "",
          "destination_prefix_list_id": "",
          "egress_only_gateway_id": "",
          "gateway_id": "igw-0b3e64c326d3990a7",
          "id": "r-rtb-0ca1a45db0732b6341080289494",
          "instance_id": "",
          "instance_owner_id": "",
          "local_gateway_id": "",
          "nat_gateway_id": "",
          "network_interface_id": "",
          "origin": "CreateRoute",
          "route_table_id": "rtb-0ca1a45db0732b634",
          "state": "active",
          "timeouts": {
            "create": "5m",
            "delete": null,
            "update": null
          },
          "transit_gateway_id": "",
          "vpc_endpoint_id": "",
          "vpc_peering_connection_id": ""
        },
        "after": {
          "carrier_gateway_id": "",
          "destination_cidr_block": "0.0.0.0/0",
          "destination_ipv6_cidr_block": "",
          "destination_prefix_list_id": "",
          "egress_only_gateway_id": "",
          "gateway_id": "igw-0b3e64c326d3990a7",
          "id": "r-rtb-0ca1a45db0732b6341080289494",
          "instance_id": "",
          "instance_owner_id": "",
          "local_gateway_id": "",
          "nat_gateway_id": "",
          "network_interface_id": "",
          "origin": "CreateRoute",
          "route_table_id": "rtb-0ca1a45db0732b634",
          "state": "active",
          "timeouts": {
            "create": "5m",
            "delete": null,
            "update": null
          },
          "transit_gateway_id": "",
          "vpc_endpoint_id": "",
          "vpc_peering_connection_id": ""
        },
        "after_unknown": {},
        "before_sensitive": {
          "timeouts": {}
        },
        "after_sensitive": {
          "timeouts": {}
        }
      }
    },
    {
      "address": "module.vpc.aws_route_table.private[0]",
      "module_address": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table",
      "name": "private",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "update"
        ],
        "before": {
          "arn": "arn:aws:ec2:us-east-1:767534018423:route-table/rtb-0eb5c8bc130cb6147",
          "id": "rtb-0eb5c8bc130cb6147",
          "owner_id": "767534018423",
          "propagating_vgws": [],
          "route": [
            {
              "carrier_gateway_id": "",
              "cidr_block": "0.0.0.0/0",
              "destination_prefix_list_id": "",
              "egress_only_gateway_id": "",
              "gateway_id": "",
              "instance_id": "",
              "ipv6_cidr_block": "",
              "local_gateway_id": "",
              "nat_gateway_id": "nat-01227269d9bda2820",
              "network_interface_id": "",
              "transit_gateway_id": "",
              "vpc_endpoint_id": "",
              "vpc_peering_connection_id": ""
            }
          ],
          "tags": {
            "ControlledBy": "Terraform",
            "Name": "dev-demo-private",
            "Terraform": "true",
            "environment": "dev"
          },
          "tags_all": {
            "ControlledBy": "Terraform",
            "Name": "dev-demo-private",
            "Terraform": "true",
            "environment": "dev"
          },
          "timeouts": null,
          "vpc_id": "vpc-00fc46c587795f3a2"
        },
        "after": {
          "arn": "arn:aws:ec2:us-east-1:767534018423:route-table/rtb-0eb5c8bc130cb6147",
          "id": "rtb-0eb5c8bc130cb6147",
          "owner_id": "767534018423",
          "propagating_vgws": [],
          "route": [
            {
              "carrier_gateway_id": "",
              "cidr_block": "0.0.0.0/0",
              "destination_prefix_list_id": "",
              "egress_only_gateway_id": "",
              "gateway_id": "",
              "instance_id": "",
              "ipv6_cidr_block": "",
              "local_gateway_id": "",
              "nat_gateway_id": "nat-01227269d9bda2820",
              "network_interface_id": "",
              "transit_gateway_id": "",
              "vpc_endpoint_id": "",
              "vpc_peering_connection_id": ""
            }
          ],
          "tags": {
            "Name": "dev-demo-private"
          },
          "tags_all": {
            "Name": "dev-demo-private"
          },
          "timeouts": null,
          "vpc_id": "vpc-00fc46c587795f3a2"
        },
        "after_unknown": {},
        "before_sensitive": {
          "propagating_vgws": [],
          "route": [
            {}
          ],
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "propagating_vgws": [],
          "route": [
            {}
          ],
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.vpc.aws_route_table.public[0]",
      "module_address": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table",
      "name": "public",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "update"
        ],
        "before": {
          "arn": "arn:aws:ec2:us-east-1:767534018423:route-table/rtb-0ca1a45db0732b634",
          "id": "rtb-0ca1a45db0732b634",
          "owner_id": "767534018423",
          "propagating_vgws": [],
          "route": [
            {
              "carrier_gateway_id": "",
              "cidr_block": "0.0.0.0/0",
              "destination_prefix_list_id": "",
              "egress_only_gateway_id": "",
              "gateway_id": "igw-0b3e64c326d3990a7",
              "instance_id": "",
              "ipv6_cidr_block": "",
              "local_gateway_id": "",
              "nat_gateway_id": "",
              "network_interface_id": "",
              "transit_gateway_id": "",
              "vpc_endpoint_id": "",
              "vpc_peering_connection_id": ""
            }
          ],
          "tags": {
            "ControlledBy": "Terraform",
            "Name": "dev-demo-public",
            "Terraform": "true",
            "environment": "dev"
          },
          "tags_all": {
            "ControlledBy": "Terraform",
            "Name": "dev-demo-public",
            "Terraform": "true",
            "environment": "dev"
          },
          "timeouts": null,
          "vpc_id": "vpc-00fc46c587795f3a2"
        },
        "after": {
          "arn": "arn:aws:ec2:us-east-1:767534018423:route-table/rtb-0ca1a45db0732b634",
          "id": "rtb-0ca1a45db0732b634",
          "owner_id": "767534018423",
          "propagating_vgws": [],
          "route": [
            {
              "carrier_gateway_id": "",
              "cidr_block": "0.0.0.0/0",
              "destination_prefix_list_id": "",
              "egress_only_gateway_id": "",
              "gateway_id": "igw-0b3e64c326d3990a7",
              "instance_id": "",
              "ipv6_cidr_block": "",
              "local_gateway_id": "",
              "nat_gateway_id": "",
              "network_interface_id": "",
              "transit_gateway_id": "",
              "vpc_endpoint_id": "",
              "vpc_peering_connection_id": ""
            }
          ],
          "tags": {
            "Name": "dev-demo-public"
          },
          "tags_all": {
            "Name": "dev-demo-public"
          },
          "timeouts": null,
          "vpc_id": "vpc-00fc46c587795f3a2"
        },
        "after_unknown": {},
        "before_sensitive": {
          "propagating_vgws": [],
          "route": [
            {}
          ],
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "propagating_vgws": [],
          "route": [
            {}
          ],
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.vpc.aws_route_table_association.private[0]",
      "module_address": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "private",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "gateway_id": "",
          "id": "rtbassoc-0dbf897e6c0674c74",
          "route_table_id": "rtb-0eb5c8bc130cb6147",
          "subnet_id": "subnet-067ea905e5e41ae0f"
        },
        "after": {
          "gateway_id": "",
          "id": "rtbassoc-0dbf897e6c0674c74",
          "route_table_id": "rtb-0eb5c8bc130cb6147",
          "subnet_id": "subnet-067ea905e5e41ae0f"
        },
        "after_unknown": {},
        "before_sensitive": {},
        "after_sensitive": {}
      }
    },
    {
      "address": "module.vpc.aws_route_table_association.private[1]",
      "module_address": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "private",
      "index": 1,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "gateway_id": "",
          "id": "rtbassoc-0ae2be6d9e1029d67",
          "route_table_id": "rtb-0eb5c8bc130cb6147",
          "subnet_id": "subnet-069f93a090e0f24ed"
        },
        "after": {
          "gateway_id": "",
          "id": "rtbassoc-0ae2be6d9e1029d67",
          "route_table_id": "rtb-0eb5c8bc130cb6147",
          "subnet_id": "subnet-069f93a090e0f24ed"
        },
        "after_unknown": {},
        "before_sensitive": {},
        "after_sensitive": {}
      }
    },
    {
      "address": "module.vpc.aws_route_table_association.private[2]",
      "module_address": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "private",
      "index": 2,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "gateway_id": "",
          "id": "rtbassoc-0fd8306dcd3c5b927",
          "route_table_id": "rtb-0eb5c8bc130cb6147",
          "subnet_id": "subnet-032ae1b0fdf5ec242"
        },
        "after": {
          "gateway_id": "",
          "id": "rtbassoc-0fd8306dcd3c5b927",
          "route_table_id": "rtb-0eb5c8bc130cb6147",
          "subnet_id": "subnet-032ae1b0fdf5ec242"
        },
        "after_unknown": {},
        "before_sensitive": {},
        "after_sensitive": {}
      }
    },
    {
      "address": "module.vpc.aws_route_table_association.public[0]",
      "module_address": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "public",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "gateway_id": "",
          "id": "rtbassoc-04058f42e5bec65b3",
          "route_table_id": "rtb-0ca1a45db0732b634",
          "subnet_id": "subnet-015a80f9cbeb9e75e"
        },
        "after": {
          "gateway_id": "",
          "id": "rtbassoc-04058f42e5bec65b3",
          "route_table_id": "rtb-0ca1a45db0732b634",
          "subnet_id": "subnet-015a80f9cbeb9e75e"
        },
        "after_unknown": {},
        "before_sensitive": {},
        "after_sensitive": {}
      }
    },
    {
      "address": "module.vpc.aws_route_table_association.public[1]",
      "module_address": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "public",
      "index": 1,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "gateway_id": "",
          "id": "rtbassoc-0ffe7adffcfff917c",
          "route_table_id": "rtb-0ca1a45db0732b634",
          "subnet_id": "subnet-08c80cb915aa41451"
        },
        "after": {
          "gateway_id": "",
          "id": "rtbassoc-0ffe7adffcfff917c",
          "route_table_id": "rtb-0ca1a45db0732b634",
          "subnet_id": "subnet-08c80cb915aa41451"
        },
        "after_unknown": {},
        "before_sensitive": {},
        "after_sensitive": {}
      }
    },
    {
      "address": "module.vpc.aws_route_table_association.public[2]",
      "module_address": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "public",
      "index": 2,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "no-op"
        ],
        "before": {
          "gateway_id": "",
          "id": "rtbassoc-0de8ab0eaf4aa392f",
          "route_table_id": "rtb-0ca1a45db0732b634",
          "subnet_id": "subnet-0ecbc0b2e847025a0"
        },
        "after": {
          "gateway_id": "",
          "id": "rtbassoc-0de8ab0eaf4aa392f",
          "route_table_id": "rtb-0ca1a45db0732b634",
          "subnet_id": "subnet-0ecbc0b2e847025a0"
        },
        "after_unknown": {},
        "before_sensitive": {},
        "after_sensitive": {}
      }
    },
    {
      "address": "module.vpc.aws_subnet.private[0]",
      "module_address": "module.vpc",
      "mode": "managed",
      "type": "aws_subnet",
      "name": "private",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "update"
        ],
        "before": {
          "arn": "arn:aws:ec2:us-east-1:767534018423:subnet/subnet-067ea905e5e41ae0f",
          "assign_ipv6_address_on_creation": false,
          "availability_zone": "us-east-1a",
          "availability_zone_id": "use1-az2",
          "cidr_block": "10.0.1.0/24",
          "customer_owned_ipv4_pool": "",
          "enable_dns64": false,
          "enable_resource_name_dns_a_record_on_launch": false,
          "enable_resource_name_dns_aaaa_record_on_launch": false,
          "id": "subnet-067ea905e5e41ae0f",
          "ipv6_cidr_block": "",
          "ipv6_cidr_block_association_id": "",
          "ipv6_native": false,
          "map_customer_owned_ip_on_launch": false,
          "map_public_ip_on_launch": false,
          "outpost_arn": "",
          "owner_id": "767534018423",
          "private_dns_hostname_type_on_launch": "ip-name",
          "tags": {
            "ControlledBy": "Terraform",
            "Name": "dev-demo-private-us-east-1a",
            "Terraform": "true",
            "environment": "dev",
            "kubernetes.io/cluster/dev-demo": "shared",
            "kubernetes.io/role/internal-elb": "1"
          },
          "tags_all": {
            "ControlledBy": "Terraform",
            "Name": "dev-demo-private-us-east-1a",
            "Terraform": "true",
            "environment": "dev",
            "kubernetes.io/cluster/dev-demo": "shared",
            "kubernetes.io/role/internal-elb": "1"
          },
          "timeouts": null,
          "vpc_id": "vpc-00fc46c587795f3a2"
        },
        "after": {
          "arn": "arn:aws:ec2:us-east-1:767534018423:subnet/subnet-067ea905e5e41ae0f",
          "assign_ipv6_address_on_creation": false,
          "availability_zone": "us-east-1a",
          "availability_zone_id": "use1-az2",
          "cidr_block": "10.0.1.0/24",
          "customer_owned_ipv4_pool": "",
          "enable_dns64": false,
          "enable_resource_name_dns_a_record_on_launch": false,
          "enable_resource_name_dns_aaaa_record_on_launch": false,
          "id": "subnet-067ea905e5e41ae0f",
          "ipv6_cidr_block": "",
          "ipv6_cidr_block_association_id": "",
          "ipv6_native": false,
          "map_customer_owned_ip_on_launch": false,
          "map_public_ip_on_launch": false,
          "outpost_arn": "",
          "owner_id": "767534018423",
          "private_dns_hostname_type_on_launch": "ip-name",
          "tags": {
            "Name": "dev-demo-private-us-east-1a",
            "kubernetes.io/cluster/dev-demo": "shared",
            "kubernetes.io/role/internal-elb": "1"
          },
          "tags_all": {
            "Name": "dev-demo-private-us-east-1a",
            "kubernetes.io/cluster/dev-demo": "shared",
            "kubernetes.io/role/internal-elb": "1"
          },
          "timeouts": null,
          "vpc_id": "vpc-00fc46c587795f3a2"
        },
        "after_unknown": {},
        "before_sensitive": {
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.vpc.aws_subnet.private[1]",
      "module_address": "module.vpc",
      "mode": "managed",
      "type": "aws_subnet",
      "name": "private",
      "index": 1,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "update"
        ],
        "before": {
          "arn": "arn:aws:ec2:us-east-1:767534018423:subnet/subnet-069f93a090e0f24ed",
          "assign_ipv6_address_on_creation": false,
          "availability_zone": "us-east-1b",
          "availability_zone_id": "use1-az4",
          "cidr_block": "10.0.2.0/24",
          "customer_owned_ipv4_pool": "",
          "enable_dns64": false,
          "enable_resource_name_dns_a_record_on_launch": false,
          "enable_resource_name_dns_aaaa_record_on_launch": false,
          "id": "subnet-069f93a090e0f24ed",
          "ipv6_cidr_block": "",
          "ipv6_cidr_block_association_id": "",
          "ipv6_native": false,
          "map_customer_owned_ip_on_launch": false,
          "map_public_ip_on_launch": false,
          "outpost_arn": "",
          "owner_id": "767534018423",
          "private_dns_hostname_type_on_launch": "ip-name",
          "tags": {
            "ControlledBy": "Terraform",
            "Name": "dev-demo-private-us-east-1b",
            "Terraform": "true",
            "environment": "dev",
            "kubernetes.io/cluster/dev-demo": "shared",
            "kubernetes.io/role/internal-elb": "1"
          },
          "tags_all": {
            "ControlledBy": "Terraform",
            "Name": "dev-demo-private-us-east-1b",
            "Terraform": "true",
            "environment": "dev",
            "kubernetes.io/cluster/dev-demo": "shared",
            "kubernetes.io/role/internal-elb": "1"
          },
          "timeouts": null,
          "vpc_id": "vpc-00fc46c587795f3a2"
        },
        "after": {
          "arn": "arn:aws:ec2:us-east-1:767534018423:subnet/subnet-069f93a090e0f24ed",
          "assign_ipv6_address_on_creation": false,
          "availability_zone": "us-east-1b",
          "availability_zone_id": "use1-az4",
          "cidr_block": "10.0.2.0/24",
          "customer_owned_ipv4_pool": "",
          "enable_dns64": false,
          "enable_resource_name_dns_a_record_on_launch": false,
          "enable_resource_name_dns_aaaa_record_on_launch": false,
          "id": "subnet-069f93a090e0f24ed",
          "ipv6_cidr_block": "",
          "ipv6_cidr_block_association_id": "",
          "ipv6_native": false,
          "map_customer_owned_ip_on_launch": false,
          "map_public_ip_on_launch": false,
          "outpost_arn": "",
          "owner_id": "767534018423",
          "private_dns_hostname_type_on_launch": "ip-name",
          "tags": {
            "Name": "dev-demo-private-us-east-1b",
            "kubernetes.io/cluster/dev-demo": "shared",
            "kubernetes.io/role/internal-elb": "1"
          },
          "tags_all": {
            "Name": "dev-demo-private-us-east-1b",
            "kubernetes.io/cluster/dev-demo": "shared",
            "kubernetes.io/role/internal-elb": "1"
          },
          "timeouts": null,
          "vpc_id": "vpc-00fc46c587795f3a2"
        },
        "after_unknown": {},
        "before_sensitive": {
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.vpc.aws_subnet.private[2]",
      "module_address": "module.vpc",
      "mode": "managed",
      "type": "aws_subnet",
      "name": "private",
      "index": 2,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "update"
        ],
        "before": {
          "arn": "arn:aws:ec2:us-east-1:767534018423:subnet/subnet-032ae1b0fdf5ec242",
          "assign_ipv6_address_on_creation": false,
          "availability_zone": "us-east-1c",
          "availability_zone_id": "use1-az6",
          "cidr_block": "10.0.3.0/24",
          "customer_owned_ipv4_pool": "",
          "enable_dns64": false,
          "enable_resource_name_dns_a_record_on_launch": false,
          "enable_resource_name_dns_aaaa_record_on_launch": false,
          "id": "subnet-032ae1b0fdf5ec242",
          "ipv6_cidr_block": "",
          "ipv6_cidr_block_association_id": "",
          "ipv6_native": false,
          "map_customer_owned_ip_on_launch": false,
          "map_public_ip_on_launch": false,
          "outpost_arn": "",
          "owner_id": "767534018423",
          "private_dns_hostname_type_on_launch": "ip-name",
          "tags": {
            "ControlledBy": "Terraform",
            "Name": "dev-demo-private-us-east-1c",
            "Terraform": "true",
            "environment": "dev",
            "kubernetes.io/cluster/dev-demo": "shared",
            "kubernetes.io/role/internal-elb": "1"
          },
          "tags_all": {
            "ControlledBy": "Terraform",
            "Name": "dev-demo-private-us-east-1c",
            "Terraform": "true",
            "environment": "dev",
            "kubernetes.io/cluster/dev-demo": "shared",
            "kubernetes.io/role/internal-elb": "1"
          },
          "timeouts": null,
          "vpc_id": "vpc-00fc46c587795f3a2"
        },
        "after": {
          "arn": "arn:aws:ec2:us-east-1:767534018423:subnet/subnet-032ae1b0fdf5ec242",
          "assign_ipv6_address_on_creation": false,
          "availability_zone": "us-east-1c",
          "availability_zone_id": "use1-az6",
          "cidr_block": "10.0.3.0/24",
          "customer_owned_ipv4_pool": "",
          "enable_dns64": false,
          "enable_resource_name_dns_a_record_on_launch": false,
          "enable_resource_name_dns_aaaa_record_on_launch": false,
          "id": "subnet-032ae1b0fdf5ec242",
          "ipv6_cidr_block": "",
          "ipv6_cidr_block_association_id": "",
          "ipv6_native": false,
          "map_customer_owned_ip_on_launch": false,
          "map_public_ip_on_launch": false,
          "outpost_arn": "",
          "owner_id": "767534018423",
          "private_dns_hostname_type_on_launch": "ip-name",
          "tags": {
            "Name": "dev-demo-private-us-east-1c",
            "kubernetes.io/cluster/dev-demo": "shared",
            "kubernetes.io/role/internal-elb": "1"
          },
          "tags_all": {
            "Name": "dev-demo-private-us-east-1c",
            "kubernetes.io/cluster/dev-demo": "shared",
            "kubernetes.io/role/internal-elb": "1"
          },
          "timeouts": null,
          "vpc_id": "vpc-00fc46c587795f3a2"
        },
        "after_unknown": {},
        "before_sensitive": {
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.vpc.aws_subnet.public[0]",
      "module_address": "module.vpc",
      "mode": "managed",
      "type": "aws_subnet",
      "name": "public",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "update"
        ],
        "before": {
          "arn": "arn:aws:ec2:us-east-1:767534018423:subnet/subnet-015a80f9cbeb9e75e",
          "assign_ipv6_address_on_creation": false,
          "availability_zone": "us-east-1a",
          "availability_zone_id": "use1-az2",
          "cidr_block": "10.0.101.0/24",
          "customer_owned_ipv4_pool": "",
          "enable_dns64": false,
          "enable_resource_name_dns_a_record_on_launch": false,
          "enable_resource_name_dns_aaaa_record_on_launch": false,
          "id": "subnet-015a80f9cbeb9e75e",
          "ipv6_cidr_block": "",
          "ipv6_cidr_block_association_id": "",
          "ipv6_native": false,
          "map_customer_owned_ip_on_launch": false,
          "map_public_ip_on_launch": true,
          "outpost_arn": "",
          "owner_id": "767534018423",
          "private_dns_hostname_type_on_launch": "ip-name",
          "tags": {
            "ControlledBy": "Terraform",
            "Name": "dev-demo-public-us-east-1a",
            "Terraform": "true",
            "environment": "dev",
            "kubernetes.io/cluster/dev-demo": "shared",
            "kubernetes.io/role/elb": "1"
          },
          "tags_all": {
            "ControlledBy": "Terraform",
            "Name": "dev-demo-public-us-east-1a",
            "Terraform": "true",
            "environment": "dev",
            "kubernetes.io/cluster/dev-demo": "shared",
            "kubernetes.io/role/elb": "1"
          },
          "timeouts": null,
          "vpc_id": "vpc-00fc46c587795f3a2"
        },
        "after": {
          "arn": "arn:aws:ec2:us-east-1:767534018423:subnet/subnet-015a80f9cbeb9e75e",
          "assign_ipv6_address_on_creation": false,
          "availability_zone": "us-east-1a",
          "availability_zone_id": "use1-az2",
          "cidr_block": "10.0.101.0/24",
          "customer_owned_ipv4_pool": "",
          "enable_dns64": false,
          "enable_resource_name_dns_a_record_on_launch": false,
          "enable_resource_name_dns_aaaa_record_on_launch": false,
          "id": "subnet-015a80f9cbeb9e75e",
          "ipv6_cidr_block": "",
          "ipv6_cidr_block_association_id": "",
          "ipv6_native": false,
          "map_customer_owned_ip_on_launch": false,
          "map_public_ip_on_launch": true,
          "outpost_arn": "",
          "owner_id": "767534018423",
          "private_dns_hostname_type_on_launch": "ip-name",
          "tags": {
            "Name": "dev-demo-public-us-east-1a",
            "kubernetes.io/cluster/dev-demo": "shared",
            "kubernetes.io/role/elb": "1"
          },
          "tags_all": {
            "Name": "dev-demo-public-us-east-1a",
            "kubernetes.io/cluster/dev-demo": "shared",
            "kubernetes.io/role/elb": "1"
          },
          "timeouts": null,
          "vpc_id": "vpc-00fc46c587795f3a2"
        },
        "after_unknown": {},
        "before_sensitive": {
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.vpc.aws_subnet.public[1]",
      "module_address": "module.vpc",
      "mode": "managed",
      "type": "aws_subnet",
      "name": "public",
      "index": 1,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "update"
        ],
        "before": {
          "arn": "arn:aws:ec2:us-east-1:767534018423:subnet/subnet-08c80cb915aa41451",
          "assign_ipv6_address_on_creation": false,
          "availability_zone": "us-east-1b",
          "availability_zone_id": "use1-az4",
          "cidr_block": "10.0.102.0/24",
          "customer_owned_ipv4_pool": "",
          "enable_dns64": false,
          "enable_resource_name_dns_a_record_on_launch": false,
          "enable_resource_name_dns_aaaa_record_on_launch": false,
          "id": "subnet-08c80cb915aa41451",
          "ipv6_cidr_block": "",
          "ipv6_cidr_block_association_id": "",
          "ipv6_native": false,
          "map_customer_owned_ip_on_launch": false,
          "map_public_ip_on_launch": true,
          "outpost_arn": "",
          "owner_id": "767534018423",
          "private_dns_hostname_type_on_launch": "ip-name",
          "tags": {
            "ControlledBy": "Terraform",
            "Name": "dev-demo-public-us-east-1b",
            "Terraform": "true",
            "environment": "dev",
            "kubernetes.io/cluster/dev-demo": "shared",
            "kubernetes.io/role/elb": "1"
          },
          "tags_all": {
            "ControlledBy": "Terraform",
            "Name": "dev-demo-public-us-east-1b",
            "Terraform": "true",
            "environment": "dev",
            "kubernetes.io/cluster/dev-demo": "shared",
            "kubernetes.io/role/elb": "1"
          },
          "timeouts": null,
          "vpc_id": "vpc-00fc46c587795f3a2"
        },
        "after": {
          "arn": "arn:aws:ec2:us-east-1:767534018423:subnet/subnet-08c80cb915aa41451",
          "assign_ipv6_address_on_creation": false,
          "availability_zone": "us-east-1b",
          "availability_zone_id": "use1-az4",
          "cidr_block": "10.0.102.0/24",
          "customer_owned_ipv4_pool": "",
          "enable_dns64": false,
          "enable_resource_name_dns_a_record_on_launch": false,
          "enable_resource_name_dns_aaaa_record_on_launch": false,
          "id": "subnet-08c80cb915aa41451",
          "ipv6_cidr_block": "",
          "ipv6_cidr_block_association_id": "",
          "ipv6_native": false,
          "map_customer_owned_ip_on_launch": false,
          "map_public_ip_on_launch": true,
          "outpost_arn": "",
          "owner_id": "767534018423",
          "private_dns_hostname_type_on_launch": "ip-name",
          "tags": {
            "Name": "dev-demo-public-us-east-1b",
            "kubernetes.io/cluster/dev-demo": "shared",
            "kubernetes.io/role/elb": "1"
          },
          "tags_all": {
            "Name": "dev-demo-public-us-east-1b",
            "kubernetes.io/cluster/dev-demo": "shared",
            "kubernetes.io/role/elb": "1"
          },
          "timeouts": null,
          "vpc_id": "vpc-00fc46c587795f3a2"
        },
        "after_unknown": {},
        "before_sensitive": {
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.vpc.aws_subnet.public[2]",
      "module_address": "module.vpc",
      "mode": "managed",
      "type": "aws_subnet",
      "name": "public",
      "index": 2,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "update"
        ],
        "before": {
          "arn": "arn:aws:ec2:us-east-1:767534018423:subnet/subnet-0ecbc0b2e847025a0",
          "assign_ipv6_address_on_creation": false,
          "availability_zone": "us-east-1c",
          "availability_zone_id": "use1-az6",
          "cidr_block": "10.0.103.0/24",
          "customer_owned_ipv4_pool": "",
          "enable_dns64": false,
          "enable_resource_name_dns_a_record_on_launch": false,
          "enable_resource_name_dns_aaaa_record_on_launch": false,
          "id": "subnet-0ecbc0b2e847025a0",
          "ipv6_cidr_block": "",
          "ipv6_cidr_block_association_id": "",
          "ipv6_native": false,
          "map_customer_owned_ip_on_launch": false,
          "map_public_ip_on_launch": true,
          "outpost_arn": "",
          "owner_id": "767534018423",
          "private_dns_hostname_type_on_launch": "ip-name",
          "tags": {
            "ControlledBy": "Terraform",
            "Name": "dev-demo-public-us-east-1c",
            "Terraform": "true",
            "environment": "dev",
            "kubernetes.io/cluster/dev-demo": "shared",
            "kubernetes.io/role/elb": "1"
          },
          "tags_all": {
            "ControlledBy": "Terraform",
            "Name": "dev-demo-public-us-east-1c",
            "Terraform": "true",
            "environment": "dev",
            "kubernetes.io/cluster/dev-demo": "shared",
            "kubernetes.io/role/elb": "1"
          },
          "timeouts": null,
          "vpc_id": "vpc-00fc46c587795f3a2"
        },
        "after": {
          "arn": "arn:aws:ec2:us-east-1:767534018423:subnet/subnet-0ecbc0b2e847025a0",
          "assign_ipv6_address_on_creation": false,
          "availability_zone": "us-east-1c",
          "availability_zone_id": "use1-az6",
          "cidr_block": "10.0.103.0/24",
          "customer_owned_ipv4_pool": "",
          "enable_dns64": false,
          "enable_resource_name_dns_a_record_on_launch": false,
          "enable_resource_name_dns_aaaa_record_on_launch": false,
          "id": "subnet-0ecbc0b2e847025a0",
          "ipv6_cidr_block": "",
          "ipv6_cidr_block_association_id": "",
          "ipv6_native": false,
          "map_customer_owned_ip_on_launch": false,
          "map_public_ip_on_launch": true,
          "outpost_arn": "",
          "owner_id": "767534018423",
          "private_dns_hostname_type_on_launch": "ip-name",
          "tags": {
            "Name": "dev-demo-public-us-east-1c",
            "kubernetes.io/cluster/dev-demo": "shared",
            "kubernetes.io/role/elb": "1"
          },
          "tags_all": {
            "Name": "dev-demo-public-us-east-1c",
            "kubernetes.io/cluster/dev-demo": "shared",
            "kubernetes.io/role/elb": "1"
          },
          "timeouts": null,
          "vpc_id": "vpc-00fc46c587795f3a2"
        },
        "after_unknown": {},
        "before_sensitive": {
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.vpc.aws_vpc.this[0]",
      "module_address": "module.vpc",
      "mode": "managed",
      "type": "aws_vpc",
      "name": "this",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "update"
        ],
        "before": {
          "arn": "arn:aws:ec2:us-east-1:767534018423:vpc/vpc-00fc46c587795f3a2",
          "assign_generated_ipv6_cidr_block": false,
          "cidr_block": "10.0.0.0/16",
          "default_network_acl_id": "acl-015989da2afa14fe8",
          "default_route_table_id": "rtb-08c3bf87fdb0fa331",
          "default_security_group_id": "sg-01c19b363e66bc9ed",
          "dhcp_options_id": "dopt-d2aa95ab",
          "enable_classiclink": false,
          "enable_classiclink_dns_support": false,
          "enable_dns_hostnames": true,
          "enable_dns_support": true,
          "id": "vpc-00fc46c587795f3a2",
          "instance_tenancy": "default",
          "ipv4_ipam_pool_id": null,
          "ipv4_netmask_length": null,
          "ipv6_association_id": "",
          "ipv6_cidr_block": "",
          "ipv6_cidr_block_network_border_group": "",
          "ipv6_ipam_pool_id": "",
          "ipv6_netmask_length": 0,
          "main_route_table_id": "rtb-08c3bf87fdb0fa331",
          "owner_id": "767534018423",
          "tags": {
            "ControlledBy": "Terraform",
            "Name": "dev-demo",
            "Terraform": "true",
            "environment": "dev"
          },
          "tags_all": {
            "ControlledBy": "Terraform",
            "Name": "dev-demo",
            "Terraform": "true",
            "environment": "dev"
          }
        },
        "after": {
          "arn": "arn:aws:ec2:us-east-1:767534018423:vpc/vpc-00fc46c587795f3a2",
          "assign_generated_ipv6_cidr_block": false,
          "cidr_block": "10.0.0.0/16",
          "default_network_acl_id": "acl-015989da2afa14fe8",
          "default_route_table_id": "rtb-08c3bf87fdb0fa331",
          "default_security_group_id": "sg-01c19b363e66bc9ed",
          "dhcp_options_id": "dopt-d2aa95ab",
          "enable_classiclink": false,
          "enable_classiclink_dns_support": false,
          "enable_dns_hostnames": true,
          "enable_dns_support": true,
          "id": "vpc-00fc46c587795f3a2",
          "instance_tenancy": "default",
          "ipv4_ipam_pool_id": null,
          "ipv4_netmask_length": null,
          "ipv6_association_id": "",
          "ipv6_cidr_block": "",
          "ipv6_cidr_block_network_border_group": "",
          "ipv6_ipam_pool_id": "",
          "ipv6_netmask_length": 0,
          "main_route_table_id": "rtb-08c3bf87fdb0fa331",
          "owner_id": "767534018423",
          "tags": {
            "Name": "dev-demo"
          },
          "tags_all": {
            "Name": "dev-demo"
          }
        },
        "after_unknown": {},
        "before_sensitive": {
          "tags": {},
          "tags_all": {}
        },
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    }
  ],
  "output_changes": {
    "cluster_addons": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": {
        "coredns": {
          "addon_name": "coredns",
          "addon_version": "v1.8.4-eksbuild.1",
          "arn": "arn:aws:eks:us-east-1:767534018423:addon/dev-demo/coredns/80bf4445-f2f1-6c54-f1fb-f3128982c35b",
          "cluster_name": "dev-demo",
          "created_at": "2022-01-23T20:06:16Z",
          "id": "dev-demo:coredns",
          "modified_at": "2022-01-23T20:07:23Z",
          "resolve_conflicts": "OVERWRITE",
          "service_account_role_arn": "",
          "tags": {},
          "tags_all": {}
        },
        "kube-proxy": {
          "addon_name": "kube-proxy",
          "addon_version": "v1.21.2-eksbuild.2",
          "arn": "arn:aws:eks:us-east-1:767534018423:addon/dev-demo/kube-proxy/b8bf4426-84de-1796-3d65-a2690dbeca36",
          "cluster_name": "dev-demo",
          "created_at": "2022-01-23T18:57:37Z",
          "id": "dev-demo:kube-proxy",
          "modified_at": "2022-01-23T18:57:38Z",
          "resolve_conflicts": null,
          "service_account_role_arn": "",
          "tags": {},
          "tags_all": {}
        },
        "vpc-cni": {
          "addon_name": "vpc-cni",
          "addon_version": "v1.10.1-eksbuild.1",
          "arn": "arn:aws:eks:us-east-1:767534018423:addon/dev-demo/vpc-cni/7abf4426-84db-d9c0-8aa5-9e7349f4ef64",
          "cluster_name": "dev-demo",
          "created_at": "2022-01-23T18:57:37Z",
          "id": "dev-demo:vpc-cni",
          "modified_at": "2022-01-23T18:57:38Z",
          "resolve_conflicts": "OVERWRITE",
          "service_account_role_arn": "",
          "tags": {},
          "tags_all": {}
        }
      },
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "cluster_endpoint": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "https://25DA5279A39940D35B91C73BFFF97403.gr7.us-east-1.eks.amazonaws.com",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "cluster_name": {
      "actions": [
        "no-op"
      ],
      "before": "dev-demo",
      "after": "dev-demo",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "cluster_status": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "ACTIVE",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "oidc_issuer_url": {
      "actions": [
        "no-op"
      ],
      "before": "https://oidc.eks.us-east-1.amazonaws.com/id/25DA5279A39940D35B91C73BFFF97403",
      "after": "https://oidc.eks.us-east-1.amazonaws.com/id/25DA5279A39940D35B91C73BFFF97403",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "oidc_provider_arn": {
      "actions": [
        "no-op"
      ],
      "before": "arn:aws:iam::767534018423:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/25DA5279A39940D35B91C73BFFF97403",
      "after": "arn:aws:iam::767534018423:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/25DA5279A39940D35B91C73BFFF97403",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "private_subnets": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": [
        "subnet-067ea905e5e41ae0f",
        "subnet-069f93a090e0f24ed",
        "subnet-032ae1b0fdf5ec242"
      ],
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "private_subnets_cidr_blocks": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": [
        "10.0.1.0/24",
        "10.0.2.0/24",
        "10.0.3.0/24"
      ],
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "public_subnets": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": [
        "subnet-015a80f9cbeb9e75e",
        "subnet-08c80cb915aa41451",
        "subnet-0ecbc0b2e847025a0"
      ],
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "public_subnets_cidr_blocks": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": [
        "10.0.101.0/24",
        "10.0.102.0/24",
        "10.0.103.0/24"
      ],
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "vpc_arn": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "arn:aws:ec2:us-east-1:767534018423:vpc/vpc-00fc46c587795f3a2",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "vpc_cidr_block": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "10.0.0.0/16",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "vpc_id": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "vpc-00fc46c587795f3a2",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    }
  },
  "prior_state": {
    "format_version": "1.0",
    "terraform_version": "1.1.4",
    "values": {
      "outputs": {
        "cluster_addons": {
          "sensitive": false,
          "value": {
            "coredns": {
              "addon_name": "coredns",
              "addon_version": "v1.8.4-eksbuild.1",
              "arn": "arn:aws:eks:us-east-1:767534018423:addon/dev-demo/coredns/80bf4445-f2f1-6c54-f1fb-f3128982c35b",
              "cluster_name": "dev-demo",
              "created_at": "2022-01-23T20:06:16Z",
              "id": "dev-demo:coredns",
              "modified_at": "2022-01-23T20:07:23Z",
              "resolve_conflicts": "OVERWRITE",
              "service_account_role_arn": "",
              "tags": {},
              "tags_all": {}
            },
            "kube-proxy": {
              "addon_name": "kube-proxy",
              "addon_version": "v1.21.2-eksbuild.2",
              "arn": "arn:aws:eks:us-east-1:767534018423:addon/dev-demo/kube-proxy/b8bf4426-84de-1796-3d65-a2690dbeca36",
              "cluster_name": "dev-demo",
              "created_at": "2022-01-23T18:57:37Z",
              "id": "dev-demo:kube-proxy",
              "modified_at": "2022-01-23T18:57:38Z",
              "resolve_conflicts": null,
              "service_account_role_arn": "",
              "tags": {},
              "tags_all": {}
            },
            "vpc-cni": {
              "addon_name": "vpc-cni",
              "addon_version": "v1.10.1-eksbuild.1",
              "arn": "arn:aws:eks:us-east-1:767534018423:addon/dev-demo/vpc-cni/7abf4426-84db-d9c0-8aa5-9e7349f4ef64",
              "cluster_name": "dev-demo",
              "created_at": "2022-01-23T18:57:37Z",
              "id": "dev-demo:vpc-cni",
              "modified_at": "2022-01-23T18:57:38Z",
              "resolve_conflicts": "OVERWRITE",
              "service_account_role_arn": "",
              "tags": {},
              "tags_all": {}
            }
          }
        },
        "cluster_endpoint": {
          "sensitive": false,
          "value": "https://25DA5279A39940D35B91C73BFFF97403.gr7.us-east-1.eks.amazonaws.com"
        },
        "cluster_name": {
          "sensitive": false,
          "value": "dev-demo"
        },
        "cluster_status": {
          "sensitive": false,
          "value": "ACTIVE"
        },
        "oidc_issuer_url": {
          "sensitive": false,
          "value": "https://oidc.eks.us-east-1.amazonaws.com/id/25DA5279A39940D35B91C73BFFF97403"
        },
        "oidc_provider_arn": {
          "sensitive": false,
          "value": "arn:aws:iam::767534018423:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/25DA5279A39940D35B91C73BFFF97403"
        },
        "private_subnets": {
          "sensitive": false,
          "value": [
            "subnet-067ea905e5e41ae0f",
            "subnet-069f93a090e0f24ed",
            "subnet-032ae1b0fdf5ec242"
          ]
        },
        "private_subnets_cidr_blocks": {
          "sensitive": false,
          "value": [
            "10.0.1.0/24",
            "10.0.2.0/24",
            "10.0.3.0/24"
          ]
        },
        "public_subnets": {
          "sensitive": false,
          "value": [
            "subnet-015a80f9cbeb9e75e",
            "subnet-08c80cb915aa41451",
            "subnet-0ecbc0b2e847025a0"
          ]
        },
        "public_subnets_cidr_blocks": {
          "sensitive": false,
          "value": [
            "10.0.101.0/24",
            "10.0.102.0/24",
            "10.0.103.0/24"
          ]
        },
        "vpc_arn": {
          "sensitive": false,
          "value": "arn:aws:ec2:us-east-1:767534018423:vpc/vpc-00fc46c587795f3a2"
        },
        "vpc_cidr_block": {
          "sensitive": false,
          "value": "10.0.0.0/16"
        },
        "vpc_id": {
          "sensitive": false,
          "value": "vpc-00fc46c587795f3a2"
        }
      },
      "root_module": {
        "resources": [
          {
            "address": "aws_kms_key.eks",
            "mode": "managed",
            "type": "aws_kms_key",
            "name": "eks",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "schema_version": 0,
            "values": {
              "arn": "arn:aws:kms:us-east-1:767534018423:key/2ee0dad3-981a-4424-9df9-6f1726abb77e",
              "bypass_policy_lockout_safety_check": false,
              "customer_master_key_spec": "SYMMETRIC_DEFAULT",
              "deletion_window_in_days": 7,
              "description": "EKS Secret Encryption Key",
              "enable_key_rotation": true,
              "id": "2ee0dad3-981a-4424-9df9-6f1726abb77e",
              "is_enabled": true,
              "key_id": "2ee0dad3-981a-4424-9df9-6f1726abb77e",
              "key_usage": "ENCRYPT_DECRYPT",
              "multi_region": false,
              "policy": "{\"Id\":\"key-default-1\",\"Statement\":[{\"Action\":\"kms:*\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::767534018423:root\"},\"Resource\":\"*\",\"Sid\":\"Enable IAM User Permissions\"}],\"Version\":\"2012-10-17\"}",
              "tags": {
                "ControlledBy": "Terraform",
                "Terraform": "true",
                "environment": "dev"
              },
              "tags_all": {
                "ControlledBy": "Terraform",
                "Terraform": "true",
                "environment": "dev"
              }
            },
            "sensitive_values": {
              "tags": {},
              "tags_all": {}
            }
          },
          {
            "address": "aws_security_group.additional",
            "mode": "managed",
            "type": "aws_security_group",
            "name": "additional",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "schema_version": 1,
            "values": {
              "arn": "arn:aws:ec2:us-east-1:767534018423:security-group/sg-03574098139c61e81",
              "description": "Managed by Terraform",
              "egress": [],
              "id": "sg-03574098139c61e81",
              "ingress": [
                {
                  "cidr_blocks": [
                    "10.0.0.0/8",
                    "172.16.0.0/12",
                    "192.168.0.0/16"
                  ],
                  "description": "",
                  "from_port": 22,
                  "ipv6_cidr_blocks": [],
                  "prefix_list_ids": [],
                  "protocol": "tcp",
                  "security_groups": [],
                  "self": false,
                  "to_port": 22
                }
              ],
              "name": "dev-demo-additional20220123184106696900000004",
              "name_prefix": "dev-demo-additional",
              "owner_id": "767534018423",
              "revoke_rules_on_delete": false,
              "tags": {
                "ControlledBy": "Terraform",
                "Terraform": "true",
                "environment": "dev"
              },
              "tags_all": {
                "ControlledBy": "Terraform",
                "Terraform": "true",
                "environment": "dev"
              },
              "timeouts": null,
              "vpc_id": "vpc-00fc46c587795f3a2"
            },
            "sensitive_values": {
              "egress": [],
              "ingress": [
                {
                  "cidr_blocks": [
                    false,
                    false,
                    false
                  ],
                  "ipv6_cidr_blocks": [],
                  "prefix_list_ids": [],
                  "security_groups": []
                }
              ],
              "tags": {},
              "tags_all": {}
            },
            "depends_on": [
              "module.vpc.aws_vpc.this"
            ]
          }
        ],
        "child_modules": [
          {
            "resources": [
              {
                "address": "module.eks.aws_cloudwatch_log_group.this[0]",
                "mode": "managed",
                "type": "aws_cloudwatch_log_group",
                "name": "this",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "arn": "arn:aws:logs:us-east-1:767534018423:log-group:/aws/eks/dev-demo/cluster",
                  "id": "/aws/eks/dev-demo/cluster",
                  "kms_key_id": "",
                  "name": "/aws/eks/dev-demo/cluster",
                  "name_prefix": null,
                  "retention_in_days": 90,
                  "tags": {},
                  "tags_all": {}
                },
                "sensitive_values": {
                  "tags": {},
                  "tags_all": {}
                }
              },
              {
                "address": "module.eks.aws_eks_addon.this[\"coredns\"]",
                "mode": "managed",
                "type": "aws_eks_addon",
                "name": "this",
                "index": "coredns",
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "addon_name": "coredns",
                  "addon_version": "v1.8.4-eksbuild.1",
                  "arn": "arn:aws:eks:us-east-1:767534018423:addon/dev-demo/coredns/80bf4445-f2f1-6c54-f1fb-f3128982c35b",
                  "cluster_name": "dev-demo",
                  "created_at": "2022-01-23T20:06:16Z",
                  "id": "dev-demo:coredns",
                  "modified_at": "2022-01-23T20:07:23Z",
                  "resolve_conflicts": "OVERWRITE",
                  "service_account_role_arn": "",
                  "tags": {},
                  "tags_all": {}
                },
                "sensitive_values": {
                  "tags": {},
                  "tags_all": {}
                },
                "depends_on": [
                  "aws_kms_key.eks",
                  "module.eks.aws_cloudwatch_log_group.this",
                  "module.eks.aws_eks_cluster.this",
                  "module.eks.aws_iam_role.this",
                  "module.eks.aws_iam_role_policy_attachment.this",
                  "module.eks.aws_security_group.cluster",
                  "module.eks.aws_security_group.node",
                  "module.eks.aws_security_group_rule.cluster",
                  "module.eks.aws_security_group_rule.node",
                  "module.eks.data.aws_iam_policy_document.assume_role_policy",
                  "module.eks.data.aws_partition.current",
                  "module.vpc.aws_subnet.private",
                  "module.vpc.aws_vpc.this",
                  "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
                ]
              },
              {
                "address": "module.eks.aws_eks_addon.this[\"kube-proxy\"]",
                "mode": "managed",
                "type": "aws_eks_addon",
                "name": "this",
                "index": "kube-proxy",
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "addon_name": "kube-proxy",
                  "addon_version": "v1.21.2-eksbuild.2",
                  "arn": "arn:aws:eks:us-east-1:767534018423:addon/dev-demo/kube-proxy/b8bf4426-84de-1796-3d65-a2690dbeca36",
                  "cluster_name": "dev-demo",
                  "created_at": "2022-01-23T18:57:37Z",
                  "id": "dev-demo:kube-proxy",
                  "modified_at": "2022-01-23T18:57:38Z",
                  "resolve_conflicts": null,
                  "service_account_role_arn": "",
                  "tags": {},
                  "tags_all": {}
                },
                "sensitive_values": {
                  "tags": {},
                  "tags_all": {}
                },
                "depends_on": [
                  "aws_kms_key.eks",
                  "module.eks.aws_cloudwatch_log_group.this",
                  "module.eks.aws_eks_cluster.this",
                  "module.eks.aws_iam_role.this",
                  "module.eks.aws_iam_role_policy_attachment.this",
                  "module.eks.aws_security_group.cluster",
                  "module.eks.aws_security_group.node",
                  "module.eks.aws_security_group_rule.cluster",
                  "module.eks.aws_security_group_rule.node",
                  "module.eks.data.aws_iam_policy_document.assume_role_policy",
                  "module.eks.data.aws_partition.current",
                  "module.vpc.aws_subnet.private",
                  "module.vpc.aws_vpc.this",
                  "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
                ]
              },
              {
                "address": "module.eks.aws_eks_addon.this[\"vpc-cni\"]",
                "mode": "managed",
                "type": "aws_eks_addon",
                "name": "this",
                "index": "vpc-cni",
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "addon_name": "vpc-cni",
                  "addon_version": "v1.10.1-eksbuild.1",
                  "arn": "arn:aws:eks:us-east-1:767534018423:addon/dev-demo/vpc-cni/7abf4426-84db-d9c0-8aa5-9e7349f4ef64",
                  "cluster_name": "dev-demo",
                  "created_at": "2022-01-23T18:57:37Z",
                  "id": "dev-demo:vpc-cni",
                  "modified_at": "2022-01-23T18:57:38Z",
                  "resolve_conflicts": "OVERWRITE",
                  "service_account_role_arn": "",
                  "tags": {},
                  "tags_all": {}
                },
                "sensitive_values": {
                  "tags": {},
                  "tags_all": {}
                },
                "depends_on": [
                  "aws_kms_key.eks",
                  "module.eks.aws_cloudwatch_log_group.this",
                  "module.eks.aws_eks_cluster.this",
                  "module.eks.aws_iam_role.this",
                  "module.eks.aws_iam_role_policy_attachment.this",
                  "module.eks.aws_security_group.cluster",
                  "module.eks.aws_security_group.node",
                  "module.eks.aws_security_group_rule.cluster",
                  "module.eks.aws_security_group_rule.node",
                  "module.eks.data.aws_iam_policy_document.assume_role_policy",
                  "module.eks.data.aws_partition.current",
                  "module.vpc.aws_subnet.private",
                  "module.vpc.aws_vpc.this",
                  "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
                ]
              },
              {
                "address": "module.eks.aws_eks_cluster.this[0]",
                "mode": "managed",
                "type": "aws_eks_cluster",
                "name": "this",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "arn": "arn:aws:eks:us-east-1:767534018423:cluster/dev-demo",
                  "certificate_authority": [
                    {
                      "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1ERXlNekU0TlRBME5Wb1hEVE15TURFeU1URTROVEEwTlZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTEdkCkRhTG5FTTh6UUJtbHJ3NGp3SjJCOXFzYXhrN21CcFM3L29nb3duNllCN2hPUnVGaG1mS2NITG8zWXdrTXI2RGoKQndBbWkrWkltOGZOYlRJN0djdER4WWlCUWFjbjgzS25ZZ01WeXZvVzRaRy9tOTB6WitIdThkYjZkZzRBY0xaVwowbnpUQ05oUm1QMG4rWCsxQkFyS1AwODRNU3poMUk5aWsxU3FtT09LbndvSXpDeGNJSTAvR3g4cWVNK1g1dnJwCkkvOFVTci9TNWdFM1NaT01YaGpaak9MQ21vM0dBRCtTTzFPMTZzUitYL3Q2YTEwMTdCWnJHd09ES2VMTlliMVgKWWRsTEdEbnUrc1d6N2JnN1BKWnpyY3NuUXJZc3I3eHNrc2x1WVdGZWNuWGNpQTRwRkpkTkh6dmFycnJmMkRiYgpwcmx0YzQrbHNzY2ozajZWMWtrQ0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZNK3d3eDZIM1c1VFJrYUNEaEZNc1lockF4Q3JNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFBYWdzdXp3QTJvYlBkRGt0Mng5ejJMWkhsSGpoV3dGeGFLUDF2Sm05RWJCalBZYVY2bQpUK2xBQnowRlFDSDRFQkxxRkFOakRNczNWYzhaWm4vODFDYkpvNE9zUE9acnU0K3lmcWRSaGIwYnUxamdaYW95Cm5iOElLUCs0Vy9RUTkvSGdrTWNvcVlpYXAyVmkrd2VNWFVBZFU1YkZXVW0xaWdld3htZkx6RlFYRk52a1BYWkoKZ21zTklYZjlCajE4aUpMQlYyaGExd3llWHlsdlU2Y1IzdFBZS01TSlFqYXJVaW5TOUUzQndDM3BnKzQ1VTYxcwpxTThvOWRkZDdQcll4bVdXcjQ5Z1dLTlRTQVcyNGRTSWo5ZCtXRW1ReUttVURvanlMM2o3aW40ZWtOejZpcGNxCmw2dys4b0pidUR2dDRsMnorNEY4ZlJnY0FraTNQSUFHTS9oRQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
                    }
                  ],
                  "created_at": "2022-01-23 18:44:06.563 +0000 UTC",
                  "enabled_cluster_log_types": [
                    "api",
                    "audit",
                    "authenticator"
                  ],
                  "encryption_config": [
                    {
                      "provider": [
                        {
                          "key_arn": "arn:aws:kms:us-east-1:767534018423:key/2ee0dad3-981a-4424-9df9-6f1726abb77e"
                        }
                      ],
                      "resources": [
                        "secrets"
                      ]
                    }
                  ],
                  "endpoint": "https://25DA5279A39940D35B91C73BFFF97403.gr7.us-east-1.eks.amazonaws.com",
                  "id": "dev-demo",
                  "identity": [
                    {
                      "oidc": [
                        {
                          "issuer": "https://oidc.eks.us-east-1.amazonaws.com/id/25DA5279A39940D35B91C73BFFF97403"
                        }
                      ]
                    }
                  ],
                  "kubernetes_network_config": [
                    {
                      "ip_family": "ipv4",
                      "service_ipv4_cidr": "172.20.0.0/16"
                    }
                  ],
                  "name": "dev-demo",
                  "platform_version": "eks.4",
                  "role_arn": "arn:aws:iam::767534018423:role/dev-demo-cluster-20220123184037125300000001",
                  "status": "ACTIVE",
                  "tags": {},
                  "tags_all": {},
                  "timeouts": {
                    "create": null,
                    "delete": null,
                    "update": null
                  },
                  "version": "1.21",
                  "vpc_config": [
                    {
                      "cluster_security_group_id": "sg-0657970c699ef7278",
                      "endpoint_private_access": true,
                      "endpoint_public_access": true,
                      "public_access_cidrs": [
                        "0.0.0.0/0"
                      ],
                      "security_group_ids": [
                        "sg-075f036ed87625991"
                      ],
                      "subnet_ids": [
                        "subnet-032ae1b0fdf5ec242",
                        "subnet-067ea905e5e41ae0f",
                        "subnet-069f93a090e0f24ed"
                      ],
                      "vpc_id": "vpc-00fc46c587795f3a2"
                    }
                  ]
                },
                "sensitive_values": {
                  "certificate_authority": [
                    {}
                  ],
                  "enabled_cluster_log_types": [
                    false,
                    false,
                    false
                  ],
                  "encryption_config": [
                    {
                      "provider": [
                        {}
                      ],
                      "resources": [
                        false
                      ]
                    }
                  ],
                  "identity": [
                    {
                      "oidc": [
                        {}
                      ]
                    }
                  ],
                  "kubernetes_network_config": [
                    {}
                  ],
                  "tags": {},
                  "tags_all": {},
                  "timeouts": {},
                  "vpc_config": [
                    {
                      "public_access_cidrs": [
                        false
                      ],
                      "security_group_ids": [
                        false
                      ],
                      "subnet_ids": [
                        false,
                        false,
                        false
                      ]
                    }
                  ]
                },
                "depends_on": [
                  "aws_kms_key.eks",
                  "module.eks.aws_cloudwatch_log_group.this",
                  "module.eks.aws_iam_role.this",
                  "module.eks.aws_iam_role_policy_attachment.this",
                  "module.eks.aws_security_group.cluster",
                  "module.eks.aws_security_group.node",
                  "module.eks.aws_security_group_rule.cluster",
                  "module.eks.aws_security_group_rule.node",
                  "module.eks.data.aws_iam_policy_document.assume_role_policy",
                  "module.eks.data.aws_partition.current",
                  "module.vpc.aws_subnet.private",
                  "module.vpc.aws_vpc.this",
                  "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
                ]
              },
              {
                "address": "module.eks.aws_iam_openid_connect_provider.oidc_provider[0]",
                "mode": "managed",
                "type": "aws_iam_openid_connect_provider",
                "name": "oidc_provider",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "arn": "arn:aws:iam::767534018423:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/25DA5279A39940D35B91C73BFFF97403",
                  "client_id_list": [
                    "sts.amazonaws.com"
                  ],
                  "id": "arn:aws:iam::767534018423:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/25DA5279A39940D35B91C73BFFF97403",
                  "tags": {
                    "Name": "dev-demo-eks-irsa"
                  },
                  "tags_all": {
                    "Name": "dev-demo-eks-irsa"
                  },
                  "thumbprint_list": [
                    "9e99a48a9960b14926bb7f3b02e22da2b0ab7280"
                  ],
                  "url": "oidc.eks.us-east-1.amazonaws.com/id/25DA5279A39940D35B91C73BFFF97403"
                },
                "sensitive_values": {
                  "client_id_list": [
                    false
                  ],
                  "tags": {},
                  "tags_all": {},
                  "thumbprint_list": [
                    false
                  ]
                },
                "depends_on": [
                  "aws_kms_key.eks",
                  "module.eks.aws_cloudwatch_log_group.this",
                  "module.eks.aws_eks_cluster.this",
                  "module.eks.aws_iam_role.this",
                  "module.eks.aws_iam_role_policy_attachment.this",
                  "module.eks.aws_security_group.cluster",
                  "module.eks.aws_security_group.node",
                  "module.eks.aws_security_group_rule.cluster",
                  "module.eks.aws_security_group_rule.node",
                  "module.eks.data.aws_iam_policy_document.assume_role_policy",
                  "module.eks.data.aws_partition.current",
                  "module.eks.data.tls_certificate.this",
                  "module.vpc.aws_subnet.private",
                  "module.vpc.aws_vpc.this",
                  "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
                ]
              },
              {
                "address": "module.eks.aws_iam_role.this[0]",
                "mode": "managed",
                "type": "aws_iam_role",
                "name": "this",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "arn": "arn:aws:iam::767534018423:role/dev-demo-cluster-20220123184037125300000001",
                  "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"EKSClusterAssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"eks.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                  "create_date": "2022-01-23T18:40:42Z",
                  "description": "",
                  "force_detach_policies": true,
                  "id": "dev-demo-cluster-20220123184037125300000001",
                  "inline_policy": [
                    {
                      "name": "",
                      "policy": ""
                    }
                  ],
                  "managed_policy_arns": [
                    "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
                    "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController"
                  ],
                  "max_session_duration": 3600,
                  "name": "dev-demo-cluster-20220123184037125300000001",
                  "name_prefix": "dev-demo-cluster-",
                  "path": "/",
                  "permissions_boundary": null,
                  "tags": {},
                  "tags_all": {},
                  "unique_id": "AROA3FNEXV53ZRKZR3HER"
                },
                "sensitive_values": {
                  "inline_policy": [
                    {}
                  ],
                  "managed_policy_arns": [
                    false,
                    false
                  ],
                  "tags": {},
                  "tags_all": {}
                },
                "depends_on": [
                  "module.eks.data.aws_iam_policy_document.assume_role_policy"
                ]
              },
              {
                "address": "module.eks.aws_iam_role_policy_attachment.this[\"arn:aws:iam::aws:policy/AmazonEKSClusterPolicy\"]",
                "mode": "managed",
                "type": "aws_iam_role_policy_attachment",
                "name": "this",
                "index": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "id": "dev-demo-cluster-20220123184037125300000001-20220123184044089200000002",
                  "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
                  "role": "dev-demo-cluster-20220123184037125300000001"
                },
                "sensitive_values": {},
                "depends_on": [
                  "module.eks.aws_iam_role.this",
                  "module.eks.data.aws_iam_policy_document.assume_role_policy",
                  "module.eks.data.aws_partition.current"
                ]
              },
              {
                "address": "module.eks.aws_iam_role_policy_attachment.this[\"arn:aws:iam::aws:policy/AmazonEKSVPCResourceController\"]",
                "mode": "managed",
                "type": "aws_iam_role_policy_attachment",
                "name": "this",
                "index": "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController",
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "id": "dev-demo-cluster-20220123184037125300000001-20220123184044090500000003",
                  "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController",
                  "role": "dev-demo-cluster-20220123184037125300000001"
                },
                "sensitive_values": {},
                "depends_on": [
                  "module.eks.aws_iam_role.this",
                  "module.eks.data.aws_iam_policy_document.assume_role_policy",
                  "module.eks.data.aws_partition.current"
                ]
              },
              {
                "address": "module.eks.aws_security_group.cluster[0]",
                "mode": "managed",
                "type": "aws_security_group",
                "name": "cluster",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 1,
                "values": {
                  "arn": "arn:aws:ec2:us-east-1:767534018423:security-group/sg-075f036ed87625991",
                  "description": "EKS cluster security group",
                  "egress": [
                    {
                      "cidr_blocks": [],
                      "description": "Cluster API to node groups",
                      "from_port": 443,
                      "ipv6_cidr_blocks": [],
                      "prefix_list_ids": [],
                      "protocol": "tcp",
                      "security_groups": [
                        "sg-08928dd39a77f67ac"
                      ],
                      "self": false,
                      "to_port": 443
                    },
                    {
                      "cidr_blocks": [],
                      "description": "Cluster API to node kubelets",
                      "from_port": 10250,
                      "ipv6_cidr_blocks": [],
                      "prefix_list_ids": [],
                      "protocol": "tcp",
                      "security_groups": [
                        "sg-08928dd39a77f67ac"
                      ],
                      "self": false,
                      "to_port": 10250
                    }
                  ],
                  "id": "sg-075f036ed87625991",
                  "ingress": [
                    {
                      "cidr_blocks": [],
                      "description": "Node groups to cluster API",
                      "from_port": 443,
                      "ipv6_cidr_blocks": [],
                      "prefix_list_ids": [],
                      "protocol": "tcp",
                      "security_groups": [
                        "sg-08928dd39a77f67ac"
                      ],
                      "self": false,
                      "to_port": 443
                    }
                  ],
                  "name": "dev-demo-cluster-20220123184107765000000006",
                  "name_prefix": "dev-demo-cluster-",
                  "owner_id": "767534018423",
                  "revoke_rules_on_delete": false,
                  "tags": {
                    "Name": "dev-demo-cluster"
                  },
                  "tags_all": {
                    "Name": "dev-demo-cluster"
                  },
                  "timeouts": null,
                  "vpc_id": "vpc-00fc46c587795f3a2"
                },
                "sensitive_values": {
                  "egress": [
                    {
                      "cidr_blocks": [],
                      "ipv6_cidr_blocks": [],
                      "prefix_list_ids": [],
                      "security_groups": [
                        false
                      ]
                    },
                    {
                      "cidr_blocks": [],
                      "ipv6_cidr_blocks": [],
                      "prefix_list_ids": [],
                      "security_groups": [
                        false
                      ]
                    }
                  ],
                  "ingress": [
                    {
                      "cidr_blocks": [],
                      "ipv6_cidr_blocks": [],
                      "prefix_list_ids": [],
                      "security_groups": [
                        false
                      ]
                    }
                  ],
                  "tags": {},
                  "tags_all": {}
                },
                "depends_on": [
                  "module.vpc.aws_vpc.this"
                ]
              },
              {
                "address": "module.eks.aws_security_group.node[0]",
                "mode": "managed",
                "type": "aws_security_group",
                "name": "node",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 1,
                "values": {
                  "arn": "arn:aws:ec2:us-east-1:767534018423:security-group/sg-08928dd39a77f67ac",
                  "description": "EKS node shared security group",
                  "egress": [
                    {
                      "cidr_blocks": [
                        "0.0.0.0/0"
                      ],
                      "description": "Egress NTP/TCP to internet",
                      "from_port": 123,
                      "ipv6_cidr_blocks": [],
                      "prefix_list_ids": [],
                      "protocol": "tcp",
                      "security_groups": [],
                      "self": false,
                      "to_port": 123
                    },
                    {
                      "cidr_blocks": [
                        "0.0.0.0/0"
                      ],
                      "description": "Egress NTP/UDP to internet",
                      "from_port": 123,
                      "ipv6_cidr_blocks": [],
                      "prefix_list_ids": [],
                      "protocol": "udp",
                      "security_groups": [],
                      "self": false,
                      "to_port": 123
                    },
                    {
                      "cidr_blocks": [
                        "0.0.0.0/0"
                      ],
                      "description": "Egress all HTTPS to internet",
                      "from_port": 443,
                      "ipv6_cidr_blocks": [],
                      "prefix_list_ids": [],
                      "protocol": "tcp",
                      "security_groups": [],
                      "self": false,
                      "to_port": 443
                    },
                    {
                      "cidr_blocks": [],
                      "description": "Node groups to cluster API",
                      "from_port": 443,
                      "ipv6_cidr_blocks": [],
                      "prefix_list_ids": [],
                      "protocol": "tcp",
                      "security_groups": [
                        "sg-075f036ed87625991"
                      ],
                      "self": false,
                      "to_port": 443
                    },
                    {
                      "cidr_blocks": [],
                      "description": "Node to node CoreDNS",
                      "from_port": 53,
                      "ipv6_cidr_blocks": [],
                      "prefix_list_ids": [],
                      "protocol": "tcp",
                      "security_groups": [],
                      "self": true,
                      "to_port": 53
                    },
                    {
                      "cidr_blocks": [],
                      "description": "Node to node CoreDNS",
                      "from_port": 53,
                      "ipv6_cidr_blocks": [],
                      "prefix_list_ids": [],
                      "protocol": "udp",
                      "security_groups": [],
                      "self": true,
                      "to_port": 53
                    }
                  ],
                  "id": "sg-08928dd39a77f67ac",
                  "ingress": [
                    {
                      "cidr_blocks": [],
                      "description": "",
                      "from_port": 0,
                      "ipv6_cidr_blocks": [],
                      "prefix_list_ids": [],
                      "protocol": "tcp",
                      "security_groups": [
                        "sg-019219e078749078d",
                        "sg-0f292d45544c84ff8"
                      ],
                      "self": false,
                      "to_port": 65535
                    },
                    {
                      "cidr_blocks": [],
                      "description": "Cluster API to node groups",
                      "from_port": 443,
                      "ipv6_cidr_blocks": [],
                      "prefix_list_ids": [],
                      "protocol": "tcp",
                      "security_groups": [
                        "sg-075f036ed87625991"
                      ],
                      "self": false,
                      "to_port": 443
                    },
                    {
                      "cidr_blocks": [],
                      "description": "Cluster API to node kubelets",
                      "from_port": 10250,
                      "ipv6_cidr_blocks": [],
                      "prefix_list_ids": [],
                      "protocol": "tcp",
                      "security_groups": [
                        "sg-075f036ed87625991"
                      ],
                      "self": false,
                      "to_port": 10250
                    },
                    {
                      "cidr_blocks": [],
                      "description": "Node to node CoreDNS",
                      "from_port": 53,
                      "ipv6_cidr_blocks": [],
                      "prefix_list_ids": [],
                      "protocol": "tcp",
                      "security_groups": [],
                      "self": true,
                      "to_port": 53
                    },
                    {
                      "cidr_blocks": [],
                      "description": "Node to node CoreDNS",
                      "from_port": 53,
                      "ipv6_cidr_blocks": [],
                      "prefix_list_ids": [],
                      "protocol": "udp",
                      "security_groups": [],
                      "self": true,
                      "to_port": 53
                    }
                  ],
                  "name": "dev-demo-node-20220123184107646300000005",
                  "name_prefix": "dev-demo-node-",
                  "owner_id": "767534018423",
                  "revoke_rules_on_delete": false,
                  "tags": {
                    "Name": "dev-demo-node",
                    "kubernetes.io/cluster/dev-demo": "owned"
                  },
                  "tags_all": {
                    "Name": "dev-demo-node",
                    "kubernetes.io/cluster/dev-demo": "owned"
                  },
                  "timeouts": null,
                  "vpc_id": "vpc-00fc46c587795f3a2"
                },
                "sensitive_values": {
                  "egress": [
                    {
                      "cidr_blocks": [
                        false
                      ],
                      "ipv6_cidr_blocks": [],
                      "prefix_list_ids": [],
                      "security_groups": []
                    },
                    {
                      "cidr_blocks": [
                        false
                      ],
                      "ipv6_cidr_blocks": [],
                      "prefix_list_ids": [],
                      "security_groups": []
                    },
                    {
                      "cidr_blocks": [
                        false
                      ],
                      "ipv6_cidr_blocks": [],
                      "prefix_list_ids": [],
                      "security_groups": []
                    },
                    {
                      "cidr_blocks": [],
                      "ipv6_cidr_blocks": [],
                      "prefix_list_ids": [],
                      "security_groups": [
                        false
                      ]
                    },
                    {
                      "cidr_blocks": [],
                      "ipv6_cidr_blocks": [],
                      "prefix_list_ids": [],
                      "security_groups": []
                    },
                    {
                      "cidr_blocks": [],
                      "ipv6_cidr_blocks": [],
                      "prefix_list_ids": [],
                      "security_groups": []
                    }
                  ],
                  "ingress": [
                    {
                      "cidr_blocks": [],
                      "ipv6_cidr_blocks": [],
                      "prefix_list_ids": [],
                      "security_groups": [
                        false,
                        false
                      ]
                    },
                    {
                      "cidr_blocks": [],
                      "ipv6_cidr_blocks": [],
                      "prefix_list_ids": [],
                      "security_groups": [
                        false
                      ]
                    },
                    {
                      "cidr_blocks": [],
                      "ipv6_cidr_blocks": [],
                      "prefix_list_ids": [],
                      "security_groups": [
                        false
                      ]
                    },
                    {
                      "cidr_blocks": [],
                      "ipv6_cidr_blocks": [],
                      "prefix_list_ids": [],
                      "security_groups": []
                    },
                    {
                      "cidr_blocks": [],
                      "ipv6_cidr_blocks": [],
                      "prefix_list_ids": [],
                      "security_groups": []
                    }
                  ],
                  "tags": {},
                  "tags_all": {}
                },
                "depends_on": [
                  "module.vpc.aws_vpc.this"
                ]
              },
              {
                "address": "module.eks.aws_security_group_rule.cluster[\"egress_nodes_443\"]",
                "mode": "managed",
                "type": "aws_security_group_rule",
                "name": "cluster",
                "index": "egress_nodes_443",
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 2,
                "values": {
                  "cidr_blocks": [],
                  "description": "Cluster API to node groups",
                  "from_port": 443,
                  "id": "sgrule-2966506108",
                  "ipv6_cidr_blocks": [],
                  "prefix_list_ids": [],
                  "protocol": "tcp",
                  "security_group_id": "sg-075f036ed87625991",
                  "self": false,
                  "source_security_group_id": "sg-08928dd39a77f67ac",
                  "to_port": 443,
                  "type": "egress"
                },
                "sensitive_values": {
                  "cidr_blocks": [],
                  "ipv6_cidr_blocks": [],
                  "prefix_list_ids": []
                },
                "depends_on": [
                  "module.eks.aws_security_group.cluster",
                  "module.eks.aws_security_group.node",
                  "module.vpc.aws_vpc.this"
                ]
              },
              {
                "address": "module.eks.aws_security_group_rule.cluster[\"egress_nodes_kubelet\"]",
                "mode": "managed",
                "type": "aws_security_group_rule",
                "name": "cluster",
                "index": "egress_nodes_kubelet",
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 2,
                "values": {
                  "cidr_blocks": [],
                  "description": "Cluster API to node kubelets",
                  "from_port": 10250,
                  "id": "sgrule-4138226012",
                  "ipv6_cidr_blocks": [],
                  "prefix_list_ids": [],
                  "protocol": "tcp",
                  "security_group_id": "sg-075f036ed87625991",
                  "self": false,
                  "source_security_group_id": "sg-08928dd39a77f67ac",
                  "to_port": 10250,
                  "type": "egress"
                },
                "sensitive_values": {
                  "cidr_blocks": [],
                  "ipv6_cidr_blocks": [],
                  "prefix_list_ids": []
                },
                "depends_on": [
                  "module.eks.aws_security_group.cluster",
                  "module.eks.aws_security_group.node",
                  "module.vpc.aws_vpc.this"
                ]
              },
              {
                "address": "module.eks.aws_security_group_rule.cluster[\"ingress_nodes_443\"]",
                "mode": "managed",
                "type": "aws_security_group_rule",
                "name": "cluster",
                "index": "ingress_nodes_443",
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 2,
                "values": {
                  "cidr_blocks": [],
                  "description": "Node groups to cluster API",
                  "from_port": 443,
                  "id": "sgrule-436131350",
                  "ipv6_cidr_blocks": [],
                  "prefix_list_ids": [],
                  "protocol": "tcp",
                  "security_group_id": "sg-075f036ed87625991",
                  "self": false,
                  "source_security_group_id": "sg-08928dd39a77f67ac",
                  "to_port": 443,
                  "type": "ingress"
                },
                "sensitive_values": {
                  "cidr_blocks": [],
                  "ipv6_cidr_blocks": [],
                  "prefix_list_ids": []
                },
                "depends_on": [
                  "module.eks.aws_security_group.cluster",
                  "module.eks.aws_security_group.node",
                  "module.vpc.aws_vpc.this"
                ]
              },
              {
                "address": "module.eks.aws_security_group_rule.node[\"egress_cluster_443\"]",
                "mode": "managed",
                "type": "aws_security_group_rule",
                "name": "node",
                "index": "egress_cluster_443",
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 2,
                "values": {
                  "cidr_blocks": [],
                  "description": "Node groups to cluster API",
                  "from_port": 443,
                  "id": "sgrule-825455177",
                  "ipv6_cidr_blocks": [],
                  "prefix_list_ids": [],
                  "protocol": "tcp",
                  "security_group_id": "sg-08928dd39a77f67ac",
                  "self": false,
                  "source_security_group_id": "sg-075f036ed87625991",
                  "to_port": 443,
                  "type": "egress"
                },
                "sensitive_values": {
                  "cidr_blocks": [],
                  "ipv6_cidr_blocks": [],
                  "prefix_list_ids": []
                },
                "depends_on": [
                  "module.eks.aws_security_group.cluster",
                  "module.eks.aws_security_group.node",
                  "module.vpc.aws_vpc.this"
                ]
              },
              {
                "address": "module.eks.aws_security_group_rule.node[\"egress_https\"]",
                "mode": "managed",
                "type": "aws_security_group_rule",
                "name": "node",
                "index": "egress_https",
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 2,
                "values": {
                  "cidr_blocks": [
                    "0.0.0.0/0"
                  ],
                  "description": "Egress all HTTPS to internet",
                  "from_port": 443,
                  "id": "sgrule-453343291",
                  "ipv6_cidr_blocks": [],
                  "prefix_list_ids": [],
                  "protocol": "tcp",
                  "security_group_id": "sg-08928dd39a77f67ac",
                  "self": false,
                  "source_security_group_id": null,
                  "to_port": 443,
                  "type": "egress"
                },
                "sensitive_values": {
                  "cidr_blocks": [
                    false
                  ],
                  "ipv6_cidr_blocks": [],
                  "prefix_list_ids": []
                },
                "depends_on": [
                  "module.eks.aws_security_group.cluster",
                  "module.eks.aws_security_group.node",
                  "module.vpc.aws_vpc.this"
                ]
              },
              {
                "address": "module.eks.aws_security_group_rule.node[\"egress_ntp_tcp\"]",
                "mode": "managed",
                "type": "aws_security_group_rule",
                "name": "node",
                "index": "egress_ntp_tcp",
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 2,
                "values": {
                  "cidr_blocks": [
                    "0.0.0.0/0"
                  ],
                  "description": "Egress NTP/TCP to internet",
                  "from_port": 123,
                  "id": "sgrule-3302704421",
                  "ipv6_cidr_blocks": [],
                  "prefix_list_ids": [],
                  "protocol": "tcp",
                  "security_group_id": "sg-08928dd39a77f67ac",
                  "self": false,
                  "source_security_group_id": null,
                  "to_port": 123,
                  "type": "egress"
                },
                "sensitive_values": {
                  "cidr_blocks": [
                    false
                  ],
                  "ipv6_cidr_blocks": [],
                  "prefix_list_ids": []
                },
                "depends_on": [
                  "module.eks.aws_security_group.cluster",
                  "module.eks.aws_security_group.node",
                  "module.vpc.aws_vpc.this"
                ]
              },
              {
                "address": "module.eks.aws_security_group_rule.node[\"egress_ntp_udp\"]",
                "mode": "managed",
                "type": "aws_security_group_rule",
                "name": "node",
                "index": "egress_ntp_udp",
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 2,
                "values": {
                  "cidr_blocks": [
                    "0.0.0.0/0"
                  ],
                  "description": "Egress NTP/UDP to internet",
                  "from_port": 123,
                  "id": "sgrule-3125108776",
                  "ipv6_cidr_blocks": [],
                  "prefix_list_ids": [],
                  "protocol": "udp",
                  "security_group_id": "sg-08928dd39a77f67ac",
                  "self": false,
                  "source_security_group_id": null,
                  "to_port": 123,
                  "type": "egress"
                },
                "sensitive_values": {
                  "cidr_blocks": [
                    false
                  ],
                  "ipv6_cidr_blocks": [],
                  "prefix_list_ids": []
                },
                "depends_on": [
                  "module.eks.aws_security_group.cluster",
                  "module.eks.aws_security_group.node",
                  "module.vpc.aws_vpc.this"
                ]
              },
              {
                "address": "module.eks.aws_security_group_rule.node[\"egress_self_coredns_tcp\"]",
                "mode": "managed",
                "type": "aws_security_group_rule",
                "name": "node",
                "index": "egress_self_coredns_tcp",
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 2,
                "values": {
                  "cidr_blocks": [],
                  "description": "Node to node CoreDNS",
                  "from_port": 53,
                  "id": "sgrule-2857198722",
                  "ipv6_cidr_blocks": [],
                  "prefix_list_ids": [],
                  "protocol": "tcp",
                  "security_group_id": "sg-08928dd39a77f67ac",
                  "self": true,
                  "source_security_group_id": "sg-08928dd39a77f67ac",
                  "to_port": 53,
                  "type": "egress"
                },
                "sensitive_values": {
                  "cidr_blocks": [],
                  "ipv6_cidr_blocks": [],
                  "prefix_list_ids": []
                },
                "depends_on": [
                  "module.eks.aws_security_group.cluster",
                  "module.eks.aws_security_group.node",
                  "module.vpc.aws_vpc.this"
                ]
              },
              {
                "address": "module.eks.aws_security_group_rule.node[\"egress_self_coredns_udp\"]",
                "mode": "managed",
                "type": "aws_security_group_rule",
                "name": "node",
                "index": "egress_self_coredns_udp",
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 2,
                "values": {
                  "cidr_blocks": [],
                  "description": "Node to node CoreDNS",
                  "from_port": 53,
                  "id": "sgrule-606791396",
                  "ipv6_cidr_blocks": [],
                  "prefix_list_ids": [],
                  "protocol": "udp",
                  "security_group_id": "sg-08928dd39a77f67ac",
                  "self": true,
                  "source_security_group_id": "sg-08928dd39a77f67ac",
                  "to_port": 53,
                  "type": "egress"
                },
                "sensitive_values": {
                  "cidr_blocks": [],
                  "ipv6_cidr_blocks": [],
                  "prefix_list_ids": []
                },
                "depends_on": [
                  "module.eks.aws_security_group.cluster",
                  "module.eks.aws_security_group.node",
                  "module.vpc.aws_vpc.this"
                ]
              },
              {
                "address": "module.eks.aws_security_group_rule.node[\"ingress_cluster_443\"]",
                "mode": "managed",
                "type": "aws_security_group_rule",
                "name": "node",
                "index": "ingress_cluster_443",
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 2,
                "values": {
                  "cidr_blocks": [],
                  "description": "Cluster API to node groups",
                  "from_port": 443,
                  "id": "sgrule-3631171479",
                  "ipv6_cidr_blocks": [],
                  "prefix_list_ids": [],
                  "protocol": "tcp",
                  "security_group_id": "sg-08928dd39a77f67ac",
                  "self": false,
                  "source_security_group_id": "sg-075f036ed87625991",
                  "to_port": 443,
                  "type": "ingress"
                },
                "sensitive_values": {
                  "cidr_blocks": [],
                  "ipv6_cidr_blocks": [],
                  "prefix_list_ids": []
                },
                "depends_on": [
                  "module.eks.aws_security_group.cluster",
                  "module.eks.aws_security_group.node",
                  "module.vpc.aws_vpc.this"
                ]
              },
              {
                "address": "module.eks.aws_security_group_rule.node[\"ingress_cluster_kubelet\"]",
                "mode": "managed",
                "type": "aws_security_group_rule",
                "name": "node",
                "index": "ingress_cluster_kubelet",
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 2,
                "values": {
                  "cidr_blocks": [],
                  "description": "Cluster API to node kubelets",
                  "from_port": 10250,
                  "id": "sgrule-1111592918",
                  "ipv6_cidr_blocks": [],
                  "prefix_list_ids": [],
                  "protocol": "tcp",
                  "security_group_id": "sg-08928dd39a77f67ac",
                  "self": false,
                  "source_security_group_id": "sg-075f036ed87625991",
                  "to_port": 10250,
                  "type": "ingress"
                },
                "sensitive_values": {
                  "cidr_blocks": [],
                  "ipv6_cidr_blocks": [],
                  "prefix_list_ids": []
                },
                "depends_on": [
                  "module.eks.aws_security_group.cluster",
                  "module.eks.aws_security_group.node",
                  "module.vpc.aws_vpc.this"
                ]
              },
              {
                "address": "module.eks.aws_security_group_rule.node[\"ingress_self_coredns_tcp\"]",
                "mode": "managed",
                "type": "aws_security_group_rule",
                "name": "node",
                "index": "ingress_self_coredns_tcp",
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 2,
                "values": {
                  "cidr_blocks": [],
                  "description": "Node to node CoreDNS",
                  "from_port": 53,
                  "id": "sgrule-1138857251",
                  "ipv6_cidr_blocks": [],
                  "prefix_list_ids": [],
                  "protocol": "tcp",
                  "security_group_id": "sg-08928dd39a77f67ac",
                  "self": true,
                  "source_security_group_id": "sg-08928dd39a77f67ac",
                  "to_port": 53,
                  "type": "ingress"
                },
                "sensitive_values": {
                  "cidr_blocks": [],
                  "ipv6_cidr_blocks": [],
                  "prefix_list_ids": []
                },
                "depends_on": [
                  "module.eks.aws_security_group.cluster",
                  "module.eks.aws_security_group.node",
                  "module.vpc.aws_vpc.this"
                ]
              },
              {
                "address": "module.eks.aws_security_group_rule.node[\"ingress_self_coredns_udp\"]",
                "mode": "managed",
                "type": "aws_security_group_rule",
                "name": "node",
                "index": "ingress_self_coredns_udp",
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 2,
                "values": {
                  "cidr_blocks": [],
                  "description": "Node to node CoreDNS",
                  "from_port": 53,
                  "id": "sgrule-3888002764",
                  "ipv6_cidr_blocks": [],
                  "prefix_list_ids": [],
                  "protocol": "udp",
                  "security_group_id": "sg-08928dd39a77f67ac",
                  "self": true,
                  "source_security_group_id": "sg-08928dd39a77f67ac",
                  "to_port": 53,
                  "type": "ingress"
                },
                "sensitive_values": {
                  "cidr_blocks": [],
                  "ipv6_cidr_blocks": [],
                  "prefix_list_ids": []
                },
                "depends_on": [
                  "module.eks.aws_security_group.cluster",
                  "module.eks.aws_security_group.node",
                  "module.vpc.aws_vpc.this"
                ]
              },
              {
                "address": "module.eks.data.aws_iam_policy_document.assume_role_policy[0]",
                "mode": "data",
                "type": "aws_iam_policy_document",
                "name": "assume_role_policy",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "id": "2764486067",
                  "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"EKSClusterAssumeRole\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"eks.amazonaws.com\"\n      }\n    }\n  ]\n}",
                  "override_json": null,
                  "override_policy_documents": null,
                  "policy_id": null,
                  "source_json": null,
                  "source_policy_documents": null,
                  "statement": [
                    {
                      "actions": [
                        "sts:AssumeRole"
                      ],
                      "condition": [],
                      "effect": "Allow",
                      "not_actions": [],
                      "not_principals": [],
                      "not_resources": [],
                      "principals": [
                        {
                          "identifiers": [
                            "eks.amazonaws.com"
                          ],
                          "type": "Service"
                        }
                      ],
                      "resources": [],
                      "sid": "EKSClusterAssumeRole"
                    }
                  ],
                  "version": "2012-10-17"
                },
                "sensitive_values": {
                  "statement": [
                    {
                      "actions": [
                        false
                      ],
                      "condition": [],
                      "not_actions": [],
                      "not_principals": [],
                      "not_resources": [],
                      "principals": [
                        {
                          "identifiers": [
                            false
                          ]
                        }
                      ],
                      "resources": []
                    }
                  ]
                }
              },
              {
                "address": "module.eks.data.aws_partition.current",
                "mode": "data",
                "type": "aws_partition",
                "name": "current",
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "dns_suffix": "amazonaws.com",
                  "id": "aws",
                  "partition": "aws",
                  "reverse_dns_prefix": "com.amazonaws"
                },
                "sensitive_values": {}
              },
              {
                "address": "module.eks.data.tls_certificate.this[0]",
                "mode": "data",
                "type": "tls_certificate",
                "name": "this",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/tls",
                "schema_version": 0,
                "values": {
                  "certificates": [
                    {
                      "is_ca": true,
                      "issuer": "OU=Starfield Class 2 Certification Authority,O=Starfield Technologies\\, Inc.,C=US",
                      "not_after": "2034-06-28T17:39:16Z",
                      "not_before": "2009-09-02T00:00:00Z",
                      "public_key_algorithm": "RSA",
                      "serial_number": "12037640545166866303",
                      "sha1_fingerprint": "9e99a48a9960b14926bb7f3b02e22da2b0ab7280",
                      "signature_algorithm": "SHA256-RSA",
                      "subject": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
                      "version": 3
                    },
                    {
                      "is_ca": true,
                      "issuer": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
                      "not_after": "2037-12-31T01:00:00Z",
                      "not_before": "2015-05-25T12:00:00Z",
                      "public_key_algorithm": "RSA",
                      "serial_number": "144918191876577076464031512351042010504348870",
                      "sha1_fingerprint": "06b25927c42a721631c1efd9431e648fa62e1e39",
                      "signature_algorithm": "SHA256-RSA",
                      "subject": "CN=Amazon Root CA 1,O=Amazon,C=US",
                      "version": 3
                    },
                    {
                      "is_ca": true,
                      "issuer": "CN=Amazon Root CA 1,O=Amazon,C=US",
                      "not_after": "2025-10-19T00:00:00Z",
                      "not_before": "2015-10-22T00:00:00Z",
                      "public_key_algorithm": "RSA",
                      "serial_number": "144918209630989264145272943054026349679957517",
                      "sha1_fingerprint": "917e732d330f9a12404f73d8bea36948b929dffc",
                      "signature_algorithm": "SHA256-RSA",
                      "subject": "CN=Amazon,OU=Server CA 1B,O=Amazon,C=US",
                      "version": 3
                    },
                    {
                      "is_ca": false,
                      "issuer": "CN=Amazon,OU=Server CA 1B,O=Amazon,C=US",
                      "not_after": "2022-07-11T23:59:59Z",
                      "not_before": "2021-06-12T00:00:00Z",
                      "public_key_algorithm": "RSA",
                      "serial_number": "17394337148501369979403692734506650154",
                      "sha1_fingerprint": "e895c9a1be77b6c6300dc2525548225a675b1955",
                      "signature_algorithm": "SHA256-RSA",
                      "subject": "CN=oidc.eks.us-east-1.amazonaws.com",
                      "version": 3
                    }
                  ],
                  "id": "2022-01-26 01:45:09.431402 +0000 UTC",
                  "url": "https://oidc.eks.us-east-1.amazonaws.com/id/25DA5279A39940D35B91C73BFFF97403",
                  "verify_chain": true
                },
                "sensitive_values": {
                  "certificates": [
                    {},
                    {},
                    {},
                    {}
                  ]
                }
              }
            ],
            "address": "module.eks",
            "child_modules": [
              {
                "resources": [
                  {
                    "address": "module.eks.module.eks_managed_node_group[\"blue\"].aws_eks_node_group.this[0]",
                    "mode": "managed",
                    "type": "aws_eks_node_group",
                    "name": "this",
                    "index": 0,
                    "provider_name": "registry.terraform.io/hashicorp/aws",
                    "schema_version": 0,
                    "values": {
                      "ami_type": "AL2_x86_64",
                      "arn": "arn:aws:eks:us-east-1:767534018423:nodegroup/dev-demo/blue-20220123200614296800000003/f6bf4445-eefc-1ec1-69d9-693c79adb61a",
                      "capacity_type": "ON_DEMAND",
                      "cluster_name": "dev-demo",
                      "disk_size": 0,
                      "force_update_version": null,
                      "id": "dev-demo:blue-20220123200614296800000003",
                      "instance_types": [
                        "t3.medium",
                        "t3.large",
                        "c5.large"
                      ],
                      "labels": {},
                      "launch_template": [
                        {
                          "id": "lt-09056990f5a86652e",
                          "name": "blue-20220123185736995400000014",
                          "version": "1"
                        }
                      ],
                      "node_group_name": "blue-20220123200614296800000003",
                      "node_group_name_prefix": "blue-",
                      "node_role_arn": "arn:aws:iam::767534018423:role/blue-eks-node-group-20220123184118752000000009",
                      "release_version": "1.21.5-20220112",
                      "remote_access": [],
                      "resources": [
                        {
                          "autoscaling_groups": [
                            {
                              "name": "eks-blue-20220123200614296800000003-f6bf4445-eefc-1ec1-69d9-693c79adb61a"
                            }
                          ],
                          "remote_access_security_group_id": ""
                        }
                      ],
                      "scaling_config": [
                        {
                          "desired_size": 1,
                          "max_size": 3,
                          "min_size": 1
                        }
                      ],
                      "status": "ACTIVE",
                      "subnet_ids": [
                        "subnet-032ae1b0fdf5ec242",
                        "subnet-067ea905e5e41ae0f",
                        "subnet-069f93a090e0f24ed"
                      ],
                      "tags": {
                        "Name": "blue"
                      },
                      "tags_all": {
                        "Name": "blue"
                      },
                      "taint": [],
                      "timeouts": {
                        "create": null,
                        "delete": null,
                        "update": null
                      },
                      "update_config": [
                        {
                          "max_unavailable": 1,
                          "max_unavailable_percentage": 0
                        }
                      ],
                      "version": "1.21"
                    },
                    "sensitive_values": {
                      "instance_types": [
                        false,
                        false,
                        false
                      ],
                      "labels": {},
                      "launch_template": [
                        {}
                      ],
                      "remote_access": [],
                      "resources": [
                        {
                          "autoscaling_groups": [
                            {}
                          ]
                        }
                      ],
                      "scaling_config": [
                        {}
                      ],
                      "subnet_ids": [
                        false,
                        false,
                        false
                      ],
                      "tags": {},
                      "tags_all": {},
                      "taint": [],
                      "timeouts": {},
                      "update_config": [
                        {}
                      ]
                    },
                    "depends_on": [
                      "aws_kms_key.eks",
                      "aws_security_group.additional",
                      "module.eks.aws_cloudwatch_log_group.this",
                      "module.eks.aws_eks_cluster.this",
                      "module.eks.aws_iam_role.this",
                      "module.eks.aws_iam_role_policy_attachment.this",
                      "module.eks.aws_security_group.cluster",
                      "module.eks.aws_security_group.node",
                      "module.eks.aws_security_group_rule.cluster",
                      "module.eks.aws_security_group_rule.node",
                      "module.eks.data.aws_iam_policy_document.assume_role_policy",
                      "module.eks.data.aws_partition.current",
                      "module.eks.module.eks_managed_node_group.aws_iam_role.this",
                      "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
                      "module.eks.module.eks_managed_node_group.aws_launch_template.this",
                      "module.eks.module.eks_managed_node_group.aws_security_group.this",
                      "module.eks.module.eks_managed_node_group.aws_security_group_rule.this",
                      "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
                      "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
                      "module.eks.module.eks_managed_node_group.data.aws_partition.current",
                      "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
                      "module.vpc.aws_subnet.private",
                      "module.vpc.aws_vpc.this",
                      "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
                    ]
                  },
                  {
                    "address": "module.eks.module.eks_managed_node_group[\"blue\"].aws_iam_role.this[0]",
                    "mode": "managed",
                    "type": "aws_iam_role",
                    "name": "this",
                    "index": 0,
                    "provider_name": "registry.terraform.io/hashicorp/aws",
                    "schema_version": 0,
                    "values": {
                      "arn": "arn:aws:iam::767534018423:role/blue-eks-node-group-20220123184118752000000009",
                      "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"EKSNodeAssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                      "create_date": "2022-01-23T18:41:18Z",
                      "description": "EKS managed node group IAM role",
                      "force_detach_policies": true,
                      "id": "blue-eks-node-group-20220123184118752000000009",
                      "inline_policy": [
                        {
                          "name": "",
                          "policy": ""
                        }
                      ],
                      "managed_policy_arns": [
                        "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
                        "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
                        "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"
                      ],
                      "max_session_duration": 3600,
                      "name": "blue-eks-node-group-20220123184118752000000009",
                      "name_prefix": "blue-eks-node-group-",
                      "path": "/",
                      "permissions_boundary": null,
                      "tags": {},
                      "tags_all": {},
                      "unique_id": "AROA3FNEXV535CQ3GIGNZ"
                    },
                    "sensitive_values": {
                      "inline_policy": [
                        {}
                      ],
                      "managed_policy_arns": [
                        false,
                        false,
                        false
                      ],
                      "tags": {},
                      "tags_all": {}
                    },
                    "depends_on": [
                      "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
                      "module.eks.module.eks_managed_node_group.data.aws_partition.current"
                    ]
                  },
                  {
                    "address": "module.eks.module.eks_managed_node_group[\"blue\"].aws_iam_role_policy_attachment.this[\"arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly\"]",
                    "mode": "managed",
                    "type": "aws_iam_role_policy_attachment",
                    "name": "this",
                    "index": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
                    "provider_name": "registry.terraform.io/hashicorp/aws",
                    "schema_version": 0,
                    "values": {
                      "id": "blue-eks-node-group-20220123184118752000000009-2022012318412103960000000c",
                      "policy_arn": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
                      "role": "blue-eks-node-group-20220123184118752000000009"
                    },
                    "sensitive_values": {},
                    "depends_on": [
                      "module.eks.module.eks_managed_node_group.aws_iam_role.this",
                      "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
                      "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
                      "module.eks.module.eks_managed_node_group.data.aws_partition.current"
                    ]
                  },
                  {
                    "address": "module.eks.module.eks_managed_node_group[\"blue\"].aws_iam_role_policy_attachment.this[\"arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy\"]",
                    "mode": "managed",
                    "type": "aws_iam_role_policy_attachment",
                    "name": "this",
                    "index": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
                    "provider_name": "registry.terraform.io/hashicorp/aws",
                    "schema_version": 0,
                    "values": {
                      "id": "blue-eks-node-group-20220123184118752000000009-2022012318412132100000000e",
                      "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
                      "role": "blue-eks-node-group-20220123184118752000000009"
                    },
                    "sensitive_values": {},
                    "depends_on": [
                      "module.eks.module.eks_managed_node_group.aws_iam_role.this",
                      "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
                      "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
                      "module.eks.module.eks_managed_node_group.data.aws_partition.current"
                    ]
                  },
                  {
                    "address": "module.eks.module.eks_managed_node_group[\"blue\"].aws_iam_role_policy_attachment.this[\"arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy\"]",
                    "mode": "managed",
                    "type": "aws_iam_role_policy_attachment",
                    "name": "this",
                    "index": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
                    "provider_name": "registry.terraform.io/hashicorp/aws",
                    "schema_version": 0,
                    "values": {
                      "id": "blue-eks-node-group-20220123184118752000000009-2022012318412080060000000b",
                      "policy_arn": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
                      "role": "blue-eks-node-group-20220123184118752000000009"
                    },
                    "sensitive_values": {},
                    "depends_on": [
                      "module.eks.module.eks_managed_node_group.aws_iam_role.this",
                      "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
                      "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
                      "module.eks.module.eks_managed_node_group.data.aws_partition.current"
                    ]
                  },
                  {
                    "address": "module.eks.module.eks_managed_node_group[\"blue\"].aws_launch_template.this[0]",
                    "mode": "managed",
                    "type": "aws_launch_template",
                    "name": "this",
                    "index": 0,
                    "provider_name": "registry.terraform.io/hashicorp/aws",
                    "schema_version": 0,
                    "values": {
                      "arn": "arn:aws:ec2:us-east-1:767534018423:launch-template/lt-09056990f5a86652e",
                      "block_device_mappings": [],
                      "capacity_reservation_specification": [],
                      "cpu_options": [],
                      "credit_specification": [],
                      "default_version": 1,
                      "description": "Custom launch template for blue EKS managed node group",
                      "disable_api_termination": false,
                      "ebs_optimized": "",
                      "elastic_gpu_specifications": [],
                      "elastic_inference_accelerator": [],
                      "enclave_options": [],
                      "hibernation_options": [],
                      "iam_instance_profile": [],
                      "id": "lt-09056990f5a86652e",
                      "image_id": "",
                      "instance_initiated_shutdown_behavior": "",
                      "instance_market_options": [],
                      "instance_type": "",
                      "kernel_id": "",
                      "key_name": "",
                      "latest_version": 1,
                      "license_specification": [],
                      "metadata_options": [
                        {
                          "http_endpoint": "enabled",
                          "http_protocol_ipv6": "disabled",
                          "http_put_response_hop_limit": 2,
                          "http_tokens": "required",
                          "instance_metadata_tags": "disabled"
                        }
                      ],
                      "monitoring": [
                        {
                          "enabled": true
                        }
                      ],
                      "name": "blue-20220123185736995400000014",
                      "name_prefix": "blue-",
                      "network_interfaces": [],
                      "placement": [],
                      "ram_disk_id": "",
                      "security_group_names": [],
                      "tag_specifications": [
                        {
                          "resource_type": "instance",
                          "tags": {
                            "Name": "blue"
                          }
                        },
                        {
                          "resource_type": "network-interface",
                          "tags": {
                            "Name": "blue"
                          }
                        },
                        {
                          "resource_type": "volume",
                          "tags": {
                            "Name": "blue"
                          }
                        }
                      ],
                      "tags": {},
                      "tags_all": {},
                      "update_default_version": true,
                      "user_data": "",
                      "vpc_security_group_ids": [
                        "sg-03574098139c61e81",
                        "sg-068475abe08320154",
                        "sg-08928dd39a77f67ac"
                      ]
                    },
                    "sensitive_values": {
                      "block_device_mappings": [],
                      "capacity_reservation_specification": [],
                      "cpu_options": [],
                      "credit_specification": [],
                      "elastic_gpu_specifications": [],
                      "elastic_inference_accelerator": [],
                      "enclave_options": [],
                      "hibernation_options": [],
                      "iam_instance_profile": [],
                      "instance_market_options": [],
                      "license_specification": [],
                      "metadata_options": [
                        {}
                      ],
                      "monitoring": [
                        {}
                      ],
                      "network_interfaces": [],
                      "placement": [],
                      "security_group_names": [],
                      "tag_specifications": [
                        {
                          "tags": {}
                        },
                        {
                          "tags": {}
                        },
                        {
                          "tags": {}
                        }
                      ],
                      "tags": {},
                      "tags_all": {},
                      "vpc_security_group_ids": [
                        false,
                        false,
                        false
                      ]
                    },
                    "depends_on": [
                      "aws_kms_key.eks",
                      "aws_security_group.additional",
                      "module.eks.aws_cloudwatch_log_group.this",
                      "module.eks.aws_eks_cluster.this",
                      "module.eks.aws_iam_role.this",
                      "module.eks.aws_iam_role_policy_attachment.this",
                      "module.eks.aws_security_group.cluster",
                      "module.eks.aws_security_group.node",
                      "module.eks.aws_security_group_rule.cluster",
                      "module.eks.aws_security_group_rule.node",
                      "module.eks.data.aws_iam_policy_document.assume_role_policy",
                      "module.eks.data.aws_partition.current",
                      "module.eks.module.eks_managed_node_group.aws_iam_role.this",
                      "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
                      "module.eks.module.eks_managed_node_group.aws_security_group.this",
                      "module.eks.module.eks_managed_node_group.aws_security_group_rule.this",
                      "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
                      "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
                      "module.eks.module.eks_managed_node_group.data.aws_partition.current",
                      "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
                      "module.vpc.aws_subnet.private",
                      "module.vpc.aws_vpc.this",
                      "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
                    ]
                  },
                  {
                    "address": "module.eks.module.eks_managed_node_group[\"blue\"].aws_security_group.this[0]",
                    "mode": "managed",
                    "type": "aws_security_group",
                    "name": "this",
                    "index": 0,
                    "provider_name": "registry.terraform.io/hashicorp/aws",
                    "schema_version": 1,
                    "values": {
                      "arn": "arn:aws:ec2:us-east-1:767534018423:security-group/sg-068475abe08320154",
                      "description": "EKS managed node group security group",
                      "egress": [],
                      "id": "sg-068475abe08320154",
                      "ingress": [],
                      "name": "blue-eks-node-group-20220123184118375200000008",
                      "name_prefix": "blue-eks-node-group-",
                      "owner_id": "767534018423",
                      "revoke_rules_on_delete": false,
                      "tags": {
                        "Name": "blue-eks-node-group"
                      },
                      "tags_all": {
                        "Name": "blue-eks-node-group"
                      },
                      "timeouts": null,
                      "vpc_id": "vpc-00fc46c587795f3a2"
                    },
                    "sensitive_values": {
                      "egress": [],
                      "ingress": [],
                      "tags": {},
                      "tags_all": {}
                    },
                    "depends_on": [
                      "module.vpc.aws_vpc.this"
                    ]
                  },
                  {
                    "address": "module.eks.module.eks_managed_node_group[\"blue\"].data.aws_caller_identity.current",
                    "mode": "data",
                    "type": "aws_caller_identity",
                    "name": "current",
                    "provider_name": "registry.terraform.io/hashicorp/aws",
                    "schema_version": 0,
                    "values": {
                      "account_id": "767534018423",
                      "arn": "arn:aws:iam::767534018423:user/phclark",
                      "id": "767534018423",
                      "user_id": "AIDAJBR7HP4YD4MLW3OJK"
                    },
                    "sensitive_values": {}
                  },
                  {
                    "address": "module.eks.module.eks_managed_node_group[\"blue\"].data.aws_iam_policy_document.assume_role_policy[0]",
                    "mode": "data",
                    "type": "aws_iam_policy_document",
                    "name": "assume_role_policy",
                    "index": 0,
                    "provider_name": "registry.terraform.io/hashicorp/aws",
                    "schema_version": 0,
                    "values": {
                      "id": "2560088296",
                      "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"EKSNodeAssumeRole\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"ec2.amazonaws.com\"\n      }\n    }\n  ]\n}",
                      "override_json": null,
                      "override_policy_documents": null,
                      "policy_id": null,
                      "source_json": null,
                      "source_policy_documents": null,
                      "statement": [
                        {
                          "actions": [
                            "sts:AssumeRole"
                          ],
                          "condition": [],
                          "effect": "Allow",
                          "not_actions": [],
                          "not_principals": [],
                          "not_resources": [],
                          "principals": [
                            {
                              "identifiers": [
                                "ec2.amazonaws.com"
                              ],
                              "type": "Service"
                            }
                          ],
                          "resources": [],
                          "sid": "EKSNodeAssumeRole"
                        }
                      ],
                      "version": "2012-10-17"
                    },
                    "sensitive_values": {
                      "statement": [
                        {
                          "actions": [
                            false
                          ],
                          "condition": [],
                          "not_actions": [],
                          "not_principals": [],
                          "not_resources": [],
                          "principals": [
                            {
                              "identifiers": [
                                false
                              ]
                            }
                          ],
                          "resources": []
                        }
                      ]
                    }
                  },
                  {
                    "address": "module.eks.module.eks_managed_node_group[\"blue\"].data.aws_partition.current",
                    "mode": "data",
                    "type": "aws_partition",
                    "name": "current",
                    "provider_name": "registry.terraform.io/hashicorp/aws",
                    "schema_version": 0,
                    "values": {
                      "dns_suffix": "amazonaws.com",
                      "id": "aws",
                      "partition": "aws",
                      "reverse_dns_prefix": "com.amazonaws"
                    },
                    "sensitive_values": {}
                  }
                ],
                "address": "module.eks.module.eks_managed_node_group[\"blue\"]"
              },
              {
                "resources": [
                  {
                    "address": "module.eks.module.eks_managed_node_group[\"green\"].aws_eks_node_group.this[0]",
                    "mode": "managed",
                    "type": "aws_eks_node_group",
                    "name": "this",
                    "index": 0,
                    "provider_name": "registry.terraform.io/hashicorp/aws",
                    "schema_version": 0,
                    "values": {
                      "ami_type": "AL2_x86_64",
                      "arn": "arn:aws:eks:us-east-1:767534018423:nodegroup/dev-demo/green-20220123200614296200000001/24bf4445-ee8f-8da0-8398-b248ddd91ac7",
                      "capacity_type": "SPOT",
                      "cluster_name": "dev-demo",
                      "disk_size": 0,
                      "force_update_version": null,
                      "id": "dev-demo:green-20220123200614296200000001",
                      "instance_types": [
                        "t3.medium"
                      ],
                      "labels": {
                        "ControlledBy": "Terraform",
                        "Terraform": "true",
                        "environment": "dev"
                      },
                      "launch_template": [
                        {
                          "id": "lt-0155e6d9255d12fea",
                          "name": "green-20220123185736995900000016",
                          "version": "1"
                        }
                      ],
                      "node_group_name": "green-20220123200614296200000001",
                      "node_group_name_prefix": "green-",
                      "node_role_arn": "arn:aws:iam::767534018423:role/green-eks-node-group-2022012318411901130000000a",
                      "release_version": "1.21.5-20220112",
                      "remote_access": [],
                      "resources": [
                        {
                          "autoscaling_groups": [
                            {
                              "name": "eks-green-20220123200614296200000001-24bf4445-ee8f-8da0-8398-b248ddd91ac7"
                            }
                          ],
                          "remote_access_security_group_id": ""
                        }
                      ],
                      "scaling_config": [
                        {
                          "desired_size": 1,
                          "max_size": 10,
                          "min_size": 1
                        }
                      ],
                      "status": "ACTIVE",
                      "subnet_ids": [
                        "subnet-032ae1b0fdf5ec242",
                        "subnet-067ea905e5e41ae0f",
                        "subnet-069f93a090e0f24ed"
                      ],
                      "tags": {
                        "ControlledBy": "Terraform",
                        "Name": "green",
                        "Terraform": "true",
                        "environment": "dev"
                      },
                      "tags_all": {
                        "ControlledBy": "Terraform",
                        "Name": "green",
                        "Terraform": "true",
                        "environment": "dev"
                      },
                      "taint": [],
                      "timeouts": {
                        "create": null,
                        "delete": null,
                        "update": null
                      },
                      "update_config": [
                        {
                          "max_unavailable": 1,
                          "max_unavailable_percentage": 0
                        }
                      ],
                      "version": "1.21"
                    },
                    "sensitive_values": {
                      "instance_types": [
                        false
                      ],
                      "labels": {},
                      "launch_template": [
                        {}
                      ],
                      "remote_access": [],
                      "resources": [
                        {
                          "autoscaling_groups": [
                            {}
                          ]
                        }
                      ],
                      "scaling_config": [
                        {}
                      ],
                      "subnet_ids": [
                        false,
                        false,
                        false
                      ],
                      "tags": {},
                      "tags_all": {},
                      "taint": [],
                      "timeouts": {},
                      "update_config": [
                        {}
                      ]
                    },
                    "depends_on": [
                      "aws_kms_key.eks",
                      "aws_security_group.additional",
                      "module.eks.aws_cloudwatch_log_group.this",
                      "module.eks.aws_eks_cluster.this",
                      "module.eks.aws_iam_role.this",
                      "module.eks.aws_iam_role_policy_attachment.this",
                      "module.eks.aws_security_group.cluster",
                      "module.eks.aws_security_group.node",
                      "module.eks.aws_security_group_rule.cluster",
                      "module.eks.aws_security_group_rule.node",
                      "module.eks.data.aws_iam_policy_document.assume_role_policy",
                      "module.eks.data.aws_partition.current",
                      "module.eks.module.eks_managed_node_group.aws_iam_role.this",
                      "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
                      "module.eks.module.eks_managed_node_group.aws_launch_template.this",
                      "module.eks.module.eks_managed_node_group.aws_security_group.this",
                      "module.eks.module.eks_managed_node_group.aws_security_group_rule.this",
                      "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
                      "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
                      "module.eks.module.eks_managed_node_group.data.aws_partition.current",
                      "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
                      "module.vpc.aws_subnet.private",
                      "module.vpc.aws_vpc.this",
                      "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
                    ]
                  },
                  {
                    "address": "module.eks.module.eks_managed_node_group[\"green\"].aws_iam_role.this[0]",
                    "mode": "managed",
                    "type": "aws_iam_role",
                    "name": "this",
                    "index": 0,
                    "provider_name": "registry.terraform.io/hashicorp/aws",
                    "schema_version": 0,
                    "values": {
                      "arn": "arn:aws:iam::767534018423:role/green-eks-node-group-2022012318411901130000000a",
                      "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"EKSNodeAssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                      "create_date": "2022-01-23T18:41:19Z",
                      "description": "EKS managed node group IAM role",
                      "force_detach_policies": true,
                      "id": "green-eks-node-group-2022012318411901130000000a",
                      "inline_policy": [
                        {
                          "name": "",
                          "policy": ""
                        }
                      ],
                      "managed_policy_arns": [
                        "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
                        "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
                        "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"
                      ],
                      "max_session_duration": 3600,
                      "name": "green-eks-node-group-2022012318411901130000000a",
                      "name_prefix": "green-eks-node-group-",
                      "path": "/",
                      "permissions_boundary": null,
                      "tags": {
                        "ControlledBy": "Terraform",
                        "Terraform": "true",
                        "environment": "dev"
                      },
                      "tags_all": {
                        "ControlledBy": "Terraform",
                        "Terraform": "true",
                        "environment": "dev"
                      },
                      "unique_id": "AROA3FNEXV53U7NI7TN7C"
                    },
                    "sensitive_values": {
                      "inline_policy": [
                        {}
                      ],
                      "managed_policy_arns": [
                        false,
                        false,
                        false
                      ],
                      "tags": {},
                      "tags_all": {}
                    },
                    "depends_on": [
                      "aws_security_group.additional",
                      "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
                      "module.eks.module.eks_managed_node_group.data.aws_partition.current",
                      "module.vpc.aws_vpc.this"
                    ]
                  },
                  {
                    "address": "module.eks.module.eks_managed_node_group[\"green\"].aws_iam_role_policy_attachment.this[\"arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly\"]",
                    "mode": "managed",
                    "type": "aws_iam_role_policy_attachment",
                    "name": "this",
                    "index": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
                    "provider_name": "registry.terraform.io/hashicorp/aws",
                    "schema_version": 0,
                    "values": {
                      "id": "green-eks-node-group-2022012318411901130000000a-20220123184121525700000010",
                      "policy_arn": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
                      "role": "green-eks-node-group-2022012318411901130000000a"
                    },
                    "sensitive_values": {},
                    "depends_on": [
                      "module.eks.module.eks_managed_node_group.aws_iam_role.this",
                      "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
                      "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
                      "module.eks.module.eks_managed_node_group.data.aws_partition.current"
                    ]
                  },
                  {
                    "address": "module.eks.module.eks_managed_node_group[\"green\"].aws_iam_role_policy_attachment.this[\"arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy\"]",
                    "mode": "managed",
                    "type": "aws_iam_role_policy_attachment",
                    "name": "this",
                    "index": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
                    "provider_name": "registry.terraform.io/hashicorp/aws",
                    "schema_version": 0,
                    "values": {
                      "id": "green-eks-node-group-2022012318411901130000000a-2022012318412139080000000f",
                      "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
                      "role": "green-eks-node-group-2022012318411901130000000a"
                    },
                    "sensitive_values": {},
                    "depends_on": [
                      "module.eks.module.eks_managed_node_group.aws_iam_role.this",
                      "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
                      "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
                      "module.eks.module.eks_managed_node_group.data.aws_partition.current"
                    ]
                  },
                  {
                    "address": "module.eks.module.eks_managed_node_group[\"green\"].aws_iam_role_policy_attachment.this[\"arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy\"]",
                    "mode": "managed",
                    "type": "aws_iam_role_policy_attachment",
                    "name": "this",
                    "index": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
                    "provider_name": "registry.terraform.io/hashicorp/aws",
                    "schema_version": 0,
                    "values": {
                      "id": "green-eks-node-group-2022012318411901130000000a-2022012318412131010000000d",
                      "policy_arn": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
                      "role": "green-eks-node-group-2022012318411901130000000a"
                    },
                    "sensitive_values": {},
                    "depends_on": [
                      "module.eks.module.eks_managed_node_group.aws_iam_role.this",
                      "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
                      "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
                      "module.eks.module.eks_managed_node_group.data.aws_partition.current"
                    ]
                  },
                  {
                    "address": "module.eks.module.eks_managed_node_group[\"green\"].aws_launch_template.this[0]",
                    "mode": "managed",
                    "type": "aws_launch_template",
                    "name": "this",
                    "index": 0,
                    "provider_name": "registry.terraform.io/hashicorp/aws",
                    "schema_version": 0,
                    "values": {
                      "arn": "arn:aws:ec2:us-east-1:767534018423:launch-template/lt-0155e6d9255d12fea",
                      "block_device_mappings": [],
                      "capacity_reservation_specification": [],
                      "cpu_options": [],
                      "credit_specification": [],
                      "default_version": 1,
                      "description": "Custom launch template for green EKS managed node group",
                      "disable_api_termination": false,
                      "ebs_optimized": "",
                      "elastic_gpu_specifications": [],
                      "elastic_inference_accelerator": [],
                      "enclave_options": [],
                      "hibernation_options": [],
                      "iam_instance_profile": [],
                      "id": "lt-0155e6d9255d12fea",
                      "image_id": "",
                      "instance_initiated_shutdown_behavior": "",
                      "instance_market_options": [],
                      "instance_type": "",
                      "kernel_id": "",
                      "key_name": "",
                      "latest_version": 1,
                      "license_specification": [],
                      "metadata_options": [
                        {
                          "http_endpoint": "enabled",
                          "http_protocol_ipv6": "disabled",
                          "http_put_response_hop_limit": 2,
                          "http_tokens": "required",
                          "instance_metadata_tags": "disabled"
                        }
                      ],
                      "monitoring": [
                        {
                          "enabled": true
                        }
                      ],
                      "name": "green-20220123185736995900000016",
                      "name_prefix": "green-",
                      "network_interfaces": [],
                      "placement": [],
                      "ram_disk_id": "",
                      "security_group_names": [],
                      "tag_specifications": [
                        {
                          "resource_type": "instance",
                          "tags": {
                            "ControlledBy": "Terraform",
                            "Name": "green",
                            "Terraform": "true",
                            "environment": "dev"
                          }
                        },
                        {
                          "resource_type": "network-interface",
                          "tags": {
                            "ControlledBy": "Terraform",
                            "Name": "green",
                            "Terraform": "true",
                            "environment": "dev"
                          }
                        },
                        {
                          "resource_type": "volume",
                          "tags": {
                            "ControlledBy": "Terraform",
                            "Name": "green",
                            "Terraform": "true",
                            "environment": "dev"
                          }
                        }
                      ],
                      "tags": {
                        "ControlledBy": "Terraform",
                        "Terraform": "true",
                        "environment": "dev"
                      },
                      "tags_all": {
                        "ControlledBy": "Terraform",
                        "Terraform": "true",
                        "environment": "dev"
                      },
                      "update_default_version": true,
                      "user_data": "",
                      "vpc_security_group_ids": [
                        "sg-03574098139c61e81",
                        "sg-07671c060ced2bc33",
                        "sg-08928dd39a77f67ac"
                      ]
                    },
                    "sensitive_values": {
                      "block_device_mappings": [],
                      "capacity_reservation_specification": [],
                      "cpu_options": [],
                      "credit_specification": [],
                      "elastic_gpu_specifications": [],
                      "elastic_inference_accelerator": [],
                      "enclave_options": [],
                      "hibernation_options": [],
                      "iam_instance_profile": [],
                      "instance_market_options": [],
                      "license_specification": [],
                      "metadata_options": [
                        {}
                      ],
                      "monitoring": [
                        {}
                      ],
                      "network_interfaces": [],
                      "placement": [],
                      "security_group_names": [],
                      "tag_specifications": [
                        {
                          "tags": {}
                        },
                        {
                          "tags": {}
                        },
                        {
                          "tags": {}
                        }
                      ],
                      "tags": {},
                      "tags_all": {},
                      "vpc_security_group_ids": [
                        false,
                        false,
                        false
                      ]
                    },
                    "depends_on": [
                      "aws_kms_key.eks",
                      "aws_security_group.additional",
                      "module.eks.aws_cloudwatch_log_group.this",
                      "module.eks.aws_eks_cluster.this",
                      "module.eks.aws_iam_role.this",
                      "module.eks.aws_iam_role_policy_attachment.this",
                      "module.eks.aws_security_group.cluster",
                      "module.eks.aws_security_group.node",
                      "module.eks.aws_security_group_rule.cluster",
                      "module.eks.aws_security_group_rule.node",
                      "module.eks.data.aws_iam_policy_document.assume_role_policy",
                      "module.eks.data.aws_partition.current",
                      "module.eks.module.eks_managed_node_group.aws_iam_role.this",
                      "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
                      "module.eks.module.eks_managed_node_group.aws_security_group.this",
                      "module.eks.module.eks_managed_node_group.aws_security_group_rule.this",
                      "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
                      "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
                      "module.eks.module.eks_managed_node_group.data.aws_partition.current",
                      "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
                      "module.vpc.aws_subnet.private",
                      "module.vpc.aws_vpc.this",
                      "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
                    ]
                  },
                  {
                    "address": "module.eks.module.eks_managed_node_group[\"green\"].aws_security_group.this[0]",
                    "mode": "managed",
                    "type": "aws_security_group",
                    "name": "this",
                    "index": 0,
                    "provider_name": "registry.terraform.io/hashicorp/aws",
                    "schema_version": 1,
                    "values": {
                      "arn": "arn:aws:ec2:us-east-1:767534018423:security-group/sg-07671c060ced2bc33",
                      "description": "EKS managed node group security group",
                      "egress": [],
                      "id": "sg-07671c060ced2bc33",
                      "ingress": [],
                      "name": "green-eks-node-group-20220123184117153600000007",
                      "name_prefix": "green-eks-node-group-",
                      "owner_id": "767534018423",
                      "revoke_rules_on_delete": false,
                      "tags": {
                        "ControlledBy": "Terraform",
                        "Name": "green-eks-node-group",
                        "Terraform": "true",
                        "environment": "dev"
                      },
                      "tags_all": {
                        "ControlledBy": "Terraform",
                        "Name": "green-eks-node-group",
                        "Terraform": "true",
                        "environment": "dev"
                      },
                      "timeouts": null,
                      "vpc_id": "vpc-00fc46c587795f3a2"
                    },
                    "sensitive_values": {
                      "egress": [],
                      "ingress": [],
                      "tags": {},
                      "tags_all": {}
                    },
                    "depends_on": [
                      "aws_security_group.additional",
                      "module.vpc.aws_vpc.this"
                    ]
                  },
                  {
                    "address": "module.eks.module.eks_managed_node_group[\"green\"].data.aws_caller_identity.current",
                    "mode": "data",
                    "type": "aws_caller_identity",
                    "name": "current",
                    "provider_name": "registry.terraform.io/hashicorp/aws",
                    "schema_version": 0,
                    "values": {
                      "account_id": "767534018423",
                      "arn": "arn:aws:iam::767534018423:user/phclark",
                      "id": "767534018423",
                      "user_id": "AIDAJBR7HP4YD4MLW3OJK"
                    },
                    "sensitive_values": {}
                  },
                  {
                    "address": "module.eks.module.eks_managed_node_group[\"green\"].data.aws_iam_policy_document.assume_role_policy[0]",
                    "mode": "data",
                    "type": "aws_iam_policy_document",
                    "name": "assume_role_policy",
                    "index": 0,
                    "provider_name": "registry.terraform.io/hashicorp/aws",
                    "schema_version": 0,
                    "values": {
                      "id": "2560088296",
                      "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"EKSNodeAssumeRole\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"ec2.amazonaws.com\"\n      }\n    }\n  ]\n}",
                      "override_json": null,
                      "override_policy_documents": null,
                      "policy_id": null,
                      "source_json": null,
                      "source_policy_documents": null,
                      "statement": [
                        {
                          "actions": [
                            "sts:AssumeRole"
                          ],
                          "condition": [],
                          "effect": "Allow",
                          "not_actions": [],
                          "not_principals": [],
                          "not_resources": [],
                          "principals": [
                            {
                              "identifiers": [
                                "ec2.amazonaws.com"
                              ],
                              "type": "Service"
                            }
                          ],
                          "resources": [],
                          "sid": "EKSNodeAssumeRole"
                        }
                      ],
                      "version": "2012-10-17"
                    },
                    "sensitive_values": {
                      "statement": [
                        {
                          "actions": [
                            false
                          ],
                          "condition": [],
                          "not_actions": [],
                          "not_principals": [],
                          "not_resources": [],
                          "principals": [
                            {
                              "identifiers": [
                                false
                              ]
                            }
                          ],
                          "resources": []
                        }
                      ]
                    }
                  },
                  {
                    "address": "module.eks.module.eks_managed_node_group[\"green\"].data.aws_partition.current",
                    "mode": "data",
                    "type": "aws_partition",
                    "name": "current",
                    "provider_name": "registry.terraform.io/hashicorp/aws",
                    "schema_version": 0,
                    "values": {
                      "dns_suffix": "amazonaws.com",
                      "id": "aws",
                      "partition": "aws",
                      "reverse_dns_prefix": "com.amazonaws"
                    },
                    "sensitive_values": {}
                  }
                ],
                "address": "module.eks.module.eks_managed_node_group[\"green\"]"
              }
            ]
          },
          {
            "resources": [
              {
                "address": "module.vpc.aws_eip.nat[0]",
                "mode": "managed",
                "type": "aws_eip",
                "name": "nat",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "address": null,
                  "allocation_id": "eipalloc-0bd9b6ac0c333edd0",
                  "associate_with_private_ip": null,
                  "association_id": "eipassoc-0e18ee59147831411",
                  "carrier_ip": "",
                  "customer_owned_ip": "",
                  "customer_owned_ipv4_pool": "",
                  "domain": "vpc",
                  "id": "eipalloc-0bd9b6ac0c333edd0",
                  "instance": "",
                  "network_border_group": "us-east-1",
                  "network_interface": "eni-072159fa7287e87b9",
                  "private_dns": "ip-10-0-101-61.ec2.internal",
                  "private_ip": "10.0.101.61",
                  "public_dns": "ec2-3-211-123-169.compute-1.amazonaws.com",
                  "public_ip": "3.211.123.169",
                  "public_ipv4_pool": "amazon",
                  "tags": {
                    "ControlledBy": "Terraform",
                    "Name": "dev-demo-us-east-1a",
                    "Terraform": "true",
                    "environment": "dev"
                  },
                  "tags_all": {
                    "ControlledBy": "Terraform",
                    "Name": "dev-demo-us-east-1a",
                    "Terraform": "true",
                    "environment": "dev"
                  },
                  "timeouts": null,
                  "vpc": true
                },
                "sensitive_values": {
                  "tags": {},
                  "tags_all": {}
                }
              },
              {
                "address": "module.vpc.aws_internet_gateway.this[0]",
                "mode": "managed",
                "type": "aws_internet_gateway",
                "name": "this",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "arn": "arn:aws:ec2:us-east-1:767534018423:internet-gateway/igw-0b3e64c326d3990a7",
                  "id": "igw-0b3e64c326d3990a7",
                  "owner_id": "767534018423",
                  "tags": {
                    "ControlledBy": "Terraform",
                    "Name": "dev-demo",
                    "Terraform": "true",
                    "environment": "dev"
                  },
                  "tags_all": {
                    "ControlledBy": "Terraform",
                    "Name": "dev-demo",
                    "Terraform": "true",
                    "environment": "dev"
                  },
                  "vpc_id": "vpc-00fc46c587795f3a2"
                },
                "sensitive_values": {
                  "tags": {},
                  "tags_all": {}
                },
                "depends_on": [
                  "module.vpc.aws_vpc.this",
                  "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
                ]
              },
              {
                "address": "module.vpc.aws_nat_gateway.this[0]",
                "mode": "managed",
                "type": "aws_nat_gateway",
                "name": "this",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "allocation_id": "eipalloc-0bd9b6ac0c333edd0",
                  "connectivity_type": "public",
                  "id": "nat-01227269d9bda2820",
                  "network_interface_id": "eni-072159fa7287e87b9",
                  "private_ip": "10.0.101.61",
                  "public_ip": "3.211.123.169",
                  "subnet_id": "subnet-015a80f9cbeb9e75e",
                  "tags": {
                    "ControlledBy": "Terraform",
                    "Name": "dev-demo-us-east-1a",
                    "Terraform": "true",
                    "environment": "dev"
                  },
                  "tags_all": {
                    "ControlledBy": "Terraform",
                    "Name": "dev-demo-us-east-1a",
                    "Terraform": "true",
                    "environment": "dev"
                  }
                },
                "sensitive_values": {
                  "tags": {},
                  "tags_all": {}
                },
                "depends_on": [
                  "module.vpc.aws_eip.nat",
                  "module.vpc.aws_internet_gateway.this",
                  "module.vpc.aws_subnet.public",
                  "module.vpc.aws_vpc.this",
                  "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
                ]
              },
              {
                "address": "module.vpc.aws_route.private_nat_gateway[0]",
                "mode": "managed",
                "type": "aws_route",
                "name": "private_nat_gateway",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "carrier_gateway_id": "",
                  "destination_cidr_block": "0.0.0.0/0",
                  "destination_ipv6_cidr_block": "",
                  "destination_prefix_list_id": "",
                  "egress_only_gateway_id": "",
                  "gateway_id": "",
                  "id": "r-rtb-0eb5c8bc130cb61471080289494",
                  "instance_id": "",
                  "instance_owner_id": "",
                  "local_gateway_id": "",
                  "nat_gateway_id": "nat-01227269d9bda2820",
                  "network_interface_id": "",
                  "origin": "CreateRoute",
                  "route_table_id": "rtb-0eb5c8bc130cb6147",
                  "state": "active",
                  "timeouts": {
                    "create": "5m",
                    "delete": null,
                    "update": null
                  },
                  "transit_gateway_id": "",
                  "vpc_endpoint_id": "",
                  "vpc_peering_connection_id": ""
                },
                "sensitive_values": {
                  "timeouts": {}
                },
                "depends_on": [
                  "module.vpc.aws_eip.nat",
                  "module.vpc.aws_internet_gateway.this",
                  "module.vpc.aws_nat_gateway.this",
                  "module.vpc.aws_route_table.private",
                  "module.vpc.aws_subnet.public",
                  "module.vpc.aws_vpc.this",
                  "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
                ]
              },
              {
                "address": "module.vpc.aws_route.public_internet_gateway[0]",
                "mode": "managed",
                "type": "aws_route",
                "name": "public_internet_gateway",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "carrier_gateway_id": "",
                  "destination_cidr_block": "0.0.0.0/0",
                  "destination_ipv6_cidr_block": "",
                  "destination_prefix_list_id": "",
                  "egress_only_gateway_id": "",
                  "gateway_id": "igw-0b3e64c326d3990a7",
                  "id": "r-rtb-0ca1a45db0732b6341080289494",
                  "instance_id": "",
                  "instance_owner_id": "",
                  "local_gateway_id": "",
                  "nat_gateway_id": "",
                  "network_interface_id": "",
                  "origin": "CreateRoute",
                  "route_table_id": "rtb-0ca1a45db0732b634",
                  "state": "active",
                  "timeouts": {
                    "create": "5m",
                    "delete": null,
                    "update": null
                  },
                  "transit_gateway_id": "",
                  "vpc_endpoint_id": "",
                  "vpc_peering_connection_id": ""
                },
                "sensitive_values": {
                  "timeouts": {}
                },
                "depends_on": [
                  "module.vpc.aws_internet_gateway.this",
                  "module.vpc.aws_route_table.public",
                  "module.vpc.aws_vpc.this",
                  "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
                ]
              },
              {
                "address": "module.vpc.aws_route_table.private[0]",
                "mode": "managed",
                "type": "aws_route_table",
                "name": "private",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "arn": "arn:aws:ec2:us-east-1:767534018423:route-table/rtb-0eb5c8bc130cb6147",
                  "id": "rtb-0eb5c8bc130cb6147",
                  "owner_id": "767534018423",
                  "propagating_vgws": [],
                  "route": [
                    {
                      "carrier_gateway_id": "",
                      "cidr_block": "0.0.0.0/0",
                      "destination_prefix_list_id": "",
                      "egress_only_gateway_id": "",
                      "gateway_id": "",
                      "instance_id": "",
                      "ipv6_cidr_block": "",
                      "local_gateway_id": "",
                      "nat_gateway_id": "nat-01227269d9bda2820",
                      "network_interface_id": "",
                      "transit_gateway_id": "",
                      "vpc_endpoint_id": "",
                      "vpc_peering_connection_id": ""
                    }
                  ],
                  "tags": {
                    "ControlledBy": "Terraform",
                    "Name": "dev-demo-private",
                    "Terraform": "true",
                    "environment": "dev"
                  },
                  "tags_all": {
                    "ControlledBy": "Terraform",
                    "Name": "dev-demo-private",
                    "Terraform": "true",
                    "environment": "dev"
                  },
                  "timeouts": null,
                  "vpc_id": "vpc-00fc46c587795f3a2"
                },
                "sensitive_values": {
                  "propagating_vgws": [],
                  "route": [
                    {}
                  ],
                  "tags": {},
                  "tags_all": {}
                },
                "depends_on": [
                  "module.vpc.aws_vpc.this",
                  "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
                ]
              },
              {
                "address": "module.vpc.aws_route_table.public[0]",
                "mode": "managed",
                "type": "aws_route_table",
                "name": "public",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "arn": "arn:aws:ec2:us-east-1:767534018423:route-table/rtb-0ca1a45db0732b634",
                  "id": "rtb-0ca1a45db0732b634",
                  "owner_id": "767534018423",
                  "propagating_vgws": [],
                  "route": [
                    {
                      "carrier_gateway_id": "",
                      "cidr_block": "0.0.0.0/0",
                      "destination_prefix_list_id": "",
                      "egress_only_gateway_id": "",
                      "gateway_id": "igw-0b3e64c326d3990a7",
                      "instance_id": "",
                      "ipv6_cidr_block": "",
                      "local_gateway_id": "",
                      "nat_gateway_id": "",
                      "network_interface_id": "",
                      "transit_gateway_id": "",
                      "vpc_endpoint_id": "",
                      "vpc_peering_connection_id": ""
                    }
                  ],
                  "tags": {
                    "ControlledBy": "Terraform",
                    "Name": "dev-demo-public",
                    "Terraform": "true",
                    "environment": "dev"
                  },
                  "tags_all": {
                    "ControlledBy": "Terraform",
                    "Name": "dev-demo-public",
                    "Terraform": "true",
                    "environment": "dev"
                  },
                  "timeouts": null,
                  "vpc_id": "vpc-00fc46c587795f3a2"
                },
                "sensitive_values": {
                  "propagating_vgws": [],
                  "route": [
                    {}
                  ],
                  "tags": {},
                  "tags_all": {}
                },
                "depends_on": [
                  "module.vpc.aws_vpc.this",
                  "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
                ]
              },
              {
                "address": "module.vpc.aws_route_table_association.private[0]",
                "mode": "managed",
                "type": "aws_route_table_association",
                "name": "private",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "gateway_id": "",
                  "id": "rtbassoc-0dbf897e6c0674c74",
                  "route_table_id": "rtb-0eb5c8bc130cb6147",
                  "subnet_id": "subnet-067ea905e5e41ae0f"
                },
                "sensitive_values": {},
                "depends_on": [
                  "module.vpc.aws_route_table.private",
                  "module.vpc.aws_subnet.private",
                  "module.vpc.aws_vpc.this",
                  "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
                ]
              },
              {
                "address": "module.vpc.aws_route_table_association.private[1]",
                "mode": "managed",
                "type": "aws_route_table_association",
                "name": "private",
                "index": 1,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "gateway_id": "",
                  "id": "rtbassoc-0ae2be6d9e1029d67",
                  "route_table_id": "rtb-0eb5c8bc130cb6147",
                  "subnet_id": "subnet-069f93a090e0f24ed"
                },
                "sensitive_values": {},
                "depends_on": [
                  "module.vpc.aws_route_table.private",
                  "module.vpc.aws_subnet.private",
                  "module.vpc.aws_vpc.this",
                  "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
                ]
              },
              {
                "address": "module.vpc.aws_route_table_association.private[2]",
                "mode": "managed",
                "type": "aws_route_table_association",
                "name": "private",
                "index": 2,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "gateway_id": "",
                  "id": "rtbassoc-0fd8306dcd3c5b927",
                  "route_table_id": "rtb-0eb5c8bc130cb6147",
                  "subnet_id": "subnet-032ae1b0fdf5ec242"
                },
                "sensitive_values": {},
                "depends_on": [
                  "module.vpc.aws_route_table.private",
                  "module.vpc.aws_subnet.private",
                  "module.vpc.aws_vpc.this",
                  "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
                ]
              },
              {
                "address": "module.vpc.aws_route_table_association.public[0]",
                "mode": "managed",
                "type": "aws_route_table_association",
                "name": "public",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "gateway_id": "",
                  "id": "rtbassoc-04058f42e5bec65b3",
                  "route_table_id": "rtb-0ca1a45db0732b634",
                  "subnet_id": "subnet-015a80f9cbeb9e75e"
                },
                "sensitive_values": {},
                "depends_on": [
                  "module.vpc.aws_route_table.public",
                  "module.vpc.aws_subnet.public",
                  "module.vpc.aws_vpc.this",
                  "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
                ]
              },
              {
                "address": "module.vpc.aws_route_table_association.public[1]",
                "mode": "managed",
                "type": "aws_route_table_association",
                "name": "public",
                "index": 1,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "gateway_id": "",
                  "id": "rtbassoc-0ffe7adffcfff917c",
                  "route_table_id": "rtb-0ca1a45db0732b634",
                  "subnet_id": "subnet-08c80cb915aa41451"
                },
                "sensitive_values": {},
                "depends_on": [
                  "module.vpc.aws_route_table.public",
                  "module.vpc.aws_subnet.public",
                  "module.vpc.aws_vpc.this",
                  "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
                ]
              },
              {
                "address": "module.vpc.aws_route_table_association.public[2]",
                "mode": "managed",
                "type": "aws_route_table_association",
                "name": "public",
                "index": 2,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "gateway_id": "",
                  "id": "rtbassoc-0de8ab0eaf4aa392f",
                  "route_table_id": "rtb-0ca1a45db0732b634",
                  "subnet_id": "subnet-0ecbc0b2e847025a0"
                },
                "sensitive_values": {},
                "depends_on": [
                  "module.vpc.aws_route_table.public",
                  "module.vpc.aws_subnet.public",
                  "module.vpc.aws_vpc.this",
                  "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
                ]
              },
              {
                "address": "module.vpc.aws_subnet.private[0]",
                "mode": "managed",
                "type": "aws_subnet",
                "name": "private",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 1,
                "values": {
                  "arn": "arn:aws:ec2:us-east-1:767534018423:subnet/subnet-067ea905e5e41ae0f",
                  "assign_ipv6_address_on_creation": false,
                  "availability_zone": "us-east-1a",
                  "availability_zone_id": "use1-az2",
                  "cidr_block": "10.0.1.0/24",
                  "customer_owned_ipv4_pool": "",
                  "enable_dns64": false,
                  "enable_resource_name_dns_a_record_on_launch": false,
                  "enable_resource_name_dns_aaaa_record_on_launch": false,
                  "id": "subnet-067ea905e5e41ae0f",
                  "ipv6_cidr_block": "",
                  "ipv6_cidr_block_association_id": "",
                  "ipv6_native": false,
                  "map_customer_owned_ip_on_launch": false,
                  "map_public_ip_on_launch": false,
                  "outpost_arn": "",
                  "owner_id": "767534018423",
                  "private_dns_hostname_type_on_launch": "ip-name",
                  "tags": {
                    "ControlledBy": "Terraform",
                    "Name": "dev-demo-private-us-east-1a",
                    "Terraform": "true",
                    "environment": "dev",
                    "kubernetes.io/cluster/dev-demo": "shared",
                    "kubernetes.io/role/internal-elb": "1"
                  },
                  "tags_all": {
                    "ControlledBy": "Terraform",
                    "Name": "dev-demo-private-us-east-1a",
                    "Terraform": "true",
                    "environment": "dev",
                    "kubernetes.io/cluster/dev-demo": "shared",
                    "kubernetes.io/role/internal-elb": "1"
                  },
                  "timeouts": null,
                  "vpc_id": "vpc-00fc46c587795f3a2"
                },
                "sensitive_values": {
                  "tags": {},
                  "tags_all": {}
                },
                "depends_on": [
                  "module.vpc.aws_vpc.this",
                  "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
                ]
              },
              {
                "address": "module.vpc.aws_subnet.private[1]",
                "mode": "managed",
                "type": "aws_subnet",
                "name": "private",
                "index": 1,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 1,
                "values": {
                  "arn": "arn:aws:ec2:us-east-1:767534018423:subnet/subnet-069f93a090e0f24ed",
                  "assign_ipv6_address_on_creation": false,
                  "availability_zone": "us-east-1b",
                  "availability_zone_id": "use1-az4",
                  "cidr_block": "10.0.2.0/24",
                  "customer_owned_ipv4_pool": "",
                  "enable_dns64": false,
                  "enable_resource_name_dns_a_record_on_launch": false,
                  "enable_resource_name_dns_aaaa_record_on_launch": false,
                  "id": "subnet-069f93a090e0f24ed",
                  "ipv6_cidr_block": "",
                  "ipv6_cidr_block_association_id": "",
                  "ipv6_native": false,
                  "map_customer_owned_ip_on_launch": false,
                  "map_public_ip_on_launch": false,
                  "outpost_arn": "",
                  "owner_id": "767534018423",
                  "private_dns_hostname_type_on_launch": "ip-name",
                  "tags": {
                    "ControlledBy": "Terraform",
                    "Name": "dev-demo-private-us-east-1b",
                    "Terraform": "true",
                    "environment": "dev",
                    "kubernetes.io/cluster/dev-demo": "shared",
                    "kubernetes.io/role/internal-elb": "1"
                  },
                  "tags_all": {
                    "ControlledBy": "Terraform",
                    "Name": "dev-demo-private-us-east-1b",
                    "Terraform": "true",
                    "environment": "dev",
                    "kubernetes.io/cluster/dev-demo": "shared",
                    "kubernetes.io/role/internal-elb": "1"
                  },
                  "timeouts": null,
                  "vpc_id": "vpc-00fc46c587795f3a2"
                },
                "sensitive_values": {
                  "tags": {},
                  "tags_all": {}
                },
                "depends_on": [
                  "module.vpc.aws_vpc.this",
                  "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
                ]
              },
              {
                "address": "module.vpc.aws_subnet.private[2]",
                "mode": "managed",
                "type": "aws_subnet",
                "name": "private",
                "index": 2,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 1,
                "values": {
                  "arn": "arn:aws:ec2:us-east-1:767534018423:subnet/subnet-032ae1b0fdf5ec242",
                  "assign_ipv6_address_on_creation": false,
                  "availability_zone": "us-east-1c",
                  "availability_zone_id": "use1-az6",
                  "cidr_block": "10.0.3.0/24",
                  "customer_owned_ipv4_pool": "",
                  "enable_dns64": false,
                  "enable_resource_name_dns_a_record_on_launch": false,
                  "enable_resource_name_dns_aaaa_record_on_launch": false,
                  "id": "subnet-032ae1b0fdf5ec242",
                  "ipv6_cidr_block": "",
                  "ipv6_cidr_block_association_id": "",
                  "ipv6_native": false,
                  "map_customer_owned_ip_on_launch": false,
                  "map_public_ip_on_launch": false,
                  "outpost_arn": "",
                  "owner_id": "767534018423",
                  "private_dns_hostname_type_on_launch": "ip-name",
                  "tags": {
                    "ControlledBy": "Terraform",
                    "Name": "dev-demo-private-us-east-1c",
                    "Terraform": "true",
                    "environment": "dev",
                    "kubernetes.io/cluster/dev-demo": "shared",
                    "kubernetes.io/role/internal-elb": "1"
                  },
                  "tags_all": {
                    "ControlledBy": "Terraform",
                    "Name": "dev-demo-private-us-east-1c",
                    "Terraform": "true",
                    "environment": "dev",
                    "kubernetes.io/cluster/dev-demo": "shared",
                    "kubernetes.io/role/internal-elb": "1"
                  },
                  "timeouts": null,
                  "vpc_id": "vpc-00fc46c587795f3a2"
                },
                "sensitive_values": {
                  "tags": {},
                  "tags_all": {}
                },
                "depends_on": [
                  "module.vpc.aws_vpc.this",
                  "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
                ]
              },
              {
                "address": "module.vpc.aws_subnet.public[0]",
                "mode": "managed",
                "type": "aws_subnet",
                "name": "public",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 1,
                "values": {
                  "arn": "arn:aws:ec2:us-east-1:767534018423:subnet/subnet-015a80f9cbeb9e75e",
                  "assign_ipv6_address_on_creation": false,
                  "availability_zone": "us-east-1a",
                  "availability_zone_id": "use1-az2",
                  "cidr_block": "10.0.101.0/24",
                  "customer_owned_ipv4_pool": "",
                  "enable_dns64": false,
                  "enable_resource_name_dns_a_record_on_launch": false,
                  "enable_resource_name_dns_aaaa_record_on_launch": false,
                  "id": "subnet-015a80f9cbeb9e75e",
                  "ipv6_cidr_block": "",
                  "ipv6_cidr_block_association_id": "",
                  "ipv6_native": false,
                  "map_customer_owned_ip_on_launch": false,
                  "map_public_ip_on_launch": true,
                  "outpost_arn": "",
                  "owner_id": "767534018423",
                  "private_dns_hostname_type_on_launch": "ip-name",
                  "tags": {
                    "ControlledBy": "Terraform",
                    "Name": "dev-demo-public-us-east-1a",
                    "Terraform": "true",
                    "environment": "dev",
                    "kubernetes.io/cluster/dev-demo": "shared",
                    "kubernetes.io/role/elb": "1"
                  },
                  "tags_all": {
                    "ControlledBy": "Terraform",
                    "Name": "dev-demo-public-us-east-1a",
                    "Terraform": "true",
                    "environment": "dev",
                    "kubernetes.io/cluster/dev-demo": "shared",
                    "kubernetes.io/role/elb": "1"
                  },
                  "timeouts": null,
                  "vpc_id": "vpc-00fc46c587795f3a2"
                },
                "sensitive_values": {
                  "tags": {},
                  "tags_all": {}
                },
                "depends_on": [
                  "module.vpc.aws_vpc.this",
                  "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
                ]
              },
              {
                "address": "module.vpc.aws_subnet.public[1]",
                "mode": "managed",
                "type": "aws_subnet",
                "name": "public",
                "index": 1,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 1,
                "values": {
                  "arn": "arn:aws:ec2:us-east-1:767534018423:subnet/subnet-08c80cb915aa41451",
                  "assign_ipv6_address_on_creation": false,
                  "availability_zone": "us-east-1b",
                  "availability_zone_id": "use1-az4",
                  "cidr_block": "10.0.102.0/24",
                  "customer_owned_ipv4_pool": "",
                  "enable_dns64": false,
                  "enable_resource_name_dns_a_record_on_launch": false,
                  "enable_resource_name_dns_aaaa_record_on_launch": false,
                  "id": "subnet-08c80cb915aa41451",
                  "ipv6_cidr_block": "",
                  "ipv6_cidr_block_association_id": "",
                  "ipv6_native": false,
                  "map_customer_owned_ip_on_launch": false,
                  "map_public_ip_on_launch": true,
                  "outpost_arn": "",
                  "owner_id": "767534018423",
                  "private_dns_hostname_type_on_launch": "ip-name",
                  "tags": {
                    "ControlledBy": "Terraform",
                    "Name": "dev-demo-public-us-east-1b",
                    "Terraform": "true",
                    "environment": "dev",
                    "kubernetes.io/cluster/dev-demo": "shared",
                    "kubernetes.io/role/elb": "1"
                  },
                  "tags_all": {
                    "ControlledBy": "Terraform",
                    "Name": "dev-demo-public-us-east-1b",
                    "Terraform": "true",
                    "environment": "dev",
                    "kubernetes.io/cluster/dev-demo": "shared",
                    "kubernetes.io/role/elb": "1"
                  },
                  "timeouts": null,
                  "vpc_id": "vpc-00fc46c587795f3a2"
                },
                "sensitive_values": {
                  "tags": {},
                  "tags_all": {}
                },
                "depends_on": [
                  "module.vpc.aws_vpc.this",
                  "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
                ]
              },
              {
                "address": "module.vpc.aws_subnet.public[2]",
                "mode": "managed",
                "type": "aws_subnet",
                "name": "public",
                "index": 2,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 1,
                "values": {
                  "arn": "arn:aws:ec2:us-east-1:767534018423:subnet/subnet-0ecbc0b2e847025a0",
                  "assign_ipv6_address_on_creation": false,
                  "availability_zone": "us-east-1c",
                  "availability_zone_id": "use1-az6",
                  "cidr_block": "10.0.103.0/24",
                  "customer_owned_ipv4_pool": "",
                  "enable_dns64": false,
                  "enable_resource_name_dns_a_record_on_launch": false,
                  "enable_resource_name_dns_aaaa_record_on_launch": false,
                  "id": "subnet-0ecbc0b2e847025a0",
                  "ipv6_cidr_block": "",
                  "ipv6_cidr_block_association_id": "",
                  "ipv6_native": false,
                  "map_customer_owned_ip_on_launch": false,
                  "map_public_ip_on_launch": true,
                  "outpost_arn": "",
                  "owner_id": "767534018423",
                  "private_dns_hostname_type_on_launch": "ip-name",
                  "tags": {
                    "ControlledBy": "Terraform",
                    "Name": "dev-demo-public-us-east-1c",
                    "Terraform": "true",
                    "environment": "dev",
                    "kubernetes.io/cluster/dev-demo": "shared",
                    "kubernetes.io/role/elb": "1"
                  },
                  "tags_all": {
                    "ControlledBy": "Terraform",
                    "Name": "dev-demo-public-us-east-1c",
                    "Terraform": "true",
                    "environment": "dev",
                    "kubernetes.io/cluster/dev-demo": "shared",
                    "kubernetes.io/role/elb": "1"
                  },
                  "timeouts": null,
                  "vpc_id": "vpc-00fc46c587795f3a2"
                },
                "sensitive_values": {
                  "tags": {},
                  "tags_all": {}
                },
                "depends_on": [
                  "module.vpc.aws_vpc.this",
                  "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
                ]
              },
              {
                "address": "module.vpc.aws_vpc.this[0]",
                "mode": "managed",
                "type": "aws_vpc",
                "name": "this",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 1,
                "values": {
                  "arn": "arn:aws:ec2:us-east-1:767534018423:vpc/vpc-00fc46c587795f3a2",
                  "assign_generated_ipv6_cidr_block": false,
                  "cidr_block": "10.0.0.0/16",
                  "default_network_acl_id": "acl-015989da2afa14fe8",
                  "default_route_table_id": "rtb-08c3bf87fdb0fa331",
                  "default_security_group_id": "sg-01c19b363e66bc9ed",
                  "dhcp_options_id": "dopt-d2aa95ab",
                  "enable_classiclink": false,
                  "enable_classiclink_dns_support": false,
                  "enable_dns_hostnames": true,
                  "enable_dns_support": true,
                  "id": "vpc-00fc46c587795f3a2",
                  "instance_tenancy": "default",
                  "ipv4_ipam_pool_id": null,
                  "ipv4_netmask_length": null,
                  "ipv6_association_id": "",
                  "ipv6_cidr_block": "",
                  "ipv6_cidr_block_network_border_group": "",
                  "ipv6_ipam_pool_id": "",
                  "ipv6_netmask_length": 0,
                  "main_route_table_id": "rtb-08c3bf87fdb0fa331",
                  "owner_id": "767534018423",
                  "tags": {
                    "ControlledBy": "Terraform",
                    "Name": "dev-demo",
                    "Terraform": "true",
                    "environment": "dev"
                  },
                  "tags_all": {
                    "ControlledBy": "Terraform",
                    "Name": "dev-demo",
                    "Terraform": "true",
                    "environment": "dev"
                  }
                },
                "sensitive_values": {
                  "tags": {},
                  "tags_all": {}
                }
              }
            ],
            "address": "module.vpc"
          }
        ]
      }
    }
  },
  "configuration": {
    "provider_config": {
      "aws": {
        "name": "aws",
        "version_constraint": "3.73.0"
      },
      "module.eks.module.eks_managed_node_group.module.user_data:cloudinit": {
        "name": "cloudinit",
        "version_constraint": ">= 2.0.0",
        "module_address": "module.eks.module.eks_managed_node_group.module.user_data"
      },
      "module.eks.module.eks_managed_node_group:aws": {
        "name": "aws",
        "version_constraint": ">= 3.72.0",
        "module_address": "module.eks.module.eks_managed_node_group"
      },
      "module.eks.module.eks_managed_node_group:cloudinit": {
        "name": "cloudinit",
        "version_constraint": ">= 2.0.0",
        "module_address": "module.eks.module.eks_managed_node_group"
      },
      "module.eks.module.fargate_profile:aws": {
        "name": "aws",
        "version_constraint": ">= 3.72.0",
        "module_address": "module.eks.module.fargate_profile"
      },
      "module.eks.module.self_managed_node_group.module.user_data:cloudinit": {
        "name": "cloudinit",
        "version_constraint": ">= 2.0.0",
        "module_address": "module.eks.module.self_managed_node_group.module.user_data"
      },
      "module.eks.module.self_managed_node_group:aws": {
        "name": "aws",
        "version_constraint": ">= 3.72.0",
        "module_address": "module.eks.module.self_managed_node_group"
      },
      "module.eks.module.self_managed_node_group:cloudinit": {
        "name": "cloudinit",
        "version_constraint": ">= 2.0.0",
        "module_address": "module.eks.module.self_managed_node_group"
      },
      "module.eks:aws": {
        "name": "aws",
        "version_constraint": ">= 3.72.0",
        "module_address": "module.eks"
      },
      "module.eks:tls": {
        "name": "tls",
        "version_constraint": ">= 2.2.0",
        "module_address": "module.eks"
      },
      "module.vpc:aws": {
        "name": "aws",
        "version_constraint": ">= 3.63.0",
        "module_address": "module.vpc"
      }
    },
    "root_module": {
      "outputs": {
        "cluster_addons": {
          "expression": {
            "references": [
              "module.eks.cluster_addons",
              "module.eks"
            ]
          }
        },
        "cluster_endpoint": {
          "expression": {
            "references": [
              "module.eks.cluster_endpoint",
              "module.eks"
            ]
          }
        },
        "cluster_name": {
          "expression": {
            "references": [
              "module.eks.cluster_id",
              "module.eks"
            ]
          }
        },
        "cluster_status": {
          "expression": {
            "references": [
              "module.eks.cluster_status",
              "module.eks"
            ]
          }
        },
        "oidc_issuer_url": {
          "expression": {
            "references": [
              "module.eks.cluster_oidc_issuer_url",
              "module.eks"
            ]
          }
        },
        "oidc_provider_arn": {
          "expression": {
            "references": [
              "module.eks.oidc_provider_arn",
              "module.eks"
            ]
          }
        },
        "private_subnets": {
          "expression": {
            "references": [
              "module.vpc.private_subnets",
              "module.vpc"
            ]
          }
        },
        "private_subnets_cidr_blocks": {
          "expression": {
            "references": [
              "module.vpc.private_subnets_cidr_blocks",
              "module.vpc"
            ]
          }
        },
        "public_subnets": {
          "expression": {
            "references": [
              "module.vpc.public_subnets",
              "module.vpc"
            ]
          }
        },
        "public_subnets_cidr_blocks": {
          "expression": {
            "references": [
              "module.vpc.public_subnets_cidr_blocks",
              "module.vpc"
            ]
          }
        },
        "vpc_arn": {
          "expression": {
            "references": [
              "module.vpc.vpc_arn",
              "module.vpc"
            ]
          }
        },
        "vpc_cidr_block": {
          "expression": {
            "references": [
              "module.vpc.vpc_cidr_block",
              "module.vpc"
            ]
          }
        },
        "vpc_id": {
          "expression": {
            "references": [
              "module.vpc.vpc_id",
              "module.vpc"
            ]
          }
        }
      },
      "resources": [
        {
          "address": "aws_kms_key.eks",
          "mode": "managed",
          "type": "aws_kms_key",
          "name": "eks",
          "provider_config_key": "aws",
          "expressions": {
            "deletion_window_in_days": {
              "constant_value": 7
            },
            "description": {
              "constant_value": "EKS Secret Encryption Key"
            },
            "enable_key_rotation": {
              "constant_value": true
            },
            "tags": {
              "references": [
                "var.tags"
              ]
            }
          },
          "schema_version": 0
        }
      ],
      "module_calls": {
        "eks": {
          "source": "terraform-aws-modules/eks/aws",
          "expressions": {
            "cluster_addons": {
              "constant_value": {
                "coredns": {
                  "resolve_conflicts": "OVERWRITE"
                },
                "kube-proxy": {},
                "vpc-cni": {
                  "resolve_conflicts": "OVERWRITE"
                }
              }
            },
            "cluster_encryption_config": {
              "references": [
                "aws_kms_key.eks.arn",
                "aws_kms_key.eks"
              ]
            },
            "cluster_endpoint_private_access": {
              "constant_value": true
            },
            "cluster_endpoint_public_access": {
              "constant_value": true
            },
            "cluster_name": {
              "references": [
                "var.environment",
                "var.cluster_name"
              ]
            },
            "cluster_version": {
              "references": [
                "var.kubernetes_version"
              ]
            },
            "eks_managed_node_group_defaults": {
              "constant_value": {
                "ami_type": "AL2_x86_64",
                "disk_size": 50,
                "instance_types": [
                  "t3.medium",
                  "t3.large",
                  "c5.large"
                ],
                "vpc_security_group_ids": []
              }
            },
            "eks_managed_node_groups": {
              "references": [
                "var.tags",
                "var.tags"
              ]
            },
            "enable_irsa": {
              "constant_value": true
            },
            "subnet_ids": {
              "references": [
                "module.vpc.private_subnets",
                "module.vpc"
              ]
            },
            "vpc_id": {
              "references": [
                "module.vpc.vpc_id",
                "module.vpc"
              ]
            }
          },
          "module": {
            "outputs": {
              "aws_auth_configmap_yaml": {
                "expression": {
                  "references": [
                    "path.module",
                    "module.eks_managed_node_group",
                    "module.self_managed_node_group",
                    "module.self_managed_node_group",
                    "module.fargate_profile"
                  ]
                },
                "description": "Formatted yaml output for base aws-auth configmap containing roles used in cluster node groups/fargate profiles"
              },
              "cloudwatch_log_group_arn": {
                "expression": {
                  "references": [
                    "aws_cloudwatch_log_group.this[0].arn",
                    "aws_cloudwatch_log_group.this[0]",
                    "aws_cloudwatch_log_group.this"
                  ]
                },
                "description": "Arn of cloudwatch log group created"
              },
              "cloudwatch_log_group_name": {
                "expression": {
                  "references": [
                    "aws_cloudwatch_log_group.this[0].name",
                    "aws_cloudwatch_log_group.this[0]",
                    "aws_cloudwatch_log_group.this"
                  ]
                },
                "description": "Name of cloudwatch log group created"
              },
              "cluster_addons": {
                "expression": {
                  "references": [
                    "aws_eks_addon.this"
                  ]
                },
                "description": "Map of attribute maps for all EKS cluster addons enabled"
              },
              "cluster_arn": {
                "expression": {
                  "references": [
                    "aws_eks_cluster.this[0].arn",
                    "aws_eks_cluster.this[0]",
                    "aws_eks_cluster.this"
                  ]
                },
                "description": "The Amazon Resource Name (ARN) of the cluster"
              },
              "cluster_certificate_authority_data": {
                "expression": {
                  "references": [
                    "aws_eks_cluster.this[0].certificate_authority[0].data",
                    "aws_eks_cluster.this[0].certificate_authority[0]",
                    "aws_eks_cluster.this[0].certificate_authority",
                    "aws_eks_cluster.this[0]",
                    "aws_eks_cluster.this"
                  ]
                },
                "description": "Base64 encoded certificate data required to communicate with the cluster"
              },
              "cluster_endpoint": {
                "expression": {
                  "references": [
                    "aws_eks_cluster.this[0].endpoint",
                    "aws_eks_cluster.this[0]",
                    "aws_eks_cluster.this"
                  ]
                },
                "description": "Endpoint for your Kubernetes API server"
              },
              "cluster_iam_role_arn": {
                "expression": {
                  "references": [
                    "aws_iam_role.this[0].arn",
                    "aws_iam_role.this[0]",
                    "aws_iam_role.this"
                  ]
                },
                "description": "IAM role ARN of the EKS cluster"
              },
              "cluster_iam_role_name": {
                "expression": {
                  "references": [
                    "aws_iam_role.this[0].name",
                    "aws_iam_role.this[0]",
                    "aws_iam_role.this"
                  ]
                },
                "description": "IAM role name of the EKS cluster"
              },
              "cluster_iam_role_unique_id": {
                "expression": {
                  "references": [
                    "aws_iam_role.this[0].unique_id",
                    "aws_iam_role.this[0]",
                    "aws_iam_role.this"
                  ]
                },
                "description": "Stable and unique string identifying the IAM role"
              },
              "cluster_id": {
                "expression": {
                  "references": [
                    "aws_eks_cluster.this[0].id",
                    "aws_eks_cluster.this[0]",
                    "aws_eks_cluster.this"
                  ]
                },
                "description": "The name/id of the EKS cluster. Will block on cluster creation until the cluster is really ready"
              },
              "cluster_identity_providers": {
                "expression": {
                  "references": [
                    "aws_eks_identity_provider_config.this"
                  ]
                },
                "description": "Map of attribute maps for all EKS identity providers enabled"
              },
              "cluster_oidc_issuer_url": {
                "expression": {
                  "references": [
                    "aws_eks_cluster.this[0].identity[0].oidc[0].issuer",
                    "aws_eks_cluster.this[0].identity[0].oidc[0]",
                    "aws_eks_cluster.this[0].identity[0].oidc",
                    "aws_eks_cluster.this[0].identity[0]",
                    "aws_eks_cluster.this[0].identity",
                    "aws_eks_cluster.this[0]",
                    "aws_eks_cluster.this"
                  ]
                },
                "description": "The URL on the EKS cluster for the OpenID Connect identity provider"
              },
              "cluster_platform_version": {
                "expression": {
                  "references": [
                    "aws_eks_cluster.this[0].platform_version",
                    "aws_eks_cluster.this[0]",
                    "aws_eks_cluster.this"
                  ]
                },
                "description": "Platform version for the cluster"
              },
              "cluster_primary_security_group_id": {
                "expression": {
                  "references": [
                    "aws_eks_cluster.this[0].vpc_config[0].cluster_security_group_id",
                    "aws_eks_cluster.this[0].vpc_config[0]",
                    "aws_eks_cluster.this[0].vpc_config",
                    "aws_eks_cluster.this[0]",
                    "aws_eks_cluster.this"
                  ]
                },
                "description": "Cluster security group that was created by Amazon EKS for the cluster. Managed node groups use this security group for control-plane-to-data-plane communication. Referred to as 'Cluster security group' in the EKS console"
              },
              "cluster_security_group_arn": {
                "expression": {
                  "references": [
                    "aws_security_group.cluster[0].arn",
                    "aws_security_group.cluster[0]",
                    "aws_security_group.cluster"
                  ]
                },
                "description": "Amazon Resource Name (ARN) of the cluster security group"
              },
              "cluster_security_group_id": {
                "expression": {
                  "references": [
                    "aws_security_group.cluster[0].id",
                    "aws_security_group.cluster[0]",
                    "aws_security_group.cluster"
                  ]
                },
                "description": "ID of the cluster security group"
              },
              "cluster_status": {
                "expression": {
                  "references": [
                    "aws_eks_cluster.this[0].status",
                    "aws_eks_cluster.this[0]",
                    "aws_eks_cluster.this"
                  ]
                },
                "description": "Status of the EKS cluster. One of `CREATING`, `ACTIVE`, `DELETING`, `FAILED`"
              },
              "eks_managed_node_groups": {
                "expression": {
                  "references": [
                    "module.eks_managed_node_group"
                  ]
                },
                "description": "Map of attribute maps for all EKS managed node groups created"
              },
              "fargate_profiles": {
                "expression": {
                  "references": [
                    "module.fargate_profile"
                  ]
                },
                "description": "Map of attribute maps for all EKS Fargate Profiles created"
              },
              "node_security_group_arn": {
                "expression": {
                  "references": [
                    "aws_security_group.node[0].arn",
                    "aws_security_group.node[0]",
                    "aws_security_group.node"
                  ]
                },
                "description": "Amazon Resource Name (ARN) of the node shared security group"
              },
              "node_security_group_id": {
                "expression": {
                  "references": [
                    "aws_security_group.node[0].id",
                    "aws_security_group.node[0]",
                    "aws_security_group.node"
                  ]
                },
                "description": "ID of the node shared security group"
              },
              "oidc_provider_arn": {
                "expression": {
                  "references": [
                    "aws_iam_openid_connect_provider.oidc_provider[0].arn",
                    "aws_iam_openid_connect_provider.oidc_provider[0]",
                    "aws_iam_openid_connect_provider.oidc_provider"
                  ]
                },
                "description": "The ARN of the OIDC Provider if `enable_irsa = true`"
              },
              "self_managed_node_groups": {
                "expression": {
                  "references": [
                    "module.self_managed_node_group"
                  ]
                },
                "description": "Map of attribute maps for all self managed node groups created"
              }
            },
            "resources": [
              {
                "address": "aws_cloudwatch_log_group.this",
                "mode": "managed",
                "type": "aws_cloudwatch_log_group",
                "name": "this",
                "provider_config_key": "eks:aws",
                "expressions": {
                  "kms_key_id": {
                    "references": [
                      "var.cloudwatch_log_group_kms_key_id"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.cluster_name"
                    ]
                  },
                  "retention_in_days": {
                    "references": [
                      "var.cloudwatch_log_group_retention_in_days"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create",
                    "var.create_cloudwatch_log_group"
                  ]
                }
              },
              {
                "address": "aws_eks_addon.this",
                "mode": "managed",
                "type": "aws_eks_addon",
                "name": "this",
                "provider_config_key": "eks:aws",
                "expressions": {
                  "addon_name": {
                    "references": [
                      "each.value.name",
                      "each.value",
                      "each.key"
                    ]
                  },
                  "addon_version": {
                    "references": [
                      "each.value"
                    ]
                  },
                  "cluster_name": {
                    "references": [
                      "aws_eks_cluster.this[0].name",
                      "aws_eks_cluster.this[0]",
                      "aws_eks_cluster.this"
                    ]
                  },
                  "resolve_conflicts": {
                    "references": [
                      "each.value"
                    ]
                  },
                  "service_account_role_arn": {
                    "references": [
                      "each.value"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.tags"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.cluster_addons",
                    "var.create"
                  ]
                }
              },
              {
                "address": "aws_eks_cluster.this",
                "mode": "managed",
                "type": "aws_eks_cluster",
                "name": "this",
                "provider_config_key": "eks:aws",
                "expressions": {
                  "enabled_cluster_log_types": {
                    "references": [
                      "var.cluster_enabled_log_types"
                    ]
                  },
                  "kubernetes_network_config": [
                    {
                      "ip_family": {
                        "references": [
                          "var.cluster_ip_family"
                        ]
                      },
                      "service_ipv4_cidr": {
                        "references": [
                          "var.cluster_service_ipv4_cidr"
                        ]
                      }
                    }
                  ],
                  "name": {
                    "references": [
                      "var.cluster_name"
                    ]
                  },
                  "role_arn": {
                    "references": [
                      "aws_iam_role.this[0].arn",
                      "aws_iam_role.this[0]",
                      "aws_iam_role.this",
                      "var.iam_role_arn"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.tags",
                      "var.cluster_tags"
                    ]
                  },
                  "timeouts": {
                    "create": {
                      "references": [
                        "var.cluster_timeouts"
                      ]
                    },
                    "delete": {
                      "references": [
                        "var.cluster_timeouts"
                      ]
                    },
                    "update": {
                      "references": [
                        "var.cluster_timeouts"
                      ]
                    }
                  },
                  "version": {
                    "references": [
                      "var.cluster_version"
                    ]
                  },
                  "vpc_config": [
                    {
                      "endpoint_private_access": {
                        "references": [
                          "var.cluster_endpoint_private_access"
                        ]
                      },
                      "endpoint_public_access": {
                        "references": [
                          "var.cluster_endpoint_public_access"
                        ]
                      },
                      "public_access_cidrs": {
                        "references": [
                          "var.cluster_endpoint_public_access_cidrs"
                        ]
                      },
                      "security_group_ids": {
                        "references": [
                          "var.cluster_additional_security_group_ids",
                          "local.cluster_security_group_id"
                        ]
                      },
                      "subnet_ids": {
                        "references": [
                          "var.subnet_ids"
                        ]
                      }
                    }
                  ]
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create"
                  ]
                },
                "depends_on": [
                  "aws_iam_role_policy_attachment.this",
                  "aws_security_group_rule.cluster",
                  "aws_security_group_rule.node",
                  "aws_cloudwatch_log_group.this"
                ]
              },
              {
                "address": "aws_eks_identity_provider_config.this",
                "mode": "managed",
                "type": "aws_eks_identity_provider_config",
                "name": "this",
                "provider_config_key": "eks:aws",
                "expressions": {
                  "cluster_name": {
                    "references": [
                      "aws_eks_cluster.this[0].name",
                      "aws_eks_cluster.this[0]",
                      "aws_eks_cluster.this"
                    ]
                  },
                  "oidc": [
                    {
                      "client_id": {
                        "references": [
                          "each.value.client_id",
                          "each.value"
                        ]
                      },
                      "groups_claim": {
                        "references": [
                          "each.value"
                        ]
                      },
                      "groups_prefix": {
                        "references": [
                          "each.value"
                        ]
                      },
                      "identity_provider_config_name": {
                        "references": [
                          "each.value.identity_provider_config_name",
                          "each.value",
                          "each.key"
                        ]
                      },
                      "issuer_url": {
                        "references": [
                          "each.value.issuer_url",
                          "each.value"
                        ]
                      },
                      "required_claims": {
                        "references": [
                          "each.value"
                        ]
                      },
                      "username_claim": {
                        "references": [
                          "each.value"
                        ]
                      },
                      "username_prefix": {
                        "references": [
                          "each.value"
                        ]
                      }
                    }
                  ],
                  "tags": {
                    "references": [
                      "var.tags"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.cluster_identity_providers",
                    "var.create"
                  ]
                }
              },
              {
                "address": "aws_iam_openid_connect_provider.oidc_provider",
                "mode": "managed",
                "type": "aws_iam_openid_connect_provider",
                "name": "oidc_provider",
                "provider_config_key": "eks:aws",
                "expressions": {
                  "client_id_list": {
                    "references": [
                      "data.aws_partition.current.dns_suffix",
                      "data.aws_partition.current",
                      "var.openid_connect_audiences"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.cluster_name",
                      "var.tags"
                    ]
                  },
                  "thumbprint_list": {
                    "references": [
                      "data.tls_certificate.this[0].certificates[0].sha1_fingerprint",
                      "data.tls_certificate.this[0].certificates[0]",
                      "data.tls_certificate.this[0].certificates",
                      "data.tls_certificate.this[0]",
                      "data.tls_certificate.this"
                    ]
                  },
                  "url": {
                    "references": [
                      "aws_eks_cluster.this[0].identity[0].oidc[0].issuer",
                      "aws_eks_cluster.this[0].identity[0].oidc[0]",
                      "aws_eks_cluster.this[0].identity[0].oidc",
                      "aws_eks_cluster.this[0].identity[0]",
                      "aws_eks_cluster.this[0].identity",
                      "aws_eks_cluster.this[0]",
                      "aws_eks_cluster.this"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create",
                    "var.enable_irsa"
                  ]
                }
              },
              {
                "address": "aws_iam_policy.cni_ipv6_policy",
                "mode": "managed",
                "type": "aws_iam_policy",
                "name": "cni_ipv6_policy",
                "provider_config_key": "eks:aws",
                "expressions": {
                  "description": {
                    "constant_value": "IAM policy for EKS CNI to assign IPV6 addresses"
                  },
                  "name": {
                    "constant_value": "AmazonEKS_CNI_IPv6_Policy"
                  },
                  "policy": {
                    "references": [
                      "data.aws_iam_policy_document.cni_ipv6_policy[0].json",
                      "data.aws_iam_policy_document.cni_ipv6_policy[0]",
                      "data.aws_iam_policy_document.cni_ipv6_policy"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create",
                    "var.create_cni_ipv6_iam_policy"
                  ]
                }
              },
              {
                "address": "aws_iam_role.this",
                "mode": "managed",
                "type": "aws_iam_role",
                "name": "this",
                "provider_config_key": "eks:aws",
                "expressions": {
                  "assume_role_policy": {
                    "references": [
                      "data.aws_iam_policy_document.assume_role_policy[0].json",
                      "data.aws_iam_policy_document.assume_role_policy[0]",
                      "data.aws_iam_policy_document.assume_role_policy"
                    ]
                  },
                  "description": {
                    "references": [
                      "var.iam_role_description"
                    ]
                  },
                  "force_detach_policies": {
                    "constant_value": true
                  },
                  "name": {
                    "references": [
                      "var.iam_role_use_name_prefix",
                      "local.iam_role_name"
                    ]
                  },
                  "name_prefix": {
                    "references": [
                      "var.iam_role_use_name_prefix",
                      "local.iam_role_name",
                      "var.prefix_separator"
                    ]
                  },
                  "path": {
                    "references": [
                      "var.iam_role_path"
                    ]
                  },
                  "permissions_boundary": {
                    "references": [
                      "var.iam_role_permissions_boundary"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.tags",
                      "var.iam_role_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create",
                    "var.create_iam_role"
                  ]
                }
              },
              {
                "address": "aws_iam_role_policy_attachment.this",
                "mode": "managed",
                "type": "aws_iam_role_policy_attachment",
                "name": "this",
                "provider_config_key": "eks:aws",
                "expressions": {
                  "policy_arn": {
                    "references": [
                      "each.value"
                    ]
                  },
                  "role": {
                    "references": [
                      "aws_iam_role.this[0].name",
                      "aws_iam_role.this[0]",
                      "aws_iam_role.this"
                    ]
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.create",
                    "var.create_iam_role",
                    "local.policy_arn_prefix",
                    "local.policy_arn_prefix",
                    "var.iam_role_additional_policies"
                  ]
                }
              },
              {
                "address": "aws_security_group.cluster",
                "mode": "managed",
                "type": "aws_security_group",
                "name": "cluster",
                "provider_config_key": "eks:aws",
                "expressions": {
                  "description": {
                    "references": [
                      "var.cluster_security_group_description"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.cluster_security_group_use_name_prefix",
                      "local.cluster_sg_name"
                    ]
                  },
                  "name_prefix": {
                    "references": [
                      "var.cluster_security_group_use_name_prefix",
                      "local.cluster_sg_name",
                      "var.prefix_separator"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.tags",
                      "local.cluster_sg_name",
                      "var.cluster_security_group_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "var.vpc_id"
                    ]
                  }
                },
                "schema_version": 1,
                "count_expression": {
                  "references": [
                    "local.create_cluster_sg"
                  ]
                }
              },
              {
                "address": "aws_security_group.node",
                "mode": "managed",
                "type": "aws_security_group",
                "name": "node",
                "provider_config_key": "eks:aws",
                "expressions": {
                  "description": {
                    "references": [
                      "var.node_security_group_description"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.node_security_group_use_name_prefix",
                      "local.node_sg_name"
                    ]
                  },
                  "name_prefix": {
                    "references": [
                      "var.node_security_group_use_name_prefix",
                      "local.node_sg_name",
                      "var.prefix_separator"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.tags",
                      "local.node_sg_name",
                      "var.cluster_name",
                      "var.node_security_group_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "var.vpc_id"
                    ]
                  }
                },
                "schema_version": 1,
                "count_expression": {
                  "references": [
                    "local.create_node_sg"
                  ]
                }
              },
              {
                "address": "aws_security_group_rule.cluster",
                "mode": "managed",
                "type": "aws_security_group_rule",
                "name": "cluster",
                "provider_config_key": "eks:aws",
                "expressions": {
                  "cidr_blocks": {
                    "references": [
                      "each.value.cidr_blocks",
                      "each.value"
                    ]
                  },
                  "description": {
                    "references": [
                      "each.value.description",
                      "each.value"
                    ]
                  },
                  "from_port": {
                    "references": [
                      "each.value.from_port",
                      "each.value"
                    ]
                  },
                  "ipv6_cidr_blocks": {
                    "references": [
                      "each.value.ipv6_cidr_blocks",
                      "each.value"
                    ]
                  },
                  "prefix_list_ids": {
                    "references": [
                      "each.value.prefix_list_ids",
                      "each.value"
                    ]
                  },
                  "protocol": {
                    "references": [
                      "each.value.protocol",
                      "each.value"
                    ]
                  },
                  "security_group_id": {
                    "references": [
                      "aws_security_group.cluster[0].id",
                      "aws_security_group.cluster[0]",
                      "aws_security_group.cluster"
                    ]
                  },
                  "self": {
                    "references": [
                      "each.value.self",
                      "each.value"
                    ]
                  },
                  "source_security_group_id": {
                    "references": [
                      "each.value.source_security_group_id",
                      "each.value",
                      "each.value.source_node_security_group",
                      "each.value",
                      "local.node_security_group_id"
                    ]
                  },
                  "to_port": {
                    "references": [
                      "each.value.to_port",
                      "each.value"
                    ]
                  },
                  "type": {
                    "references": [
                      "each.value.type",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 2,
                "for_each_expression": {
                  "references": [
                    "local.cluster_security_group_rules",
                    "var.cluster_security_group_additional_rules",
                    "local.create_cluster_sg"
                  ]
                }
              },
              {
                "address": "aws_security_group_rule.node",
                "mode": "managed",
                "type": "aws_security_group_rule",
                "name": "node",
                "provider_config_key": "eks:aws",
                "expressions": {
                  "cidr_blocks": {
                    "references": [
                      "each.value.cidr_blocks",
                      "each.value"
                    ]
                  },
                  "description": {
                    "references": [
                      "each.value.description",
                      "each.value"
                    ]
                  },
                  "from_port": {
                    "references": [
                      "each.value.from_port",
                      "each.value"
                    ]
                  },
                  "ipv6_cidr_blocks": {
                    "references": [
                      "each.value.ipv6_cidr_blocks",
                      "each.value"
                    ]
                  },
                  "prefix_list_ids": {
                    "references": [
                      "each.value.prefix_list_ids",
                      "each.value"
                    ]
                  },
                  "protocol": {
                    "references": [
                      "each.value.protocol",
                      "each.value"
                    ]
                  },
                  "security_group_id": {
                    "references": [
                      "aws_security_group.node[0].id",
                      "aws_security_group.node[0]",
                      "aws_security_group.node"
                    ]
                  },
                  "self": {
                    "references": [
                      "each.value.self",
                      "each.value"
                    ]
                  },
                  "source_security_group_id": {
                    "references": [
                      "each.value.source_security_group_id",
                      "each.value",
                      "each.value.source_cluster_security_group",
                      "each.value",
                      "local.cluster_security_group_id"
                    ]
                  },
                  "to_port": {
                    "references": [
                      "each.value.to_port",
                      "each.value"
                    ]
                  },
                  "type": {
                    "references": [
                      "each.value.type",
                      "each.value"
                    ]
                  }
                },
                "schema_version": 2,
                "for_each_expression": {
                  "references": [
                    "local.node_security_group_rules",
                    "var.node_security_group_additional_rules",
                    "local.create_node_sg"
                  ]
                }
              },
              {
                "address": "data.aws_iam_policy_document.assume_role_policy",
                "mode": "data",
                "type": "aws_iam_policy_document",
                "name": "assume_role_policy",
                "provider_config_key": "eks:aws",
                "expressions": {
                  "statement": [
                    {
                      "actions": {
                        "constant_value": [
                          "sts:AssumeRole"
                        ]
                      },
                      "principals": [
                        {
                          "identifiers": {
                            "constant_value": [
                              "eks.amazonaws.com"
                            ]
                          },
                          "type": {
                            "constant_value": "Service"
                          }
                        }
                      ],
                      "sid": {
                        "constant_value": "EKSClusterAssumeRole"
                      }
                    }
                  ]
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create",
                    "var.create_iam_role"
                  ]
                }
              },
              {
                "address": "data.aws_iam_policy_document.cni_ipv6_policy",
                "mode": "data",
                "type": "aws_iam_policy_document",
                "name": "cni_ipv6_policy",
                "provider_config_key": "eks:aws",
                "expressions": {
                  "statement": [
                    {
                      "actions": {
                        "constant_value": [
                          "ec2:AssignIpv6Addresses",
                          "ec2:DescribeInstances",
                          "ec2:DescribeTags",
                          "ec2:DescribeNetworkInterfaces",
                          "ec2:DescribeInstanceTypes"
                        ]
                      },
                      "resources": {
                        "constant_value": [
                          "*"
                        ]
                      },
                      "sid": {
                        "constant_value": "AssignDescribe"
                      }
                    },
                    {
                      "actions": {
                        "constant_value": [
                          "ec2:CreateTags"
                        ]
                      },
                      "resources": {
                        "constant_value": [
                          "arn:aws:ec2:*:*:network-interface/*"
                        ]
                      },
                      "sid": {
                        "constant_value": "CreateTags"
                      }
                    }
                  ]
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create",
                    "var.create_cni_ipv6_iam_policy"
                  ]
                }
              },
              {
                "address": "data.aws_partition.current",
                "mode": "data",
                "type": "aws_partition",
                "name": "current",
                "provider_config_key": "eks:aws",
                "schema_version": 0
              },
              {
                "address": "data.tls_certificate.this",
                "mode": "data",
                "type": "tls_certificate",
                "name": "this",
                "provider_config_key": "eks:tls",
                "expressions": {
                  "url": {
                    "references": [
                      "aws_eks_cluster.this[0].identity[0].oidc[0].issuer",
                      "aws_eks_cluster.this[0].identity[0].oidc[0]",
                      "aws_eks_cluster.this[0].identity[0].oidc",
                      "aws_eks_cluster.this[0].identity[0]",
                      "aws_eks_cluster.this[0].identity",
                      "aws_eks_cluster.this[0]",
                      "aws_eks_cluster.this"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create",
                    "var.enable_irsa"
                  ]
                }
              }
            ],
            "module_calls": {
              "eks_managed_node_group": {
                "source": "./modules/eks-managed-node-group",
                "expressions": {
                  "ami_id": {
                    "references": [
                      "each.value.ami_id",
                      "each.value",
                      "var.eks_managed_node_group_defaults.ami_id",
                      "var.eks_managed_node_group_defaults"
                    ]
                  },
                  "ami_release_version": {
                    "references": [
                      "each.value.ami_release_version",
                      "each.value",
                      "var.eks_managed_node_group_defaults.ami_release_version",
                      "var.eks_managed_node_group_defaults"
                    ]
                  },
                  "ami_type": {
                    "references": [
                      "each.value.ami_type",
                      "each.value",
                      "var.eks_managed_node_group_defaults.ami_type",
                      "var.eks_managed_node_group_defaults"
                    ]
                  },
                  "block_device_mappings": {
                    "references": [
                      "each.value.block_device_mappings",
                      "each.value",
                      "var.eks_managed_node_group_defaults.block_device_mappings",
                      "var.eks_managed_node_group_defaults"
                    ]
                  },
                  "bootstrap_extra_args": {
                    "references": [
                      "each.value.bootstrap_extra_args",
                      "each.value",
                      "var.eks_managed_node_group_defaults.bootstrap_extra_args",
                      "var.eks_managed_node_group_defaults"
                    ]
                  },
                  "capacity_reservation_specification": {
                    "references": [
                      "each.value.capacity_reservation_specification",
                      "each.value",
                      "var.eks_managed_node_group_defaults.capacity_reservation_specification",
                      "var.eks_managed_node_group_defaults"
                    ]
                  },
                  "capacity_type": {
                    "references": [
                      "each.value.capacity_type",
                      "each.value",
                      "var.eks_managed_node_group_defaults.capacity_type",
                      "var.eks_managed_node_group_defaults"
                    ]
                  },
                  "cluster_auth_base64": {
                    "references": [
                      "aws_eks_cluster.this[0].certificate_authority[0].data",
                      "aws_eks_cluster.this[0].certificate_authority[0]",
                      "aws_eks_cluster.this[0].certificate_authority",
                      "aws_eks_cluster.this[0]",
                      "aws_eks_cluster.this"
                    ]
                  },
                  "cluster_endpoint": {
                    "references": [
                      "aws_eks_cluster.this[0].endpoint",
                      "aws_eks_cluster.this[0]",
                      "aws_eks_cluster.this"
                    ]
                  },
                  "cluster_ip_family": {
                    "references": [
                      "var.cluster_ip_family"
                    ]
                  },
                  "cluster_name": {
                    "references": [
                      "aws_eks_cluster.this[0].name",
                      "aws_eks_cluster.this[0]",
                      "aws_eks_cluster.this"
                    ]
                  },
                  "cluster_security_group_id": {
                    "references": [
                      "local.cluster_security_group_id"
                    ]
                  },
                  "cluster_service_ipv4_cidr": {
                    "references": [
                      "var.cluster_service_ipv4_cidr"
                    ]
                  },
                  "cluster_version": {
                    "references": [
                      "each.value.cluster_version",
                      "each.value",
                      "var.eks_managed_node_group_defaults.cluster_version",
                      "var.eks_managed_node_group_defaults",
                      "var.cluster_version"
                    ]
                  },
                  "cpu_options": {
                    "references": [
                      "each.value.cpu_options",
                      "each.value",
                      "var.eks_managed_node_group_defaults.cpu_options",
                      "var.eks_managed_node_group_defaults"
                    ]
                  },
                  "create_iam_role": {
                    "references": [
                      "each.value.create_iam_role",
                      "each.value",
                      "var.eks_managed_node_group_defaults.create_iam_role",
                      "var.eks_managed_node_group_defaults"
                    ]
                  },
                  "create_launch_template": {
                    "references": [
                      "each.value.create_launch_template",
                      "each.value",
                      "var.eks_managed_node_group_defaults.create_launch_template",
                      "var.eks_managed_node_group_defaults"
                    ]
                  },
                  "create_security_group": {
                    "references": [
                      "each.value.create_security_group",
                      "each.value",
                      "var.eks_managed_node_group_defaults.create_security_group",
                      "var.eks_managed_node_group_defaults"
                    ]
                  },
                  "credit_specification": {
                    "references": [
                      "each.value.credit_specification",
                      "each.value",
                      "var.eks_managed_node_group_defaults.credit_specification",
                      "var.eks_managed_node_group_defaults"
                    ]
                  },
                  "desired_size": {
                    "references": [
                      "each.value.desired_size",
                      "each.value",
                      "var.eks_managed_node_group_defaults.desired_size",
                      "var.eks_managed_node_group_defaults"
                    ]
                  },
                  "disable_api_termination": {
                    "references": [
                      "each.value.disable_api_termination",
                      "each.value",
                      "var.eks_managed_node_group_defaults.disable_api_termination",
                      "var.eks_managed_node_group_defaults"
                    ]
                  },
                  "disk_size": {
                    "references": [
                      "each.value.disk_size",
                      "each.value",
                      "var.eks_managed_node_group_defaults.disk_size",
                      "var.eks_managed_node_group_defaults"
                    ]
                  },
                  "ebs_optimized": {
                    "references": [
                      "each.value.ebs_optimized",
                      "each.value",
                      "var.eks_managed_node_group_defaults.ebs_optimized",
                      "var.eks_managed_node_group_defaults"
                    ]
                  },
                  "elastic_gpu_specifications": {
                    "references": [
                      "each.value.elastic_gpu_specifications",
                      "each.value",
                      "var.eks_managed_node_group_defaults.elastic_gpu_specifications",
                      "var.eks_managed_node_group_defaults"
                    ]
                  },
                  "elastic_inference_accelerator": {
                    "references": [
                      "each.value.elastic_inference_accelerator",
                      "each.value",
                      "var.eks_managed_node_group_defaults.elastic_inference_accelerator",
                      "var.eks_managed_node_group_defaults"
                    ]
                  },
                  "enable_bootstrap_user_data": {
                    "references": [
                      "each.value.enable_bootstrap_user_data",
                      "each.value",
                      "var.eks_managed_node_group_defaults.enable_bootstrap_user_data",
                      "var.eks_managed_node_group_defaults"
                    ]
                  },
                  "enable_monitoring": {
                    "references": [
                      "each.value.enable_monitoring",
                      "each.value",
                      "var.eks_managed_node_group_defaults.enable_monitoring",
                      "var.eks_managed_node_group_defaults"
                    ]
                  },
                  "enclave_options": {
                    "references": [
                      "each.value.enclave_options",
                      "each.value",
                      "var.eks_managed_node_group_defaults.enclave_options",
                      "var.eks_managed_node_group_defaults"
                    ]
                  },
                  "force_update_version": {
                    "references": [
                      "each.value.force_update_version",
                      "each.value",
                      "var.eks_managed_node_group_defaults.force_update_version",
                      "var.eks_managed_node_group_defaults"
                    ]
                  },
                  "iam_role_additional_policies": {
                    "references": [
                      "each.value.iam_role_additional_policies",
                      "each.value",
                      "var.eks_managed_node_group_defaults.iam_role_additional_policies",
                      "var.eks_managed_node_group_defaults"
                    ]
                  },
                  "iam_role_arn": {
                    "references": [
                      "each.value.iam_role_arn",
                      "each.value",
                      "var.eks_managed_node_group_defaults.iam_role_arn",
                      "var.eks_managed_node_group_defaults"
                    ]
                  },
                  "iam_role_attach_cni_policy": {
                    "references": [
                      "each.value.iam_role_attach_cni_policy",
                      "each.value",
                      "var.eks_managed_node_group_defaults.iam_role_attach_cni_policy",
                      "var.eks_managed_node_group_defaults"
                    ]
                  },
                  "iam_role_description": {
                    "references": [
                      "each.value.iam_role_description",
                      "each.value",
                      "var.eks_managed_node_group_defaults.iam_role_description",
                      "var.eks_managed_node_group_defaults"
                    ]
                  },
                  "iam_role_name": {
                    "references": [
                      "each.value.iam_role_name",
                      "each.value",
                      "var.eks_managed_node_group_defaults.iam_role_name",
                      "var.eks_managed_node_group_defaults"
                    ]
                  },
                  "iam_role_path": {
                    "references": [
                      "each.value.iam_role_path",
                      "each.value",
                      "var.eks_managed_node_group_defaults.iam_role_path",
                      "var.eks_managed_node_group_defaults"
                    ]
                  },
                  "iam_role_permissions_boundary": {
                    "references": [
                      "each.value.iam_role_permissions_boundary",
                      "each.value",
                      "var.eks_managed_node_group_defaults.iam_role_permissions_boundary",
                      "var.eks_managed_node_group_defaults"
                    ]
                  },
                  "iam_role_tags": {
                    "references": [
                      "each.value.iam_role_tags",
                      "each.value",
                      "var.eks_managed_node_group_defaults.iam_role_tags",
                      "var.eks_managed_node_group_defaults"
                    ]
                  },
                  "iam_role_use_name_prefix": {
                    "references": [
                      "each.value.iam_role_use_name_prefix",
                      "each.value",
                      "var.eks_managed_node_group_defaults.iam_role_use_name_prefix",
                      "var.eks_managed_node_group_defaults"
                    ]
                  },
                  "instance_market_options": {
                    "references": [
                      "each.value.instance_market_options",
                      "each.value",
                      "var.eks_managed_node_group_defaults.instance_market_options",
                      "var.eks_managed_node_group_defaults"
                    ]
                  },
                  "instance_types": {
                    "references": [
                      "each.value.instance_types",
                      "each.value",
                      "var.eks_managed_node_group_defaults.instance_types",
                      "var.eks_managed_node_group_defaults"
                    ]
                  },
                  "kernel_id": {
                    "references": [
                      "each.value.kernel_id",
                      "each.value",
                      "var.eks_managed_node_group_defaults.kernel_id",
                      "var.eks_managed_node_group_defaults"
                    ]
                  },
                  "key_name": {
                    "references": [
                      "each.value.key_name",
                      "each.value",
                      "var.eks_managed_node_group_defaults.key_name",
                      "var.eks_managed_node_group_defaults"
                    ]
                  },
                  "labels": {
                    "references": [
                      "each.value.labels",
                      "each.value",
                      "var.eks_managed_node_group_defaults.labels",
                      "var.eks_managed_node_group_defaults"
                    ]
                  },
                  "launch_template_default_version": {
                    "references": [
                      "each.value.launch_template_default_version",
                      "each.value",
                      "var.eks_managed_node_group_defaults.launch_template_default_version",
                      "var.eks_managed_node_group_defaults"
                    ]
                  },
                  "launch_template_description": {
                    "references": [
                      "each.value.launch_template_description",
                      "each.value",
                      "var.eks_managed_node_group_defaults.launch_template_description",
                      "var.eks_managed_node_group_defaults",
                      "each.value.name",
                      "each.value",
                      "each.key"
                    ]
                  },
                  "launch_template_name": {
                    "references": [
                      "each.value.launch_template_name",
                      "each.value",
                      "each.key"
                    ]
                  },
                  "launch_template_use_name_prefix": {
                    "references": [
                      "each.value.launch_template_use_name_prefix",
                      "each.value",
                      "var.eks_managed_node_group_defaults.launch_template_use_name_prefix",
                      "var.eks_managed_node_group_defaults"
                    ]
                  },
                  "launch_template_version": {
                    "references": [
                      "each.value.launch_template_version",
                      "each.value",
                      "var.eks_managed_node_group_defaults.launch_template_version",
                      "var.eks_managed_node_group_defaults"
                    ]
                  },
                  "license_specifications": {
                    "references": [
                      "each.value.license_specifications",
                      "each.value",
                      "var.eks_managed_node_group_defaults.license_specifications",
                      "var.eks_managed_node_group_defaults"
                    ]
                  },
                  "max_size": {
                    "references": [
                      "each.value.max_size",
                      "each.value",
                      "var.eks_managed_node_group_defaults.max_size",
                      "var.eks_managed_node_group_defaults"
                    ]
                  },
                  "metadata_options": {
                    "references": [
                      "each.value.metadata_options",
                      "each.value",
                      "var.eks_managed_node_group_defaults.metadata_options",
                      "var.eks_managed_node_group_defaults",
                      "local.metadata_options"
                    ]
                  },
                  "min_size": {
                    "references": [
                      "each.value.min_size",
                      "each.value",
                      "var.eks_managed_node_group_defaults.min_size",
                      "var.eks_managed_node_group_defaults"
                    ]
                  },
                  "name": {
                    "references": [
                      "each.value.name",
                      "each.value",
                      "each.key"
                    ]
                  },
                  "network_interfaces": {
                    "references": [
                      "each.value.network_interfaces",
                      "each.value",
                      "var.eks_managed_node_group_defaults.network_interfaces",
                      "var.eks_managed_node_group_defaults"
                    ]
                  },
                  "placement": {
                    "references": [
                      "each.value.placement",
                      "each.value",
                      "var.eks_managed_node_group_defaults.placement",
                      "var.eks_managed_node_group_defaults"
                    ]
                  },
                  "platform": {
                    "references": [
                      "each.value.platform",
                      "each.value",
                      "var.eks_managed_node_group_defaults.platform",
                      "var.eks_managed_node_group_defaults"
                    ]
                  },
                  "post_bootstrap_user_data": {
                    "references": [
                      "each.value.post_bootstrap_user_data",
                      "each.value",
                      "var.eks_managed_node_group_defaults.post_bootstrap_user_data",
                      "var.eks_managed_node_group_defaults"
                    ]
                  },
                  "pre_bootstrap_user_data": {
                    "references": [
                      "each.value.pre_bootstrap_user_data",
                      "each.value",
                      "var.eks_managed_node_group_defaults.pre_bootstrap_user_data",
                      "var.eks_managed_node_group_defaults"
                    ]
                  },
                  "ram_disk_id": {
                    "references": [
                      "each.value.ram_disk_id",
                      "each.value",
                      "var.eks_managed_node_group_defaults.ram_disk_id",
                      "var.eks_managed_node_group_defaults"
                    ]
                  },
                  "remote_access": {
                    "references": [
                      "each.value.remote_access",
                      "each.value",
                      "var.eks_managed_node_group_defaults.remote_access",
                      "var.eks_managed_node_group_defaults"
                    ]
                  },
                  "security_group_description": {
                    "references": [
                      "each.value.security_group_description",
                      "each.value",
                      "var.eks_managed_node_group_defaults.security_group_description",
                      "var.eks_managed_node_group_defaults"
                    ]
                  },
                  "security_group_name": {
                    "references": [
                      "each.value.security_group_name",
                      "each.value",
                      "var.eks_managed_node_group_defaults.security_group_name",
                      "var.eks_managed_node_group_defaults"
                    ]
                  },
                  "security_group_rules": {
                    "references": [
                      "each.value.security_group_rules",
                      "each.value",
                      "var.eks_managed_node_group_defaults.security_group_rules",
                      "var.eks_managed_node_group_defaults"
                    ]
                  },
                  "security_group_tags": {
                    "references": [
                      "each.value.security_group_tags",
                      "each.value",
                      "var.eks_managed_node_group_defaults.security_group_tags",
                      "var.eks_managed_node_group_defaults"
                    ]
                  },
                  "security_group_use_name_prefix": {
                    "references": [
                      "each.value.security_group_use_name_prefix",
                      "each.value",
                      "var.eks_managed_node_group_defaults.security_group_use_name_prefix",
                      "var.eks_managed_node_group_defaults"
                    ]
                  },
                  "subnet_ids": {
                    "references": [
                      "each.value.subnet_ids",
                      "each.value",
                      "var.eks_managed_node_group_defaults.subnet_ids",
                      "var.eks_managed_node_group_defaults",
                      "var.subnet_ids"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.tags",
                      "each.value.tags",
                      "each.value",
                      "var.eks_managed_node_group_defaults.tags",
                      "var.eks_managed_node_group_defaults"
                    ]
                  },
                  "taints": {
                    "references": [
                      "each.value.taints",
                      "each.value",
                      "var.eks_managed_node_group_defaults.taints",
                      "var.eks_managed_node_group_defaults"
                    ]
                  },
                  "timeouts": {
                    "references": [
                      "each.value.timeouts",
                      "each.value",
                      "var.eks_managed_node_group_defaults.timeouts",
                      "var.eks_managed_node_group_defaults"
                    ]
                  },
                  "update_config": {
                    "references": [
                      "each.value.update_config",
                      "each.value",
                      "var.eks_managed_node_group_defaults.update_config",
                      "var.eks_managed_node_group_defaults"
                    ]
                  },
                  "update_launch_template_default_version": {
                    "references": [
                      "each.value.update_launch_template_default_version",
                      "each.value",
                      "var.eks_managed_node_group_defaults.update_launch_template_default_version",
                      "var.eks_managed_node_group_defaults"
                    ]
                  },
                  "use_name_prefix": {
                    "references": [
                      "each.value.use_name_prefix",
                      "each.value",
                      "var.eks_managed_node_group_defaults.use_name_prefix",
                      "var.eks_managed_node_group_defaults"
                    ]
                  },
                  "user_data_template_path": {
                    "references": [
                      "each.value.user_data_template_path",
                      "each.value",
                      "var.eks_managed_node_group_defaults.user_data_template_path",
                      "var.eks_managed_node_group_defaults"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "each.value.vpc_id",
                      "each.value",
                      "var.eks_managed_node_group_defaults.vpc_id",
                      "var.eks_managed_node_group_defaults",
                      "var.vpc_id"
                    ]
                  },
                  "vpc_security_group_ids": {
                    "references": [
                      "aws_security_group.node[0].id",
                      "aws_security_group.node[0]",
                      "aws_security_group.node",
                      "each.value.vpc_security_group_ids",
                      "each.value",
                      "var.eks_managed_node_group_defaults.vpc_security_group_ids",
                      "var.eks_managed_node_group_defaults"
                    ]
                  }
                },
                "for_each_expression": {
                  "references": [
                    "var.eks_managed_node_groups",
                    "var.create"
                  ]
                },
                "module": {
                  "outputs": {
                    "iam_role_arn": {
                      "expression": {
                        "references": [
                          "aws_iam_role.this[0].arn",
                          "aws_iam_role.this[0]",
                          "aws_iam_role.this"
                        ]
                      },
                      "description": "The Amazon Resource Name (ARN) specifying the IAM role"
                    },
                    "iam_role_name": {
                      "expression": {
                        "references": [
                          "aws_iam_role.this[0].name",
                          "aws_iam_role.this[0]",
                          "aws_iam_role.this"
                        ]
                      },
                      "description": "The name of the IAM role"
                    },
                    "iam_role_unique_id": {
                      "expression": {
                        "references": [
                          "aws_iam_role.this[0].unique_id",
                          "aws_iam_role.this[0]",
                          "aws_iam_role.this"
                        ]
                      },
                      "description": "Stable and unique string identifying the IAM role"
                    },
                    "launch_template_arn": {
                      "expression": {
                        "references": [
                          "aws_launch_template.this[0].arn",
                          "aws_launch_template.this[0]",
                          "aws_launch_template.this"
                        ]
                      },
                      "description": "The ARN of the launch template"
                    },
                    "launch_template_id": {
                      "expression": {
                        "references": [
                          "aws_launch_template.this[0].id",
                          "aws_launch_template.this[0]",
                          "aws_launch_template.this"
                        ]
                      },
                      "description": "The ID of the launch template"
                    },
                    "launch_template_latest_version": {
                      "expression": {
                        "references": [
                          "aws_launch_template.this[0].latest_version",
                          "aws_launch_template.this[0]",
                          "aws_launch_template.this"
                        ]
                      },
                      "description": "The latest version of the launch template"
                    },
                    "node_group_arn": {
                      "expression": {
                        "references": [
                          "aws_eks_node_group.this[0].arn",
                          "aws_eks_node_group.this[0]",
                          "aws_eks_node_group.this"
                        ]
                      },
                      "description": "Amazon Resource Name (ARN) of the EKS Node Group"
                    },
                    "node_group_id": {
                      "expression": {
                        "references": [
                          "aws_eks_node_group.this[0].id",
                          "aws_eks_node_group.this[0]",
                          "aws_eks_node_group.this"
                        ]
                      },
                      "description": "EKS Cluster name and EKS Node Group name separated by a colon (`:`)"
                    },
                    "node_group_resources": {
                      "expression": {
                        "references": [
                          "aws_eks_node_group.this[0].resources",
                          "aws_eks_node_group.this[0]",
                          "aws_eks_node_group.this"
                        ]
                      },
                      "description": "List of objects containing information about underlying resources"
                    },
                    "node_group_status": {
                      "expression": {
                        "references": [
                          "aws_eks_node_group.this[0].arn",
                          "aws_eks_node_group.this[0]",
                          "aws_eks_node_group.this"
                        ]
                      },
                      "description": "Status of the EKS Node Group"
                    },
                    "security_group_arn": {
                      "expression": {
                        "references": [
                          "aws_security_group.this[0].arn",
                          "aws_security_group.this[0]",
                          "aws_security_group.this"
                        ]
                      },
                      "description": "Amazon Resource Name (ARN) of the security group"
                    },
                    "security_group_id": {
                      "expression": {
                        "references": [
                          "aws_security_group.this[0].id",
                          "aws_security_group.this[0]",
                          "aws_security_group.this"
                        ]
                      },
                      "description": "ID of the security group"
                    }
                  },
                  "resources": [
                    {
                      "address": "aws_eks_node_group.this",
                      "mode": "managed",
                      "type": "aws_eks_node_group",
                      "name": "this",
                      "provider_config_key": "eks_managed_node_group:aws",
                      "expressions": {
                        "ami_type": {
                          "references": [
                            "var.ami_id",
                            "var.ami_type"
                          ]
                        },
                        "capacity_type": {
                          "references": [
                            "var.capacity_type"
                          ]
                        },
                        "cluster_name": {
                          "references": [
                            "var.cluster_name"
                          ]
                        },
                        "disk_size": {
                          "references": [
                            "local.use_custom_launch_template",
                            "var.disk_size"
                          ]
                        },
                        "force_update_version": {
                          "references": [
                            "var.force_update_version"
                          ]
                        },
                        "instance_types": {
                          "references": [
                            "var.instance_types"
                          ]
                        },
                        "labels": {
                          "references": [
                            "var.labels"
                          ]
                        },
                        "node_group_name": {
                          "references": [
                            "var.use_name_prefix",
                            "var.name"
                          ]
                        },
                        "node_group_name_prefix": {
                          "references": [
                            "var.use_name_prefix",
                            "var.name"
                          ]
                        },
                        "node_role_arn": {
                          "references": [
                            "var.create_iam_role",
                            "aws_iam_role.this[0].arn",
                            "aws_iam_role.this[0]",
                            "aws_iam_role.this",
                            "var.iam_role_arn"
                          ]
                        },
                        "release_version": {
                          "references": [
                            "var.ami_id",
                            "var.ami_release_version"
                          ]
                        },
                        "scaling_config": [
                          {
                            "desired_size": {
                              "references": [
                                "var.desired_size"
                              ]
                            },
                            "max_size": {
                              "references": [
                                "var.max_size"
                              ]
                            },
                            "min_size": {
                              "references": [
                                "var.min_size"
                              ]
                            }
                          }
                        ],
                        "subnet_ids": {
                          "references": [
                            "var.subnet_ids"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.tags",
                            "var.name"
                          ]
                        },
                        "timeouts": {
                          "create": {
                            "references": [
                              "var.timeouts"
                            ]
                          },
                          "delete": {
                            "references": [
                              "var.timeouts"
                            ]
                          },
                          "update": {
                            "references": [
                              "var.timeouts"
                            ]
                          }
                        },
                        "version": {
                          "references": [
                            "var.ami_id",
                            "var.cluster_version"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "var.create"
                        ]
                      }
                    },
                    {
                      "address": "aws_iam_role.this",
                      "mode": "managed",
                      "type": "aws_iam_role",
                      "name": "this",
                      "provider_config_key": "eks_managed_node_group:aws",
                      "expressions": {
                        "assume_role_policy": {
                          "references": [
                            "data.aws_iam_policy_document.assume_role_policy[0].json",
                            "data.aws_iam_policy_document.assume_role_policy[0]",
                            "data.aws_iam_policy_document.assume_role_policy"
                          ]
                        },
                        "description": {
                          "references": [
                            "var.iam_role_description"
                          ]
                        },
                        "force_detach_policies": {
                          "constant_value": true
                        },
                        "name": {
                          "references": [
                            "var.iam_role_use_name_prefix",
                            "local.iam_role_name"
                          ]
                        },
                        "name_prefix": {
                          "references": [
                            "var.iam_role_use_name_prefix",
                            "local.iam_role_name"
                          ]
                        },
                        "path": {
                          "references": [
                            "var.iam_role_path"
                          ]
                        },
                        "permissions_boundary": {
                          "references": [
                            "var.iam_role_permissions_boundary"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.tags",
                            "var.iam_role_tags"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "var.create",
                          "var.create_iam_role"
                        ]
                      }
                    },
                    {
                      "address": "aws_iam_role_policy_attachment.this",
                      "mode": "managed",
                      "type": "aws_iam_role_policy_attachment",
                      "name": "this",
                      "provider_config_key": "eks_managed_node_group:aws",
                      "expressions": {
                        "policy_arn": {
                          "references": [
                            "each.value"
                          ]
                        },
                        "role": {
                          "references": [
                            "aws_iam_role.this[0].name",
                            "aws_iam_role.this[0]",
                            "aws_iam_role.this"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "for_each_expression": {
                        "references": [
                          "var.create",
                          "var.create_iam_role",
                          "local.iam_role_policy_prefix",
                          "local.iam_role_policy_prefix",
                          "var.iam_role_attach_cni_policy",
                          "local.cni_policy",
                          "var.iam_role_additional_policies"
                        ]
                      }
                    },
                    {
                      "address": "aws_launch_template.this",
                      "mode": "managed",
                      "type": "aws_launch_template",
                      "name": "this",
                      "provider_config_key": "eks_managed_node_group:aws",
                      "expressions": {
                        "default_version": {
                          "references": [
                            "var.launch_template_default_version"
                          ]
                        },
                        "description": {
                          "references": [
                            "var.launch_template_description"
                          ]
                        },
                        "disable_api_termination": {
                          "references": [
                            "var.disable_api_termination"
                          ]
                        },
                        "ebs_optimized": {
                          "references": [
                            "var.ebs_optimized"
                          ]
                        },
                        "image_id": {
                          "references": [
                            "var.ami_id"
                          ]
                        },
                        "kernel_id": {
                          "references": [
                            "var.kernel_id"
                          ]
                        },
                        "key_name": {
                          "references": [
                            "var.key_name"
                          ]
                        },
                        "name": {
                          "references": [
                            "var.launch_template_use_name_prefix",
                            "local.launch_template_name_int"
                          ]
                        },
                        "name_prefix": {
                          "references": [
                            "var.launch_template_use_name_prefix",
                            "local.launch_template_name_int"
                          ]
                        },
                        "ram_disk_id": {
                          "references": [
                            "var.ram_disk_id"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.tags"
                          ]
                        },
                        "update_default_version": {
                          "references": [
                            "var.update_launch_template_default_version"
                          ]
                        },
                        "user_data": {
                          "references": [
                            "module.user_data.user_data",
                            "module.user_data"
                          ]
                        },
                        "vpc_security_group_ids": {
                          "references": [
                            "aws_security_group.this[0].id",
                            "aws_security_group.this[0]",
                            "aws_security_group.this",
                            "var.vpc_security_group_ids"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "var.create",
                          "var.create_launch_template"
                        ]
                      },
                      "depends_on": [
                        "aws_security_group_rule.this",
                        "aws_iam_role_policy_attachment.this"
                      ]
                    },
                    {
                      "address": "aws_security_group.this",
                      "mode": "managed",
                      "type": "aws_security_group",
                      "name": "this",
                      "provider_config_key": "eks_managed_node_group:aws",
                      "expressions": {
                        "description": {
                          "references": [
                            "var.security_group_description"
                          ]
                        },
                        "name": {
                          "references": [
                            "var.security_group_use_name_prefix",
                            "local.security_group_name"
                          ]
                        },
                        "name_prefix": {
                          "references": [
                            "var.security_group_use_name_prefix",
                            "local.security_group_name"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.tags",
                            "local.security_group_name",
                            "var.security_group_tags"
                          ]
                        },
                        "vpc_id": {
                          "references": [
                            "var.vpc_id"
                          ]
                        }
                      },
                      "schema_version": 1,
                      "count_expression": {
                        "references": [
                          "local.create_security_group"
                        ]
                      }
                    },
                    {
                      "address": "aws_security_group_rule.this",
                      "mode": "managed",
                      "type": "aws_security_group_rule",
                      "name": "this",
                      "provider_config_key": "eks_managed_node_group:aws",
                      "expressions": {
                        "cidr_blocks": {
                          "references": [
                            "each.value.cidr_blocks",
                            "each.value"
                          ]
                        },
                        "description": {
                          "references": [
                            "each.value.description",
                            "each.value"
                          ]
                        },
                        "from_port": {
                          "references": [
                            "each.value.from_port",
                            "each.value"
                          ]
                        },
                        "ipv6_cidr_blocks": {
                          "references": [
                            "each.value.ipv6_cidr_blocks",
                            "each.value"
                          ]
                        },
                        "prefix_list_ids": {
                          "references": [
                            "each.value.prefix_list_ids",
                            "each.value"
                          ]
                        },
                        "protocol": {
                          "references": [
                            "each.value.protocol",
                            "each.value"
                          ]
                        },
                        "security_group_id": {
                          "references": [
                            "aws_security_group.this[0].id",
                            "aws_security_group.this[0]",
                            "aws_security_group.this"
                          ]
                        },
                        "self": {
                          "references": [
                            "each.value.self",
                            "each.value"
                          ]
                        },
                        "source_security_group_id": {
                          "references": [
                            "each.value.source_security_group_id",
                            "each.value",
                            "each.value.source_cluster_security_group",
                            "each.value",
                            "var.cluster_security_group_id"
                          ]
                        },
                        "to_port": {
                          "references": [
                            "each.value.to_port",
                            "each.value"
                          ]
                        },
                        "type": {
                          "references": [
                            "each.value.type",
                            "each.value"
                          ]
                        }
                      },
                      "schema_version": 2,
                      "for_each_expression": {
                        "references": [
                          "var.security_group_rules",
                          "local.create_security_group"
                        ]
                      }
                    },
                    {
                      "address": "data.aws_caller_identity.current",
                      "mode": "data",
                      "type": "aws_caller_identity",
                      "name": "current",
                      "provider_config_key": "eks_managed_node_group:aws",
                      "schema_version": 0
                    },
                    {
                      "address": "data.aws_iam_policy_document.assume_role_policy",
                      "mode": "data",
                      "type": "aws_iam_policy_document",
                      "name": "assume_role_policy",
                      "provider_config_key": "eks_managed_node_group:aws",
                      "expressions": {
                        "statement": [
                          {
                            "actions": {
                              "constant_value": [
                                "sts:AssumeRole"
                              ]
                            },
                            "principals": [
                              {
                                "identifiers": {
                                  "references": [
                                    "data.aws_partition.current.dns_suffix",
                                    "data.aws_partition.current"
                                  ]
                                },
                                "type": {
                                  "constant_value": "Service"
                                }
                              }
                            ],
                            "sid": {
                              "constant_value": "EKSNodeAssumeRole"
                            }
                          }
                        ]
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "var.create",
                          "var.create_iam_role"
                        ]
                      }
                    },
                    {
                      "address": "data.aws_partition.current",
                      "mode": "data",
                      "type": "aws_partition",
                      "name": "current",
                      "provider_config_key": "eks_managed_node_group:aws",
                      "schema_version": 0
                    }
                  ],
                  "module_calls": {
                    "user_data": {
                      "source": "../_user_data",
                      "expressions": {
                        "bootstrap_extra_args": {
                          "references": [
                            "var.bootstrap_extra_args"
                          ]
                        },
                        "cluster_auth_base64": {
                          "references": [
                            "var.cluster_auth_base64"
                          ]
                        },
                        "cluster_endpoint": {
                          "references": [
                            "var.cluster_endpoint"
                          ]
                        },
                        "cluster_name": {
                          "references": [
                            "var.cluster_name"
                          ]
                        },
                        "cluster_service_ipv4_cidr": {
                          "references": [
                            "var.cluster_service_ipv4_cidr"
                          ]
                        },
                        "create": {
                          "references": [
                            "var.create"
                          ]
                        },
                        "enable_bootstrap_user_data": {
                          "references": [
                            "var.enable_bootstrap_user_data"
                          ]
                        },
                        "platform": {
                          "references": [
                            "var.platform"
                          ]
                        },
                        "post_bootstrap_user_data": {
                          "references": [
                            "var.post_bootstrap_user_data"
                          ]
                        },
                        "pre_bootstrap_user_data": {
                          "references": [
                            "var.pre_bootstrap_user_data"
                          ]
                        },
                        "user_data_template_path": {
                          "references": [
                            "var.user_data_template_path"
                          ]
                        }
                      },
                      "module": {
                        "outputs": {
                          "user_data": {
                            "expression": {
                              "references": [
                                "local.platform",
                                "var.platform"
                              ]
                            },
                            "description": "Base64 encoded user data rendered for the provided inputs"
                          }
                        },
                        "resources": [
                          {
                            "address": "data.cloudinit_config.linux_eks_managed_node_group",
                            "mode": "data",
                            "type": "cloudinit_config",
                            "name": "linux_eks_managed_node_group",
                            "provider_config_key": "user_data:cloudinit",
                            "expressions": {
                              "base64_encode": {
                                "constant_value": true
                              },
                              "boundary": {
                                "constant_value": "//"
                              },
                              "gzip": {
                                "constant_value": false
                              },
                              "part": [
                                {
                                  "content": {
                                    "references": [
                                      "var.pre_bootstrap_user_data"
                                    ]
                                  },
                                  "content_type": {
                                    "constant_value": "text/x-shellscript"
                                  }
                                }
                              ]
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "var.create",
                                "var.platform",
                                "var.is_eks_managed_node_group",
                                "var.enable_bootstrap_user_data",
                                "var.pre_bootstrap_user_data",
                                "var.user_data_template_path"
                              ]
                            }
                          }
                        ],
                        "variables": {
                          "bootstrap_extra_args": {
                            "default": "",
                            "description": "Additional arguments passed to the bootstrap script. When `platform` = `bottlerocket`; these are additional [settings](https://github.com/bottlerocket-os/bottlerocket#settings) that are provided to the Bottlerocket user data"
                          },
                          "cluster_auth_base64": {
                            "default": "",
                            "description": "Base64 encoded CA of associated EKS cluster"
                          },
                          "cluster_endpoint": {
                            "default": "",
                            "description": "Endpoint of associated EKS cluster"
                          },
                          "cluster_name": {
                            "default": "",
                            "description": "Name of the EKS cluster"
                          },
                          "cluster_service_ipv4_cidr": {
                            "default": null,
                            "description": "The CIDR block to assign Kubernetes service IP addresses from. If you don't specify a block, Kubernetes assigns addresses from either the 10.100.0.0/16 or 172.20.0.0/16 CIDR blocks"
                          },
                          "create": {
                            "default": true,
                            "description": "Determines whether to create user-data or not"
                          },
                          "enable_bootstrap_user_data": {
                            "default": false,
                            "description": "Determines whether the bootstrap configurations are populated within the user data template"
                          },
                          "is_eks_managed_node_group": {
                            "default": true,
                            "description": "Determines whether the user data is used on nodes in an EKS managed node group. Used to determine if user data will be appended or not"
                          },
                          "platform": {
                            "default": "linux",
                            "description": "Identifies if the OS platform is `bottlerocket`, `linux`, or `windows` based"
                          },
                          "post_bootstrap_user_data": {
                            "default": "",
                            "description": "User data that is appended to the user data script after of the EKS bootstrap script. Not used when `platform` = `bottlerocket`"
                          },
                          "pre_bootstrap_user_data": {
                            "default": "",
                            "description": "User data that is injected into the user data script ahead of the EKS bootstrap script. Not used when `platform` = `bottlerocket`"
                          },
                          "user_data_template_path": {
                            "default": "",
                            "description": "Path to a local, custom user data template file to use when rendering user data"
                          }
                        }
                      }
                    }
                  },
                  "variables": {
                    "ami_id": {
                      "default": "",
                      "description": "The AMI from which to launch the instance. If not supplied, EKS will use its own default image"
                    },
                    "ami_release_version": {
                      "default": null,
                      "description": "AMI version of the EKS Node Group. Defaults to latest version for Kubernetes version"
                    },
                    "ami_type": {
                      "default": null,
                      "description": "Type of Amazon Machine Image (AMI) associated with the EKS Node Group. Valid values are `AL2_x86_64`, `AL2_x86_64_GPU`, `AL2_ARM_64`, `CUSTOM`, `BOTTLEROCKET_ARM_64`, `BOTTLEROCKET_x86_64`"
                    },
                    "block_device_mappings": {
                      "default": {},
                      "description": "Specify volumes to attach to the instance besides the volumes specified by the AMI"
                    },
                    "bootstrap_extra_args": {
                      "default": "",
                      "description": "Additional arguments passed to the bootstrap script. When `platform` = `bottlerocket`; these are additional [settings](https://github.com/bottlerocket-os/bottlerocket#settings) that are provided to the Bottlerocket user data"
                    },
                    "capacity_reservation_specification": {
                      "default": null,
                      "description": "Targeting for EC2 capacity reservations"
                    },
                    "capacity_type": {
                      "default": "ON_DEMAND",
                      "description": "Type of capacity associated with the EKS Node Group. Valid values: `ON_DEMAND`, `SPOT`"
                    },
                    "cluster_auth_base64": {
                      "default": "",
                      "description": "Base64 encoded CA of associated EKS cluster"
                    },
                    "cluster_endpoint": {
                      "default": "",
                      "description": "Endpoint of associated EKS cluster"
                    },
                    "cluster_ip_family": {
                      "default": null,
                      "description": "The IP family used to assign Kubernetes pod and service addresses. Valid values are `ipv4` (default) and `ipv6`"
                    },
                    "cluster_name": {
                      "default": null,
                      "description": "Name of associated EKS cluster"
                    },
                    "cluster_security_group_id": {
                      "default": null,
                      "description": "Cluster control plane security group ID"
                    },
                    "cluster_service_ipv4_cidr": {
                      "default": null,
                      "description": "The CIDR block to assign Kubernetes service IP addresses from. If you don't specify a block, Kubernetes assigns addresses from either the 10.100.0.0/16 or 172.20.0.0/16 CIDR blocks"
                    },
                    "cluster_version": {
                      "default": null,
                      "description": "Kubernetes version. Defaults to EKS Cluster Kubernetes version"
                    },
                    "cpu_options": {
                      "default": null,
                      "description": "The CPU options for the instance"
                    },
                    "create": {
                      "default": true,
                      "description": "Determines whether to create EKS managed node group or not"
                    },
                    "create_iam_role": {
                      "default": true,
                      "description": "Determines whether an IAM role is created or to use an existing IAM role"
                    },
                    "create_launch_template": {
                      "default": true,
                      "description": "Determines whether to create a launch template or not. If set to `false`, EKS will use its own default launch template"
                    },
                    "create_security_group": {
                      "default": true,
                      "description": "Determines whether to create a security group"
                    },
                    "credit_specification": {
                      "default": null,
                      "description": "Customize the credit specification of the instance"
                    },
                    "desired_size": {
                      "default": 1,
                      "description": "Desired number of instances/nodes"
                    },
                    "disable_api_termination": {
                      "default": null,
                      "description": "If true, enables EC2 instance termination protection"
                    },
                    "disk_size": {
                      "default": null,
                      "description": "Disk size in GiB for nodes. Defaults to `20`"
                    },
                    "ebs_optimized": {
                      "default": null,
                      "description": "If true, the launched EC2 instance(s) will be EBS-optimized"
                    },
                    "elastic_gpu_specifications": {
                      "default": null,
                      "description": "The elastic GPU to attach to the instance"
                    },
                    "elastic_inference_accelerator": {
                      "default": null,
                      "description": "Configuration block containing an Elastic Inference Accelerator to attach to the instance"
                    },
                    "enable_bootstrap_user_data": {
                      "default": false,
                      "description": "Determines whether the bootstrap configurations are populated within the user data template"
                    },
                    "enable_monitoring": {
                      "default": true,
                      "description": "Enables/disables detailed monitoring"
                    },
                    "enclave_options": {
                      "default": null,
                      "description": "Enable Nitro Enclaves on launched instances"
                    },
                    "force_update_version": {
                      "default": null,
                      "description": "Force version update if existing pods are unable to be drained due to a pod disruption budget issue"
                    },
                    "iam_role_additional_policies": {
                      "default": [],
                      "description": "Additional policies to be added to the IAM role"
                    },
                    "iam_role_arn": {
                      "default": null,
                      "description": "Existing IAM role ARN for the node group. Required if `create_iam_role` is set to `false`"
                    },
                    "iam_role_attach_cni_policy": {
                      "default": true,
                      "description": "Whether to attach the `AmazonEKS_CNI_Policy`/`AmazonEKS_CNI_IPv6_Policy` IAM policy to the IAM IAM role. WARNING: If set `false` the permissions must be assigned to the `aws-node` DaemonSet pods via another method or nodes will not be able to join the cluster"
                    },
                    "iam_role_description": {
                      "default": null,
                      "description": "Description of the role"
                    },
                    "iam_role_name": {
                      "default": null,
                      "description": "Name to use on IAM role created"
                    },
                    "iam_role_path": {
                      "default": null,
                      "description": "IAM role path"
                    },
                    "iam_role_permissions_boundary": {
                      "default": null,
                      "description": "ARN of the policy that is used to set the permissions boundary for the IAM role"
                    },
                    "iam_role_tags": {
                      "default": {},
                      "description": "A map of additional tags to add to the IAM role created"
                    },
                    "iam_role_use_name_prefix": {
                      "default": "true",
                      "description": "Determines whether the IAM role name (`iam_role_name`) is used as a prefix"
                    },
                    "instance_market_options": {
                      "default": null,
                      "description": "The market (purchasing) option for the instance"
                    },
                    "instance_types": {
                      "default": null,
                      "description": "Set of instance types associated with the EKS Node Group. Defaults to `[\"t3.medium\"]`"
                    },
                    "kernel_id": {
                      "default": null,
                      "description": "The kernel ID"
                    },
                    "key_name": {
                      "default": null,
                      "description": "The key name that should be used for the instance(s)"
                    },
                    "labels": {
                      "default": null,
                      "description": "Key-value map of Kubernetes labels. Only labels that are applied with the EKS API are managed by this argument. Other Kubernetes labels applied to the EKS Node Group will not be managed"
                    },
                    "launch_template_default_version": {
                      "default": null,
                      "description": "Default version of the launch template"
                    },
                    "launch_template_description": {
                      "default": null,
                      "description": "Description of the launch template"
                    },
                    "launch_template_name": {
                      "default": "",
                      "description": "Launch template name - either to be created (`var.create_launch_template` = `true`) or existing (`var.create_launch_template` = `false`)"
                    },
                    "launch_template_use_name_prefix": {
                      "default": true,
                      "description": "Determines whether to use `launch_template_name` as is or create a unique name beginning with the `launch_template_name` as the prefix"
                    },
                    "launch_template_version": {
                      "default": null,
                      "description": "Launch template version number. The default is `$Default`"
                    },
                    "license_specifications": {
                      "default": null,
                      "description": "A list of license specifications to associate with"
                    },
                    "max_size": {
                      "default": 3,
                      "description": "Maximum number of instances/nodes"
                    },
                    "metadata_options": {
                      "default": {
                        "http_endpoint": "enabled",
                        "http_put_response_hop_limit": "2",
                        "http_tokens": "required"
                      },
                      "description": "Customize the metadata options for the instance"
                    },
                    "min_size": {
                      "default": 0,
                      "description": "Minimum number of instances/nodes"
                    },
                    "name": {
                      "default": "",
                      "description": "Name of the EKS managed node group"
                    },
                    "network_interfaces": {
                      "default": [],
                      "description": "Customize network interfaces to be attached at instance boot time"
                    },
                    "placement": {
                      "default": null,
                      "description": "The placement of the instance"
                    },
                    "platform": {
                      "default": "linux",
                      "description": "Identifies if the OS platform is `bottlerocket` or `linux` based; `windows` is not supported"
                    },
                    "post_bootstrap_user_data": {
                      "default": "",
                      "description": "User data that is appended to the user data script after of the EKS bootstrap script. Not used when `platform` = `bottlerocket`"
                    },
                    "pre_bootstrap_user_data": {
                      "default": "",
                      "description": "User data that is injected into the user data script ahead of the EKS bootstrap script. Not used when `platform` = `bottlerocket`"
                    },
                    "ram_disk_id": {
                      "default": null,
                      "description": "The ID of the ram disk"
                    },
                    "remote_access": {
                      "default": {},
                      "description": "Configuration block with remote access settings"
                    },
                    "security_group_description": {
                      "default": "EKS managed node group security group",
                      "description": "Description for the security group created"
                    },
                    "security_group_name": {
                      "default": null,
                      "description": "Name to use on security group created"
                    },
                    "security_group_rules": {
                      "default": {},
                      "description": "List of security group rules to add to the security group created"
                    },
                    "security_group_tags": {
                      "default": {},
                      "description": "A map of additional tags to add to the security group created"
                    },
                    "security_group_use_name_prefix": {
                      "default": "true",
                      "description": "Determines whether the security group name (`security_group_name`) is used as a prefix"
                    },
                    "subnet_ids": {
                      "default": null,
                      "description": "Identifiers of EC2 Subnets to associate with the EKS Node Group. These subnets must have the following resource tag: `kubernetes.io/cluster/CLUSTER_NAME`"
                    },
                    "tags": {
                      "default": {},
                      "description": "A map of tags to add to all resources"
                    },
                    "taints": {
                      "default": {},
                      "description": "The Kubernetes taints to be applied to the nodes in the node group. Maximum of 50 taints per node group"
                    },
                    "timeouts": {
                      "default": {},
                      "description": "Create, update, and delete timeout configurations for the node group"
                    },
                    "update_config": {
                      "default": {},
                      "description": "Configuration block of settings for max unavailable resources during node group updates"
                    },
                    "update_launch_template_default_version": {
                      "default": true,
                      "description": "Whether to update the launch templates default version on each update. Conflicts with `launch_template_default_version`"
                    },
                    "use_name_prefix": {
                      "default": true,
                      "description": "Determines whether to use `name` as is or create a unique name beginning with the `name` as the prefix"
                    },
                    "user_data_template_path": {
                      "default": "",
                      "description": "Path to a local, custom user data template file to use when rendering user data"
                    },
                    "vpc_id": {
                      "default": null,
                      "description": "ID of the VPC where the security group/nodes will be provisioned"
                    },
                    "vpc_security_group_ids": {
                      "default": [],
                      "description": "A list of security group IDs to associate"
                    }
                  }
                }
              },
              "fargate_profile": {
                "source": "./modules/fargate-profile",
                "expressions": {
                  "cluster_ip_family": {
                    "references": [
                      "var.cluster_ip_family"
                    ]
                  },
                  "cluster_name": {
                    "references": [
                      "aws_eks_cluster.this[0].name",
                      "aws_eks_cluster.this[0]",
                      "aws_eks_cluster.this"
                    ]
                  },
                  "create_iam_role": {
                    "references": [
                      "each.value.create_iam_role",
                      "each.value",
                      "var.fargate_profile_defaults.create_iam_role",
                      "var.fargate_profile_defaults"
                    ]
                  },
                  "iam_role_additional_policies": {
                    "references": [
                      "each.value.iam_role_additional_policies",
                      "each.value",
                      "var.fargate_profile_defaults.iam_role_additional_policies",
                      "var.fargate_profile_defaults"
                    ]
                  },
                  "iam_role_arn": {
                    "references": [
                      "each.value.iam_role_arn",
                      "each.value",
                      "var.fargate_profile_defaults.iam_role_arn",
                      "var.fargate_profile_defaults"
                    ]
                  },
                  "iam_role_attach_cni_policy": {
                    "references": [
                      "each.value.iam_role_attach_cni_policy",
                      "each.value",
                      "var.fargate_profile_defaults.iam_role_attach_cni_policy",
                      "var.fargate_profile_defaults"
                    ]
                  },
                  "iam_role_description": {
                    "references": [
                      "each.value.iam_role_description",
                      "each.value",
                      "var.fargate_profile_defaults.iam_role_description",
                      "var.fargate_profile_defaults"
                    ]
                  },
                  "iam_role_name": {
                    "references": [
                      "each.value.iam_role_name",
                      "each.value",
                      "var.fargate_profile_defaults.iam_role_name",
                      "var.fargate_profile_defaults"
                    ]
                  },
                  "iam_role_path": {
                    "references": [
                      "each.value.iam_role_path",
                      "each.value",
                      "var.fargate_profile_defaults.iam_role_path",
                      "var.fargate_profile_defaults"
                    ]
                  },
                  "iam_role_permissions_boundary": {
                    "references": [
                      "each.value.iam_role_permissions_boundary",
                      "each.value",
                      "var.fargate_profile_defaults.iam_role_permissions_boundary",
                      "var.fargate_profile_defaults"
                    ]
                  },
                  "iam_role_tags": {
                    "references": [
                      "each.value.iam_role_tags",
                      "each.value",
                      "var.fargate_profile_defaults.iam_role_tags",
                      "var.fargate_profile_defaults"
                    ]
                  },
                  "iam_role_use_name_prefix": {
                    "references": [
                      "each.value.iam_role_use_name_prefix",
                      "each.value",
                      "var.fargate_profile_defaults.iam_role_use_name_prefix",
                      "var.fargate_profile_defaults"
                    ]
                  },
                  "name": {
                    "references": [
                      "each.value.name",
                      "each.value",
                      "each.key"
                    ]
                  },
                  "selectors": {
                    "references": [
                      "each.value.selectors",
                      "each.value",
                      "var.fargate_profile_defaults.selectors",
                      "var.fargate_profile_defaults"
                    ]
                  },
                  "subnet_ids": {
                    "references": [
                      "each.value.subnet_ids",
                      "each.value",
                      "var.fargate_profile_defaults.subnet_ids",
                      "var.fargate_profile_defaults",
                      "var.subnet_ids"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.tags",
                      "each.value.tags",
                      "each.value",
                      "var.fargate_profile_defaults.tags",
                      "var.fargate_profile_defaults"
                    ]
                  },
                  "timeouts": {
                    "references": [
                      "each.value.timeouts",
                      "each.value",
                      "var.fargate_profile_defaults.timeouts",
                      "var.fargate_profile_defaults"
                    ]
                  }
                },
                "for_each_expression": {
                  "references": [
                    "var.fargate_profiles",
                    "var.create"
                  ]
                },
                "module": {
                  "outputs": {
                    "fargate_profile_arn": {
                      "expression": {
                        "references": [
                          "aws_eks_fargate_profile.this[0].arn",
                          "aws_eks_fargate_profile.this[0]",
                          "aws_eks_fargate_profile.this"
                        ]
                      },
                      "description": "Amazon Resource Name (ARN) of the EKS Fargate Profile"
                    },
                    "fargate_profile_id": {
                      "expression": {
                        "references": [
                          "aws_eks_fargate_profile.this[0].id",
                          "aws_eks_fargate_profile.this[0]",
                          "aws_eks_fargate_profile.this"
                        ]
                      },
                      "description": "EKS Cluster name and EKS Fargate Profile name separated by a colon (`:`)"
                    },
                    "fargate_profile_status": {
                      "expression": {
                        "references": [
                          "aws_eks_fargate_profile.this[0].status",
                          "aws_eks_fargate_profile.this[0]",
                          "aws_eks_fargate_profile.this"
                        ]
                      },
                      "description": "Status of the EKS Fargate Profile"
                    },
                    "iam_role_arn": {
                      "expression": {
                        "references": [
                          "aws_iam_role.this[0].arn",
                          "aws_iam_role.this[0]",
                          "aws_iam_role.this"
                        ]
                      },
                      "description": "The Amazon Resource Name (ARN) specifying the IAM role"
                    },
                    "iam_role_name": {
                      "expression": {
                        "references": [
                          "aws_iam_role.this[0].name",
                          "aws_iam_role.this[0]",
                          "aws_iam_role.this"
                        ]
                      },
                      "description": "The name of the IAM role"
                    },
                    "iam_role_unique_id": {
                      "expression": {
                        "references": [
                          "aws_iam_role.this[0].unique_id",
                          "aws_iam_role.this[0]",
                          "aws_iam_role.this"
                        ]
                      },
                      "description": "Stable and unique string identifying the IAM role"
                    }
                  },
                  "resources": [
                    {
                      "address": "aws_eks_fargate_profile.this",
                      "mode": "managed",
                      "type": "aws_eks_fargate_profile",
                      "name": "this",
                      "provider_config_key": "fargate_profile:aws",
                      "expressions": {
                        "cluster_name": {
                          "references": [
                            "var.cluster_name"
                          ]
                        },
                        "fargate_profile_name": {
                          "references": [
                            "var.name"
                          ]
                        },
                        "pod_execution_role_arn": {
                          "references": [
                            "var.create_iam_role",
                            "aws_iam_role.this[0].arn",
                            "aws_iam_role.this[0]",
                            "aws_iam_role.this",
                            "var.iam_role_arn"
                          ]
                        },
                        "subnet_ids": {
                          "references": [
                            "var.subnet_ids"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.tags"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "var.create"
                        ]
                      }
                    },
                    {
                      "address": "aws_iam_role.this",
                      "mode": "managed",
                      "type": "aws_iam_role",
                      "name": "this",
                      "provider_config_key": "fargate_profile:aws",
                      "expressions": {
                        "assume_role_policy": {
                          "references": [
                            "data.aws_iam_policy_document.assume_role_policy[0].json",
                            "data.aws_iam_policy_document.assume_role_policy[0]",
                            "data.aws_iam_policy_document.assume_role_policy"
                          ]
                        },
                        "description": {
                          "references": [
                            "var.iam_role_description"
                          ]
                        },
                        "force_detach_policies": {
                          "constant_value": true
                        },
                        "name": {
                          "references": [
                            "var.iam_role_use_name_prefix",
                            "local.iam_role_name"
                          ]
                        },
                        "name_prefix": {
                          "references": [
                            "var.iam_role_use_name_prefix",
                            "local.iam_role_name"
                          ]
                        },
                        "path": {
                          "references": [
                            "var.iam_role_path"
                          ]
                        },
                        "permissions_boundary": {
                          "references": [
                            "var.iam_role_permissions_boundary"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.tags",
                            "var.iam_role_tags"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "var.create",
                          "var.create_iam_role"
                        ]
                      }
                    },
                    {
                      "address": "aws_iam_role_policy_attachment.this",
                      "mode": "managed",
                      "type": "aws_iam_role_policy_attachment",
                      "name": "this",
                      "provider_config_key": "fargate_profile:aws",
                      "expressions": {
                        "policy_arn": {
                          "references": [
                            "each.value"
                          ]
                        },
                        "role": {
                          "references": [
                            "aws_iam_role.this[0].name",
                            "aws_iam_role.this[0]",
                            "aws_iam_role.this"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "for_each_expression": {
                        "references": [
                          "var.create",
                          "var.create_iam_role",
                          "local.iam_role_policy_prefix",
                          "var.iam_role_attach_cni_policy",
                          "local.cni_policy",
                          "var.iam_role_additional_policies"
                        ]
                      }
                    },
                    {
                      "address": "data.aws_caller_identity.current",
                      "mode": "data",
                      "type": "aws_caller_identity",
                      "name": "current",
                      "provider_config_key": "fargate_profile:aws",
                      "schema_version": 0
                    },
                    {
                      "address": "data.aws_iam_policy_document.assume_role_policy",
                      "mode": "data",
                      "type": "aws_iam_policy_document",
                      "name": "assume_role_policy",
                      "provider_config_key": "fargate_profile:aws",
                      "expressions": {
                        "statement": [
                          {
                            "actions": {
                              "constant_value": [
                                "sts:AssumeRole"
                              ]
                            },
                            "effect": {
                              "constant_value": "Allow"
                            },
                            "principals": [
                              {
                                "identifiers": {
                                  "constant_value": [
                                    "eks-fargate-pods.amazonaws.com"
                                  ]
                                },
                                "type": {
                                  "constant_value": "Service"
                                }
                              }
                            ]
                          }
                        ]
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "var.create",
                          "var.create_iam_role"
                        ]
                      }
                    },
                    {
                      "address": "data.aws_partition.current",
                      "mode": "data",
                      "type": "aws_partition",
                      "name": "current",
                      "provider_config_key": "fargate_profile:aws",
                      "schema_version": 0
                    }
                  ],
                  "variables": {
                    "cluster_ip_family": {
                      "default": null,
                      "description": "The IP family used to assign Kubernetes pod and service addresses. Valid values are `ipv4` (default) and `ipv6`"
                    },
                    "cluster_name": {
                      "default": null,
                      "description": "Name of the EKS cluster"
                    },
                    "create": {
                      "default": true,
                      "description": "Determines whether to create Fargate profile or not"
                    },
                    "create_iam_role": {
                      "default": true,
                      "description": "Determines whether an IAM role is created or to use an existing IAM role"
                    },
                    "iam_role_additional_policies": {
                      "default": [],
                      "description": "Additional policies to be added to the IAM role"
                    },
                    "iam_role_arn": {
                      "default": null,
                      "description": "Existing IAM role ARN for the Fargate profile. Required if `create_iam_role` is set to `false`"
                    },
                    "iam_role_attach_cni_policy": {
                      "default": true,
                      "description": "Whether to attach the `AmazonEKS_CNI_Policy`/`AmazonEKS_CNI_IPv6_Policy` IAM policy to the IAM IAM role. WARNING: If set `false` the permissions must be assigned to the `aws-node` DaemonSet pods via another method or nodes will not be able to join the cluster"
                    },
                    "iam_role_description": {
                      "default": null,
                      "description": "Description of the role"
                    },
                    "iam_role_name": {
                      "default": "",
                      "description": "Name to use on IAM role created"
                    },
                    "iam_role_path": {
                      "default": null,
                      "description": "IAM role path"
                    },
                    "iam_role_permissions_boundary": {
                      "default": null,
                      "description": "ARN of the policy that is used to set the permissions boundary for the IAM role"
                    },
                    "iam_role_tags": {
                      "default": {},
                      "description": "A map of additional tags to add to the IAM role created"
                    },
                    "iam_role_use_name_prefix": {
                      "default": "true",
                      "description": "Determines whether the IAM role name (`iam_role_name`) is used as a prefix"
                    },
                    "name": {
                      "default": "",
                      "description": "Name of the EKS Fargate Profile"
                    },
                    "selectors": {
                      "default": [],
                      "description": "Configuration block(s) for selecting Kubernetes Pods to execute with this Fargate Profile"
                    },
                    "subnet_ids": {
                      "default": [],
                      "description": "A list of subnet IDs for the EKS Fargate Profile"
                    },
                    "tags": {
                      "default": {},
                      "description": "A map of tags to add to all resources"
                    },
                    "timeouts": {
                      "default": {},
                      "description": "Create and delete timeout configurations for the Fargate Profile"
                    }
                  }
                }
              },
              "self_managed_node_group": {
                "source": "./modules/self-managed-node-group",
                "expressions": {
                  "ami_id": {
                    "references": [
                      "each.value.ami_id",
                      "each.value",
                      "var.self_managed_node_group_defaults.ami_id",
                      "var.self_managed_node_group_defaults"
                    ]
                  },
                  "availability_zones": {
                    "references": [
                      "each.value.availability_zones",
                      "each.value",
                      "var.self_managed_node_group_defaults.availability_zones",
                      "var.self_managed_node_group_defaults"
                    ]
                  },
                  "block_device_mappings": {
                    "references": [
                      "each.value.block_device_mappings",
                      "each.value",
                      "var.self_managed_node_group_defaults.block_device_mappings",
                      "var.self_managed_node_group_defaults"
                    ]
                  },
                  "bootstrap_extra_args": {
                    "references": [
                      "each.value.bootstrap_extra_args",
                      "each.value",
                      "var.self_managed_node_group_defaults.bootstrap_extra_args",
                      "var.self_managed_node_group_defaults"
                    ]
                  },
                  "capacity_rebalance": {
                    "references": [
                      "each.value.capacity_rebalance",
                      "each.value",
                      "var.self_managed_node_group_defaults.capacity_rebalance",
                      "var.self_managed_node_group_defaults"
                    ]
                  },
                  "capacity_reservation_specification": {
                    "references": [
                      "each.value.capacity_reservation_specification",
                      "each.value",
                      "var.self_managed_node_group_defaults.capacity_reservation_specification",
                      "var.self_managed_node_group_defaults"
                    ]
                  },
                  "cluster_auth_base64": {
                    "references": [
                      "aws_eks_cluster.this[0].certificate_authority[0].data",
                      "aws_eks_cluster.this[0].certificate_authority[0]",
                      "aws_eks_cluster.this[0].certificate_authority",
                      "aws_eks_cluster.this[0]",
                      "aws_eks_cluster.this"
                    ]
                  },
                  "cluster_endpoint": {
                    "references": [
                      "aws_eks_cluster.this[0].endpoint",
                      "aws_eks_cluster.this[0]",
                      "aws_eks_cluster.this"
                    ]
                  },
                  "cluster_ip_family": {
                    "references": [
                      "var.cluster_ip_family"
                    ]
                  },
                  "cluster_name": {
                    "references": [
                      "aws_eks_cluster.this[0].name",
                      "aws_eks_cluster.this[0]",
                      "aws_eks_cluster.this"
                    ]
                  },
                  "cluster_security_group_id": {
                    "references": [
                      "local.cluster_security_group_id"
                    ]
                  },
                  "cluster_version": {
                    "references": [
                      "each.value.cluster_version",
                      "each.value",
                      "var.self_managed_node_group_defaults.cluster_version",
                      "var.self_managed_node_group_defaults",
                      "var.cluster_version"
                    ]
                  },
                  "cpu_options": {
                    "references": [
                      "each.value.cpu_options",
                      "each.value",
                      "var.self_managed_node_group_defaults.cpu_options",
                      "var.self_managed_node_group_defaults"
                    ]
                  },
                  "create_iam_instance_profile": {
                    "references": [
                      "each.value.create_iam_instance_profile",
                      "each.value",
                      "var.self_managed_node_group_defaults.create_iam_instance_profile",
                      "var.self_managed_node_group_defaults"
                    ]
                  },
                  "create_launch_template": {
                    "references": [
                      "each.value.create_launch_template",
                      "each.value",
                      "var.self_managed_node_group_defaults.create_launch_template",
                      "var.self_managed_node_group_defaults"
                    ]
                  },
                  "create_schedule": {
                    "references": [
                      "each.value.create_schedule",
                      "each.value",
                      "var.self_managed_node_group_defaults.create_schedule",
                      "var.self_managed_node_group_defaults"
                    ]
                  },
                  "create_security_group": {
                    "references": [
                      "each.value.create_security_group",
                      "each.value",
                      "var.self_managed_node_group_defaults.create_security_group",
                      "var.self_managed_node_group_defaults"
                    ]
                  },
                  "credit_specification": {
                    "references": [
                      "each.value.credit_specification",
                      "each.value",
                      "var.self_managed_node_group_defaults.credit_specification",
                      "var.self_managed_node_group_defaults"
                    ]
                  },
                  "default_cooldown": {
                    "references": [
                      "each.value.default_cooldown",
                      "each.value",
                      "var.self_managed_node_group_defaults.default_cooldown",
                      "var.self_managed_node_group_defaults"
                    ]
                  },
                  "delete_timeout": {
                    "references": [
                      "each.value.delete_timeout",
                      "each.value",
                      "var.self_managed_node_group_defaults.delete_timeout",
                      "var.self_managed_node_group_defaults"
                    ]
                  },
                  "desired_size": {
                    "references": [
                      "each.value.desired_size",
                      "each.value",
                      "var.self_managed_node_group_defaults.desired_size",
                      "var.self_managed_node_group_defaults"
                    ]
                  },
                  "disable_api_termination": {
                    "references": [
                      "each.value.disable_api_termination",
                      "each.value",
                      "var.self_managed_node_group_defaults.disable_api_termination",
                      "var.self_managed_node_group_defaults"
                    ]
                  },
                  "ebs_optimized": {
                    "references": [
                      "each.value.ebs_optimized",
                      "each.value",
                      "var.self_managed_node_group_defaults.ebs_optimized",
                      "var.self_managed_node_group_defaults"
                    ]
                  },
                  "elastic_gpu_specifications": {
                    "references": [
                      "each.value.elastic_gpu_specifications",
                      "each.value",
                      "var.self_managed_node_group_defaults.elastic_gpu_specifications",
                      "var.self_managed_node_group_defaults"
                    ]
                  },
                  "elastic_inference_accelerator": {
                    "references": [
                      "each.value.elastic_inference_accelerator",
                      "each.value",
                      "var.self_managed_node_group_defaults.elastic_inference_accelerator",
                      "var.self_managed_node_group_defaults"
                    ]
                  },
                  "enable_monitoring": {
                    "references": [
                      "each.value.enable_monitoring",
                      "each.value",
                      "var.self_managed_node_group_defaults.enable_monitoring",
                      "var.self_managed_node_group_defaults"
                    ]
                  },
                  "enabled_metrics": {
                    "references": [
                      "each.value.enabled_metrics",
                      "each.value",
                      "var.self_managed_node_group_defaults.enabled_metrics",
                      "var.self_managed_node_group_defaults"
                    ]
                  },
                  "enclave_options": {
                    "references": [
                      "each.value.enclave_options",
                      "each.value",
                      "var.self_managed_node_group_defaults.enclave_options",
                      "var.self_managed_node_group_defaults"
                    ]
                  },
                  "force_delete": {
                    "references": [
                      "each.value.force_delete",
                      "each.value",
                      "var.self_managed_node_group_defaults.force_delete",
                      "var.self_managed_node_group_defaults"
                    ]
                  },
                  "health_check_grace_period": {
                    "references": [
                      "each.value.health_check_grace_period",
                      "each.value",
                      "var.self_managed_node_group_defaults.health_check_grace_period",
                      "var.self_managed_node_group_defaults"
                    ]
                  },
                  "health_check_type": {
                    "references": [
                      "each.value.health_check_type",
                      "each.value",
                      "var.self_managed_node_group_defaults.health_check_type",
                      "var.self_managed_node_group_defaults"
                    ]
                  },
                  "hibernation_options": {
                    "references": [
                      "each.value.hibernation_options",
                      "each.value",
                      "var.self_managed_node_group_defaults.hibernation_options",
                      "var.self_managed_node_group_defaults"
                    ]
                  },
                  "iam_instance_profile_arn": {
                    "references": [
                      "each.value.iam_instance_profile_arn",
                      "each.value",
                      "var.self_managed_node_group_defaults.iam_instance_profile_arn",
                      "var.self_managed_node_group_defaults"
                    ]
                  },
                  "iam_role_additional_policies": {
                    "references": [
                      "each.value.iam_role_additional_policies",
                      "each.value",
                      "var.self_managed_node_group_defaults.iam_role_additional_policies",
                      "var.self_managed_node_group_defaults"
                    ]
                  },
                  "iam_role_attach_cni_policy": {
                    "references": [
                      "each.value.iam_role_attach_cni_policy",
                      "each.value",
                      "var.self_managed_node_group_defaults.iam_role_attach_cni_policy",
                      "var.self_managed_node_group_defaults"
                    ]
                  },
                  "iam_role_description": {
                    "references": [
                      "each.value.iam_role_description",
                      "each.value",
                      "var.self_managed_node_group_defaults.iam_role_description",
                      "var.self_managed_node_group_defaults"
                    ]
                  },
                  "iam_role_name": {
                    "references": [
                      "each.value.iam_role_name",
                      "each.value",
                      "var.self_managed_node_group_defaults.iam_role_name",
                      "var.self_managed_node_group_defaults"
                    ]
                  },
                  "iam_role_path": {
                    "references": [
                      "each.value.iam_role_path",
                      "each.value",
                      "var.self_managed_node_group_defaults.iam_role_path",
                      "var.self_managed_node_group_defaults"
                    ]
                  },
                  "iam_role_permissions_boundary": {
                    "references": [
                      "each.value.iam_role_permissions_boundary",
                      "each.value",
                      "var.self_managed_node_group_defaults.iam_role_permissions_boundary",
                      "var.self_managed_node_group_defaults"
                    ]
                  },
                  "iam_role_tags": {
                    "references": [
                      "each.value.iam_role_tags",
                      "each.value",
                      "var.self_managed_node_group_defaults.iam_role_tags",
                      "var.self_managed_node_group_defaults"
                    ]
                  },
                  "iam_role_use_name_prefix": {
                    "references": [
                      "each.value.iam_role_use_name_prefix",
                      "each.value",
                      "var.self_managed_node_group_defaults.iam_role_use_name_prefix",
                      "var.self_managed_node_group_defaults"
                    ]
                  },
                  "initial_lifecycle_hooks": {
                    "references": [
                      "each.value.initial_lifecycle_hooks",
                      "each.value",
                      "var.self_managed_node_group_defaults.initial_lifecycle_hooks",
                      "var.self_managed_node_group_defaults"
                    ]
                  },
                  "instance_initiated_shutdown_behavior": {
                    "references": [
                      "each.value.instance_initiated_shutdown_behavior",
                      "each.value",
                      "var.self_managed_node_group_defaults.instance_initiated_shutdown_behavior",
                      "var.self_managed_node_group_defaults"
                    ]
                  },
                  "instance_market_options": {
                    "references": [
                      "each.value.instance_market_options",
                      "each.value",
                      "var.self_managed_node_group_defaults.instance_market_options",
                      "var.self_managed_node_group_defaults"
                    ]
                  },
                  "instance_refresh": {
                    "references": [
                      "each.value.instance_refresh",
                      "each.value",
                      "var.self_managed_node_group_defaults.instance_refresh",
                      "var.self_managed_node_group_defaults"
                    ]
                  },
                  "instance_type": {
                    "references": [
                      "each.value.instance_type",
                      "each.value",
                      "var.self_managed_node_group_defaults.instance_type",
                      "var.self_managed_node_group_defaults"
                    ]
                  },
                  "kernel_id": {
                    "references": [
                      "each.value.kernel_id",
                      "each.value",
                      "var.self_managed_node_group_defaults.kernel_id",
                      "var.self_managed_node_group_defaults"
                    ]
                  },
                  "key_name": {
                    "references": [
                      "each.value.key_name",
                      "each.value",
                      "var.self_managed_node_group_defaults.key_name",
                      "var.self_managed_node_group_defaults"
                    ]
                  },
                  "launch_template_default_version": {
                    "references": [
                      "each.value.launch_template_default_version",
                      "each.value",
                      "var.self_managed_node_group_defaults.launch_template_default_version",
                      "var.self_managed_node_group_defaults"
                    ]
                  },
                  "launch_template_description": {
                    "references": [
                      "each.value.launch_template_description",
                      "each.value",
                      "var.self_managed_node_group_defaults.launch_template_description",
                      "var.self_managed_node_group_defaults",
                      "each.value.name",
                      "each.value",
                      "each.key"
                    ]
                  },
                  "launch_template_name": {
                    "references": [
                      "each.value.launch_template_name",
                      "each.value",
                      "each.key"
                    ]
                  },
                  "launch_template_version": {
                    "references": [
                      "each.value.launch_template_version",
                      "each.value",
                      "var.self_managed_node_group_defaults.launch_template_version",
                      "var.self_managed_node_group_defaults"
                    ]
                  },
                  "license_specifications": {
                    "references": [
                      "each.value.license_specifications",
                      "each.value",
                      "var.self_managed_node_group_defaults.license_specifications",
                      "var.self_managed_node_group_defaults"
                    ]
                  },
                  "max_instance_lifetime": {
                    "references": [
                      "each.value.max_instance_lifetime",
                      "each.value",
                      "var.self_managed_node_group_defaults.max_instance_lifetime",
                      "var.self_managed_node_group_defaults"
                    ]
                  },
                  "max_size": {
                    "references": [
                      "each.value.max_size",
                      "each.value",
                      "var.self_managed_node_group_defaults.max_size",
                      "var.self_managed_node_group_defaults"
                    ]
                  },
                  "metadata_options": {
                    "references": [
                      "each.value.metadata_options",
                      "each.value",
                      "var.self_managed_node_group_defaults.metadata_options",
                      "var.self_managed_node_group_defaults",
                      "local.metadata_options"
                    ]
                  },
                  "metrics_granularity": {
                    "references": [
                      "each.value.metrics_granularity",
                      "each.value",
                      "var.self_managed_node_group_defaults.metrics_granularity",
                      "var.self_managed_node_group_defaults"
                    ]
                  },
                  "min_elb_capacity": {
                    "references": [
                      "each.value.min_elb_capacity",
                      "each.value",
                      "var.self_managed_node_group_defaults.min_elb_capacity",
                      "var.self_managed_node_group_defaults"
                    ]
                  },
                  "min_size": {
                    "references": [
                      "each.value.min_size",
                      "each.value",
                      "var.self_managed_node_group_defaults.min_size",
                      "var.self_managed_node_group_defaults"
                    ]
                  },
                  "name": {
                    "references": [
                      "each.value.name",
                      "each.value",
                      "each.key"
                    ]
                  },
                  "network_interfaces": {
                    "references": [
                      "each.value.network_interfaces",
                      "each.value",
                      "var.self_managed_node_group_defaults.network_interfaces",
                      "var.self_managed_node_group_defaults"
                    ]
                  },
                  "placement": {
                    "references": [
                      "each.value.placement",
                      "each.value",
                      "var.self_managed_node_group_defaults.placement",
                      "var.self_managed_node_group_defaults"
                    ]
                  },
                  "placement_group": {
                    "references": [
                      "each.value.placement_group",
                      "each.value",
                      "var.self_managed_node_group_defaults.placement_group",
                      "var.self_managed_node_group_defaults"
                    ]
                  },
                  "platform": {
                    "references": [
                      "each.value.platform",
                      "each.value",
                      "var.self_managed_node_group_defaults.platform",
                      "var.self_managed_node_group_defaults"
                    ]
                  },
                  "post_bootstrap_user_data": {
                    "references": [
                      "each.value.post_bootstrap_user_data",
                      "each.value",
                      "var.self_managed_node_group_defaults.post_bootstrap_user_data",
                      "var.self_managed_node_group_defaults"
                    ]
                  },
                  "pre_bootstrap_user_data": {
                    "references": [
                      "each.value.pre_bootstrap_user_data",
                      "each.value",
                      "var.self_managed_node_group_defaults.pre_bootstrap_user_data",
                      "var.self_managed_node_group_defaults"
                    ]
                  },
                  "propagate_tags": {
                    "references": [
                      "each.value.propagate_tags",
                      "each.value",
                      "var.self_managed_node_group_defaults.propagate_tags",
                      "var.self_managed_node_group_defaults"
                    ]
                  },
                  "protect_from_scale_in": {
                    "references": [
                      "each.value.protect_from_scale_in",
                      "each.value",
                      "var.self_managed_node_group_defaults.protect_from_scale_in",
                      "var.self_managed_node_group_defaults"
                    ]
                  },
                  "ram_disk_id": {
                    "references": [
                      "each.value.ram_disk_id",
                      "each.value",
                      "var.self_managed_node_group_defaults.ram_disk_id",
                      "var.self_managed_node_group_defaults"
                    ]
                  },
                  "schedules": {
                    "references": [
                      "each.value.schedules",
                      "each.value",
                      "var.self_managed_node_group_defaults.schedules",
                      "var.self_managed_node_group_defaults"
                    ]
                  },
                  "security_group_description": {
                    "references": [
                      "each.value.security_group_description",
                      "each.value",
                      "var.self_managed_node_group_defaults.security_group_description",
                      "var.self_managed_node_group_defaults"
                    ]
                  },
                  "security_group_name": {
                    "references": [
                      "each.value.security_group_name",
                      "each.value",
                      "var.self_managed_node_group_defaults.security_group_name",
                      "var.self_managed_node_group_defaults"
                    ]
                  },
                  "security_group_rules": {
                    "references": [
                      "each.value.security_group_rules",
                      "each.value",
                      "var.self_managed_node_group_defaults.security_group_rules",
                      "var.self_managed_node_group_defaults"
                    ]
                  },
                  "security_group_tags": {
                    "references": [
                      "each.value.security_group_tags",
                      "each.value",
                      "var.self_managed_node_group_defaults.security_group_tags",
                      "var.self_managed_node_group_defaults"
                    ]
                  },
                  "security_group_use_name_prefix": {
                    "references": [
                      "each.value.security_group_use_name_prefix",
                      "each.value",
                      "var.self_managed_node_group_defaults.security_group_use_name_prefix",
                      "var.self_managed_node_group_defaults"
                    ]
                  },
                  "service_linked_role_arn": {
                    "references": [
                      "each.value.service_linked_role_arn",
                      "each.value",
                      "var.self_managed_node_group_defaults.service_linked_role_arn",
                      "var.self_managed_node_group_defaults"
                    ]
                  },
                  "subnet_ids": {
                    "references": [
                      "each.value.subnet_ids",
                      "each.value",
                      "var.self_managed_node_group_defaults.subnet_ids",
                      "var.self_managed_node_group_defaults",
                      "var.subnet_ids"
                    ]
                  },
                  "suspended_processes": {
                    "references": [
                      "each.value.suspended_processes",
                      "each.value",
                      "var.self_managed_node_group_defaults.suspended_processes",
                      "var.self_managed_node_group_defaults"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.tags",
                      "each.value.tags",
                      "each.value",
                      "var.self_managed_node_group_defaults.tags",
                      "var.self_managed_node_group_defaults"
                    ]
                  },
                  "target_group_arns": {
                    "references": [
                      "each.value.target_group_arns",
                      "each.value",
                      "var.self_managed_node_group_defaults.target_group_arns",
                      "var.self_managed_node_group_defaults"
                    ]
                  },
                  "termination_policies": {
                    "references": [
                      "each.value.termination_policies",
                      "each.value",
                      "var.self_managed_node_group_defaults.termination_policies",
                      "var.self_managed_node_group_defaults"
                    ]
                  },
                  "update_launch_template_default_version": {
                    "references": [
                      "each.value.update_launch_template_default_version",
                      "each.value",
                      "var.self_managed_node_group_defaults.update_launch_template_default_version",
                      "var.self_managed_node_group_defaults"
                    ]
                  },
                  "use_mixed_instances_policy": {
                    "references": [
                      "each.value.use_mixed_instances_policy",
                      "each.value",
                      "var.self_managed_node_group_defaults.use_mixed_instances_policy",
                      "var.self_managed_node_group_defaults"
                    ]
                  },
                  "use_name_prefix": {
                    "references": [
                      "each.value.use_name_prefix",
                      "each.value",
                      "var.self_managed_node_group_defaults.use_name_prefix",
                      "var.self_managed_node_group_defaults"
                    ]
                  },
                  "user_data_template_path": {
                    "references": [
                      "each.value.user_data_template_path",
                      "each.value",
                      "var.self_managed_node_group_defaults.user_data_template_path",
                      "var.self_managed_node_group_defaults"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "each.value.vpc_id",
                      "each.value",
                      "var.self_managed_node_group_defaults.vpc_id",
                      "var.self_managed_node_group_defaults",
                      "var.vpc_id"
                    ]
                  },
                  "vpc_security_group_ids": {
                    "references": [
                      "aws_security_group.node[0].id",
                      "aws_security_group.node[0]",
                      "aws_security_group.node",
                      "each.value.vpc_security_group_ids",
                      "each.value",
                      "var.self_managed_node_group_defaults.vpc_security_group_ids",
                      "var.self_managed_node_group_defaults"
                    ]
                  },
                  "wait_for_capacity_timeout": {
                    "references": [
                      "each.value.wait_for_capacity_timeout",
                      "each.value",
                      "var.self_managed_node_group_defaults.wait_for_capacity_timeout",
                      "var.self_managed_node_group_defaults"
                    ]
                  },
                  "wait_for_elb_capacity": {
                    "references": [
                      "each.value.wait_for_elb_capacity",
                      "each.value",
                      "var.self_managed_node_group_defaults.wait_for_elb_capacity",
                      "var.self_managed_node_group_defaults"
                    ]
                  },
                  "warm_pool": {
                    "references": [
                      "each.value.warm_pool",
                      "each.value",
                      "var.self_managed_node_group_defaults.warm_pool",
                      "var.self_managed_node_group_defaults"
                    ]
                  }
                },
                "for_each_expression": {
                  "references": [
                    "var.self_managed_node_groups",
                    "var.create"
                  ]
                },
                "module": {
                  "outputs": {
                    "autoscaling_group_arn": {
                      "expression": {
                        "references": [
                          "aws_autoscaling_group.this[0].arn",
                          "aws_autoscaling_group.this[0]",
                          "aws_autoscaling_group.this"
                        ]
                      },
                      "description": "The ARN for this autoscaling group"
                    },
                    "autoscaling_group_availability_zones": {
                      "expression": {
                        "references": [
                          "aws_autoscaling_group.this[0].availability_zones",
                          "aws_autoscaling_group.this[0]",
                          "aws_autoscaling_group.this"
                        ]
                      },
                      "description": "The availability zones of the autoscaling group"
                    },
                    "autoscaling_group_default_cooldown": {
                      "expression": {
                        "references": [
                          "aws_autoscaling_group.this[0].default_cooldown",
                          "aws_autoscaling_group.this[0]",
                          "aws_autoscaling_group.this"
                        ]
                      },
                      "description": "Time between a scaling activity and the succeeding scaling activity"
                    },
                    "autoscaling_group_desired_capacity": {
                      "expression": {
                        "references": [
                          "aws_autoscaling_group.this[0].desired_capacity",
                          "aws_autoscaling_group.this[0]",
                          "aws_autoscaling_group.this"
                        ]
                      },
                      "description": "The number of Amazon EC2 instances that should be running in the group"
                    },
                    "autoscaling_group_health_check_grace_period": {
                      "expression": {
                        "references": [
                          "aws_autoscaling_group.this[0].health_check_grace_period",
                          "aws_autoscaling_group.this[0]",
                          "aws_autoscaling_group.this"
                        ]
                      },
                      "description": "Time after instance comes into service before checking health"
                    },
                    "autoscaling_group_health_check_type": {
                      "expression": {
                        "references": [
                          "aws_autoscaling_group.this[0].health_check_type",
                          "aws_autoscaling_group.this[0]",
                          "aws_autoscaling_group.this"
                        ]
                      },
                      "description": "EC2 or ELB. Controls how health checking is done"
                    },
                    "autoscaling_group_id": {
                      "expression": {
                        "references": [
                          "aws_autoscaling_group.this[0].id",
                          "aws_autoscaling_group.this[0]",
                          "aws_autoscaling_group.this"
                        ]
                      },
                      "description": "The autoscaling group id"
                    },
                    "autoscaling_group_max_size": {
                      "expression": {
                        "references": [
                          "aws_autoscaling_group.this[0].max_size",
                          "aws_autoscaling_group.this[0]",
                          "aws_autoscaling_group.this"
                        ]
                      },
                      "description": "The maximum size of the autoscaling group"
                    },
                    "autoscaling_group_min_size": {
                      "expression": {
                        "references": [
                          "aws_autoscaling_group.this[0].min_size",
                          "aws_autoscaling_group.this[0]",
                          "aws_autoscaling_group.this"
                        ]
                      },
                      "description": "The minimum size of the autoscaling group"
                    },
                    "autoscaling_group_name": {
                      "expression": {
                        "references": [
                          "aws_autoscaling_group.this[0].name",
                          "aws_autoscaling_group.this[0]",
                          "aws_autoscaling_group.this"
                        ]
                      },
                      "description": "The autoscaling group name"
                    },
                    "autoscaling_group_schedule_arns": {
                      "expression": {
                        "references": [
                          "aws_autoscaling_schedule.this"
                        ]
                      },
                      "description": "ARNs of autoscaling group schedules"
                    },
                    "autoscaling_group_vpc_zone_identifier": {
                      "expression": {
                        "references": [
                          "aws_autoscaling_group.this[0].vpc_zone_identifier",
                          "aws_autoscaling_group.this[0]",
                          "aws_autoscaling_group.this"
                        ]
                      },
                      "description": "The VPC zone identifier"
                    },
                    "iam_instance_profile_arn": {
                      "expression": {
                        "references": [
                          "aws_iam_instance_profile.this[0].arn",
                          "aws_iam_instance_profile.this[0]",
                          "aws_iam_instance_profile.this"
                        ]
                      },
                      "description": "ARN assigned by AWS to the instance profile"
                    },
                    "iam_instance_profile_id": {
                      "expression": {
                        "references": [
                          "aws_iam_instance_profile.this[0].id",
                          "aws_iam_instance_profile.this[0]",
                          "aws_iam_instance_profile.this"
                        ]
                      },
                      "description": "Instance profile's ID"
                    },
                    "iam_instance_profile_unique": {
                      "expression": {
                        "references": [
                          "aws_iam_instance_profile.this[0].unique_id",
                          "aws_iam_instance_profile.this[0]",
                          "aws_iam_instance_profile.this"
                        ]
                      },
                      "description": "Stable and unique string identifying the IAM instance profile"
                    },
                    "iam_role_arn": {
                      "expression": {
                        "references": [
                          "aws_iam_role.this[0].arn",
                          "aws_iam_role.this[0]",
                          "aws_iam_role.this"
                        ]
                      },
                      "description": "The Amazon Resource Name (ARN) specifying the IAM role"
                    },
                    "iam_role_name": {
                      "expression": {
                        "references": [
                          "aws_iam_role.this[0].name",
                          "aws_iam_role.this[0]",
                          "aws_iam_role.this"
                        ]
                      },
                      "description": "The name of the IAM role"
                    },
                    "iam_role_unique_id": {
                      "expression": {
                        "references": [
                          "aws_iam_role.this[0].unique_id",
                          "aws_iam_role.this[0]",
                          "aws_iam_role.this"
                        ]
                      },
                      "description": "Stable and unique string identifying the IAM role"
                    },
                    "launch_template_arn": {
                      "expression": {
                        "references": [
                          "aws_launch_template.this[0].arn",
                          "aws_launch_template.this[0]",
                          "aws_launch_template.this"
                        ]
                      },
                      "description": "The ARN of the launch template"
                    },
                    "launch_template_id": {
                      "expression": {
                        "references": [
                          "aws_launch_template.this[0].id",
                          "aws_launch_template.this[0]",
                          "aws_launch_template.this"
                        ]
                      },
                      "description": "The ID of the launch template"
                    },
                    "launch_template_latest_version": {
                      "expression": {
                        "references": [
                          "aws_launch_template.this[0].latest_version",
                          "aws_launch_template.this[0]",
                          "aws_launch_template.this"
                        ]
                      },
                      "description": "The latest version of the launch template"
                    },
                    "platform": {
                      "expression": {
                        "references": [
                          "var.platform"
                        ]
                      },
                      "description": "Identifies if the OS platform is `bottlerocket`, `linux`, or `windows` based"
                    },
                    "security_group_arn": {
                      "expression": {
                        "references": [
                          "aws_security_group.this[0].arn",
                          "aws_security_group.this[0]",
                          "aws_security_group.this"
                        ]
                      },
                      "description": "Amazon Resource Name (ARN) of the security group"
                    },
                    "security_group_id": {
                      "expression": {
                        "references": [
                          "aws_security_group.this[0].id",
                          "aws_security_group.this[0]",
                          "aws_security_group.this"
                        ]
                      },
                      "description": "ID of the security group"
                    }
                  },
                  "resources": [
                    {
                      "address": "aws_autoscaling_group.this",
                      "mode": "managed",
                      "type": "aws_autoscaling_group",
                      "name": "this",
                      "provider_config_key": "self_managed_node_group:aws",
                      "expressions": {
                        "availability_zones": {
                          "references": [
                            "var.availability_zones"
                          ]
                        },
                        "capacity_rebalance": {
                          "references": [
                            "var.capacity_rebalance"
                          ]
                        },
                        "default_cooldown": {
                          "references": [
                            "var.default_cooldown"
                          ]
                        },
                        "desired_capacity": {
                          "references": [
                            "var.desired_size"
                          ]
                        },
                        "enabled_metrics": {
                          "references": [
                            "var.enabled_metrics"
                          ]
                        },
                        "force_delete": {
                          "references": [
                            "var.force_delete"
                          ]
                        },
                        "health_check_grace_period": {
                          "references": [
                            "var.health_check_grace_period"
                          ]
                        },
                        "health_check_type": {
                          "references": [
                            "var.health_check_type"
                          ]
                        },
                        "max_instance_lifetime": {
                          "references": [
                            "var.max_instance_lifetime"
                          ]
                        },
                        "max_size": {
                          "references": [
                            "var.max_size"
                          ]
                        },
                        "metrics_granularity": {
                          "references": [
                            "var.metrics_granularity"
                          ]
                        },
                        "min_elb_capacity": {
                          "references": [
                            "var.min_elb_capacity"
                          ]
                        },
                        "min_size": {
                          "references": [
                            "var.min_size"
                          ]
                        },
                        "name": {
                          "references": [
                            "var.use_name_prefix",
                            "var.name"
                          ]
                        },
                        "name_prefix": {
                          "references": [
                            "var.use_name_prefix",
                            "var.name"
                          ]
                        },
                        "placement_group": {
                          "references": [
                            "var.placement_group"
                          ]
                        },
                        "protect_from_scale_in": {
                          "references": [
                            "var.protect_from_scale_in"
                          ]
                        },
                        "service_linked_role_arn": {
                          "references": [
                            "var.service_linked_role_arn"
                          ]
                        },
                        "suspended_processes": {
                          "references": [
                            "var.suspended_processes"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.name",
                            "var.cluster_name",
                            "var.cluster_name",
                            "var.propagate_tags",
                            "var.tags"
                          ]
                        },
                        "target_group_arns": {
                          "references": [
                            "var.target_group_arns"
                          ]
                        },
                        "termination_policies": {
                          "references": [
                            "var.termination_policies"
                          ]
                        },
                        "timeouts": {
                          "delete": {
                            "references": [
                              "var.delete_timeout"
                            ]
                          }
                        },
                        "vpc_zone_identifier": {
                          "references": [
                            "var.subnet_ids"
                          ]
                        },
                        "wait_for_capacity_timeout": {
                          "references": [
                            "var.wait_for_capacity_timeout"
                          ]
                        },
                        "wait_for_elb_capacity": {
                          "references": [
                            "var.wait_for_elb_capacity"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "var.create"
                        ]
                      }
                    },
                    {
                      "address": "aws_autoscaling_schedule.this",
                      "mode": "managed",
                      "type": "aws_autoscaling_schedule",
                      "name": "this",
                      "provider_config_key": "self_managed_node_group:aws",
                      "expressions": {
                        "autoscaling_group_name": {
                          "references": [
                            "aws_autoscaling_group.this[0].name",
                            "aws_autoscaling_group.this[0]",
                            "aws_autoscaling_group.this"
                          ]
                        },
                        "desired_capacity": {
                          "references": [
                            "each.value"
                          ]
                        },
                        "end_time": {
                          "references": [
                            "each.value"
                          ]
                        },
                        "max_size": {
                          "references": [
                            "each.value"
                          ]
                        },
                        "min_size": {
                          "references": [
                            "each.value"
                          ]
                        },
                        "recurrence": {
                          "references": [
                            "each.value"
                          ]
                        },
                        "scheduled_action_name": {
                          "references": [
                            "each.key"
                          ]
                        },
                        "start_time": {
                          "references": [
                            "each.value"
                          ]
                        },
                        "time_zone": {
                          "references": [
                            "each.value"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "for_each_expression": {
                        "references": [
                          "var.create",
                          "var.create_schedule",
                          "var.schedules"
                        ]
                      }
                    },
                    {
                      "address": "aws_iam_instance_profile.this",
                      "mode": "managed",
                      "type": "aws_iam_instance_profile",
                      "name": "this",
                      "provider_config_key": "self_managed_node_group:aws",
                      "expressions": {
                        "name": {
                          "references": [
                            "var.iam_role_use_name_prefix",
                            "local.iam_role_name"
                          ]
                        },
                        "name_prefix": {
                          "references": [
                            "var.iam_role_use_name_prefix",
                            "local.iam_role_name"
                          ]
                        },
                        "path": {
                          "references": [
                            "var.iam_role_path"
                          ]
                        },
                        "role": {
                          "references": [
                            "aws_iam_role.this[0].name",
                            "aws_iam_role.this[0]",
                            "aws_iam_role.this"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.tags",
                            "var.iam_role_tags"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "var.create",
                          "var.create_iam_instance_profile"
                        ]
                      }
                    },
                    {
                      "address": "aws_iam_role.this",
                      "mode": "managed",
                      "type": "aws_iam_role",
                      "name": "this",
                      "provider_config_key": "self_managed_node_group:aws",
                      "expressions": {
                        "assume_role_policy": {
                          "references": [
                            "data.aws_iam_policy_document.assume_role_policy[0].json",
                            "data.aws_iam_policy_document.assume_role_policy[0]",
                            "data.aws_iam_policy_document.assume_role_policy"
                          ]
                        },
                        "description": {
                          "references": [
                            "var.iam_role_description"
                          ]
                        },
                        "force_detach_policies": {
                          "constant_value": true
                        },
                        "name": {
                          "references": [
                            "var.iam_role_use_name_prefix",
                            "local.iam_role_name"
                          ]
                        },
                        "name_prefix": {
                          "references": [
                            "var.iam_role_use_name_prefix",
                            "local.iam_role_name"
                          ]
                        },
                        "path": {
                          "references": [
                            "var.iam_role_path"
                          ]
                        },
                        "permissions_boundary": {
                          "references": [
                            "var.iam_role_permissions_boundary"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.tags",
                            "var.iam_role_tags"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "var.create",
                          "var.create_iam_instance_profile"
                        ]
                      }
                    },
                    {
                      "address": "aws_iam_role_policy_attachment.this",
                      "mode": "managed",
                      "type": "aws_iam_role_policy_attachment",
                      "name": "this",
                      "provider_config_key": "self_managed_node_group:aws",
                      "expressions": {
                        "policy_arn": {
                          "references": [
                            "each.value"
                          ]
                        },
                        "role": {
                          "references": [
                            "aws_iam_role.this[0].name",
                            "aws_iam_role.this[0]",
                            "aws_iam_role.this"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "for_each_expression": {
                        "references": [
                          "var.create",
                          "var.create_iam_instance_profile",
                          "local.iam_role_policy_prefix",
                          "local.iam_role_policy_prefix",
                          "var.iam_role_attach_cni_policy",
                          "local.cni_policy",
                          "var.iam_role_additional_policies"
                        ]
                      }
                    },
                    {
                      "address": "aws_launch_template.this",
                      "mode": "managed",
                      "type": "aws_launch_template",
                      "name": "this",
                      "provider_config_key": "self_managed_node_group:aws",
                      "expressions": {
                        "default_version": {
                          "references": [
                            "var.launch_template_default_version"
                          ]
                        },
                        "description": {
                          "references": [
                            "var.launch_template_description"
                          ]
                        },
                        "disable_api_termination": {
                          "references": [
                            "var.disable_api_termination"
                          ]
                        },
                        "ebs_optimized": {
                          "references": [
                            "var.ebs_optimized"
                          ]
                        },
                        "iam_instance_profile": [
                          {
                            "arn": {
                              "references": [
                                "var.create_iam_instance_profile",
                                "aws_iam_instance_profile.this[0].arn",
                                "aws_iam_instance_profile.this[0]",
                                "aws_iam_instance_profile.this",
                                "var.iam_instance_profile_arn"
                              ]
                            }
                          }
                        ],
                        "image_id": {
                          "references": [
                            "var.ami_id",
                            "data.aws_ami.eks_default[0].image_id",
                            "data.aws_ami.eks_default[0]",
                            "data.aws_ami.eks_default"
                          ]
                        },
                        "instance_initiated_shutdown_behavior": {
                          "references": [
                            "var.instance_initiated_shutdown_behavior"
                          ]
                        },
                        "instance_type": {
                          "references": [
                            "var.instance_type"
                          ]
                        },
                        "kernel_id": {
                          "references": [
                            "var.kernel_id"
                          ]
                        },
                        "key_name": {
                          "references": [
                            "var.key_name"
                          ]
                        },
                        "name": {
                          "references": [
                            "var.launch_template_use_name_prefix",
                            "local.launch_template_name_int"
                          ]
                        },
                        "name_prefix": {
                          "references": [
                            "var.launch_template_use_name_prefix",
                            "local.launch_template_name_int"
                          ]
                        },
                        "ram_disk_id": {
                          "references": [
                            "var.ram_disk_id"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.tags"
                          ]
                        },
                        "update_default_version": {
                          "references": [
                            "var.update_launch_template_default_version"
                          ]
                        },
                        "user_data": {
                          "references": [
                            "module.user_data.user_data",
                            "module.user_data"
                          ]
                        },
                        "vpc_security_group_ids": {
                          "references": [
                            "aws_security_group.this[0].id",
                            "aws_security_group.this[0]",
                            "aws_security_group.this",
                            "var.vpc_security_group_ids"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "var.create",
                          "var.create_launch_template"
                        ]
                      },
                      "depends_on": [
                        "aws_security_group_rule.this",
                        "aws_iam_role_policy_attachment.this"
                      ]
                    },
                    {
                      "address": "aws_security_group.this",
                      "mode": "managed",
                      "type": "aws_security_group",
                      "name": "this",
                      "provider_config_key": "self_managed_node_group:aws",
                      "expressions": {
                        "description": {
                          "references": [
                            "var.security_group_description"
                          ]
                        },
                        "name": {
                          "references": [
                            "var.security_group_use_name_prefix",
                            "local.security_group_name"
                          ]
                        },
                        "name_prefix": {
                          "references": [
                            "var.security_group_use_name_prefix",
                            "local.security_group_name"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.tags",
                            "local.security_group_name",
                            "var.cluster_name",
                            "var.security_group_tags"
                          ]
                        },
                        "vpc_id": {
                          "references": [
                            "var.vpc_id"
                          ]
                        }
                      },
                      "schema_version": 1,
                      "count_expression": {
                        "references": [
                          "local.create_security_group"
                        ]
                      }
                    },
                    {
                      "address": "aws_security_group_rule.this",
                      "mode": "managed",
                      "type": "aws_security_group_rule",
                      "name": "this",
                      "provider_config_key": "self_managed_node_group:aws",
                      "expressions": {
                        "cidr_blocks": {
                          "references": [
                            "each.value.cidr_blocks",
                            "each.value"
                          ]
                        },
                        "description": {
                          "references": [
                            "each.value.description",
                            "each.value"
                          ]
                        },
                        "from_port": {
                          "references": [
                            "each.value.from_port",
                            "each.value"
                          ]
                        },
                        "ipv6_cidr_blocks": {
                          "references": [
                            "each.value.ipv6_cidr_blocks",
                            "each.value"
                          ]
                        },
                        "prefix_list_ids": {
                          "references": [
                            "each.value.prefix_list_ids",
                            "each.value"
                          ]
                        },
                        "protocol": {
                          "references": [
                            "each.value.protocol",
                            "each.value"
                          ]
                        },
                        "security_group_id": {
                          "references": [
                            "aws_security_group.this[0].id",
                            "aws_security_group.this[0]",
                            "aws_security_group.this"
                          ]
                        },
                        "self": {
                          "references": [
                            "each.value.self",
                            "each.value"
                          ]
                        },
                        "source_security_group_id": {
                          "references": [
                            "each.value.source_security_group_id",
                            "each.value",
                            "each.value.source_cluster_security_group",
                            "each.value",
                            "var.cluster_security_group_id"
                          ]
                        },
                        "to_port": {
                          "references": [
                            "each.value.to_port",
                            "each.value"
                          ]
                        },
                        "type": {
                          "references": [
                            "each.value.type",
                            "each.value"
                          ]
                        }
                      },
                      "schema_version": 2,
                      "for_each_expression": {
                        "references": [
                          "var.security_group_rules",
                          "local.create_security_group"
                        ]
                      }
                    },
                    {
                      "address": "data.aws_ami.eks_default",
                      "mode": "data",
                      "type": "aws_ami",
                      "name": "eks_default",
                      "provider_config_key": "self_managed_node_group:aws",
                      "expressions": {
                        "filter": [
                          {
                            "name": {
                              "constant_value": "name"
                            },
                            "values": {
                              "references": [
                                "var.cluster_version"
                              ]
                            }
                          }
                        ],
                        "most_recent": {
                          "constant_value": true
                        },
                        "owners": {
                          "constant_value": [
                            "amazon"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "var.create"
                        ]
                      }
                    },
                    {
                      "address": "data.aws_caller_identity.current",
                      "mode": "data",
                      "type": "aws_caller_identity",
                      "name": "current",
                      "provider_config_key": "self_managed_node_group:aws",
                      "schema_version": 0
                    },
                    {
                      "address": "data.aws_iam_policy_document.assume_role_policy",
                      "mode": "data",
                      "type": "aws_iam_policy_document",
                      "name": "assume_role_policy",
                      "provider_config_key": "self_managed_node_group:aws",
                      "expressions": {
                        "statement": [
                          {
                            "actions": {
                              "constant_value": [
                                "sts:AssumeRole"
                              ]
                            },
                            "principals": [
                              {
                                "identifiers": {
                                  "references": [
                                    "data.aws_partition.current.dns_suffix",
                                    "data.aws_partition.current"
                                  ]
                                },
                                "type": {
                                  "constant_value": "Service"
                                }
                              }
                            ],
                            "sid": {
                              "constant_value": "EKSNodeAssumeRole"
                            }
                          }
                        ]
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "var.create",
                          "var.create_iam_instance_profile"
                        ]
                      }
                    },
                    {
                      "address": "data.aws_partition.current",
                      "mode": "data",
                      "type": "aws_partition",
                      "name": "current",
                      "provider_config_key": "self_managed_node_group:aws",
                      "schema_version": 0
                    }
                  ],
                  "module_calls": {
                    "user_data": {
                      "source": "../_user_data",
                      "expressions": {
                        "bootstrap_extra_args": {
                          "references": [
                            "var.bootstrap_extra_args"
                          ]
                        },
                        "cluster_auth_base64": {
                          "references": [
                            "var.cluster_auth_base64"
                          ]
                        },
                        "cluster_endpoint": {
                          "references": [
                            "var.cluster_endpoint"
                          ]
                        },
                        "cluster_name": {
                          "references": [
                            "var.cluster_name"
                          ]
                        },
                        "create": {
                          "references": [
                            "var.create"
                          ]
                        },
                        "enable_bootstrap_user_data": {
                          "constant_value": true
                        },
                        "is_eks_managed_node_group": {
                          "constant_value": false
                        },
                        "platform": {
                          "references": [
                            "var.platform"
                          ]
                        },
                        "post_bootstrap_user_data": {
                          "references": [
                            "var.post_bootstrap_user_data"
                          ]
                        },
                        "pre_bootstrap_user_data": {
                          "references": [
                            "var.pre_bootstrap_user_data"
                          ]
                        },
                        "user_data_template_path": {
                          "references": [
                            "var.user_data_template_path"
                          ]
                        }
                      },
                      "module": {
                        "outputs": {
                          "user_data": {
                            "expression": {
                              "references": [
                                "local.platform",
                                "var.platform"
                              ]
                            },
                            "description": "Base64 encoded user data rendered for the provided inputs"
                          }
                        },
                        "resources": [
                          {
                            "address": "data.cloudinit_config.linux_eks_managed_node_group",
                            "mode": "data",
                            "type": "cloudinit_config",
                            "name": "linux_eks_managed_node_group",
                            "provider_config_key": "user_data:cloudinit",
                            "expressions": {
                              "base64_encode": {
                                "constant_value": true
                              },
                              "boundary": {
                                "constant_value": "//"
                              },
                              "gzip": {
                                "constant_value": false
                              },
                              "part": [
                                {
                                  "content": {
                                    "references": [
                                      "var.pre_bootstrap_user_data"
                                    ]
                                  },
                                  "content_type": {
                                    "constant_value": "text/x-shellscript"
                                  }
                                }
                              ]
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "var.create",
                                "var.platform",
                                "var.is_eks_managed_node_group",
                                "var.enable_bootstrap_user_data",
                                "var.pre_bootstrap_user_data",
                                "var.user_data_template_path"
                              ]
                            }
                          }
                        ],
                        "variables": {
                          "bootstrap_extra_args": {
                            "default": "",
                            "description": "Additional arguments passed to the bootstrap script. When `platform` = `bottlerocket`; these are additional [settings](https://github.com/bottlerocket-os/bottlerocket#settings) that are provided to the Bottlerocket user data"
                          },
                          "cluster_auth_base64": {
                            "default": "",
                            "description": "Base64 encoded CA of associated EKS cluster"
                          },
                          "cluster_endpoint": {
                            "default": "",
                            "description": "Endpoint of associated EKS cluster"
                          },
                          "cluster_name": {
                            "default": "",
                            "description": "Name of the EKS cluster"
                          },
                          "cluster_service_ipv4_cidr": {
                            "default": null,
                            "description": "The CIDR block to assign Kubernetes service IP addresses from. If you don't specify a block, Kubernetes assigns addresses from either the 10.100.0.0/16 or 172.20.0.0/16 CIDR blocks"
                          },
                          "create": {
                            "default": true,
                            "description": "Determines whether to create user-data or not"
                          },
                          "enable_bootstrap_user_data": {
                            "default": false,
                            "description": "Determines whether the bootstrap configurations are populated within the user data template"
                          },
                          "is_eks_managed_node_group": {
                            "default": true,
                            "description": "Determines whether the user data is used on nodes in an EKS managed node group. Used to determine if user data will be appended or not"
                          },
                          "platform": {
                            "default": "linux",
                            "description": "Identifies if the OS platform is `bottlerocket`, `linux`, or `windows` based"
                          },
                          "post_bootstrap_user_data": {
                            "default": "",
                            "description": "User data that is appended to the user data script after of the EKS bootstrap script. Not used when `platform` = `bottlerocket`"
                          },
                          "pre_bootstrap_user_data": {
                            "default": "",
                            "description": "User data that is injected into the user data script ahead of the EKS bootstrap script. Not used when `platform` = `bottlerocket`"
                          },
                          "user_data_template_path": {
                            "default": "",
                            "description": "Path to a local, custom user data template file to use when rendering user data"
                          }
                        }
                      }
                    }
                  },
                  "variables": {
                    "ami_id": {
                      "default": "",
                      "description": "The AMI from which to launch the instance"
                    },
                    "availability_zones": {
                      "default": null,
                      "description": "A list of one or more availability zones for the group. Used for EC2-Classic and default subnets when not specified with `subnet_ids` argument. Conflicts with `subnet_ids`"
                    },
                    "block_device_mappings": {
                      "default": {},
                      "description": "Specify volumes to attach to the instance besides the volumes specified by the AMI"
                    },
                    "bootstrap_extra_args": {
                      "default": "",
                      "description": "Additional arguments passed to the bootstrap script. When `platform` = `bottlerocket`; these are additional [settings](https://github.com/bottlerocket-os/bottlerocket#settings) that are provided to the Bottlerocket user data"
                    },
                    "capacity_rebalance": {
                      "default": null,
                      "description": "Indicates whether capacity rebalance is enabled"
                    },
                    "capacity_reservation_specification": {
                      "default": null,
                      "description": "Targeting for EC2 capacity reservations"
                    },
                    "cluster_auth_base64": {
                      "default": "",
                      "description": "Base64 encoded CA of associated EKS cluster"
                    },
                    "cluster_endpoint": {
                      "default": "",
                      "description": "Endpoint of associated EKS cluster"
                    },
                    "cluster_ip_family": {
                      "default": null,
                      "description": "The IP family used to assign Kubernetes pod and service addresses. Valid values are `ipv4` (default) and `ipv6`"
                    },
                    "cluster_name": {
                      "default": null,
                      "description": "Name of associated EKS cluster"
                    },
                    "cluster_security_group_id": {
                      "default": null,
                      "description": "Cluster control plane security group ID"
                    },
                    "cluster_version": {
                      "default": null,
                      "description": "Kubernetes cluster version - used to lookup default AMI ID if one is not provided"
                    },
                    "cpu_options": {
                      "default": null,
                      "description": "The CPU options for the instance"
                    },
                    "create": {
                      "default": true,
                      "description": "Determines whether to create self managed node group or not"
                    },
                    "create_iam_instance_profile": {
                      "default": true,
                      "description": "Determines whether an IAM instance profile is created or to use an existing IAM instance profile"
                    },
                    "create_launch_template": {
                      "default": true,
                      "description": "Determines whether to create launch template or not"
                    },
                    "create_schedule": {
                      "default": true,
                      "description": "Determines whether to create autoscaling group schedule or not"
                    },
                    "create_security_group": {
                      "default": true,
                      "description": "Determines whether to create a security group"
                    },
                    "credit_specification": {
                      "default": null,
                      "description": "Customize the credit specification of the instance"
                    },
                    "default_cooldown": {
                      "default": null,
                      "description": "The amount of time, in seconds, after a scaling activity completes before another scaling activity can start"
                    },
                    "delete_timeout": {
                      "default": null,
                      "description": "Delete timeout to wait for destroying autoscaling group"
                    },
                    "desired_size": {
                      "default": 1,
                      "description": "The number of Amazon EC2 instances that should be running in the autoscaling group"
                    },
                    "disable_api_termination": {
                      "default": null,
                      "description": "If true, enables EC2 instance termination protection"
                    },
                    "ebs_optimized": {
                      "default": null,
                      "description": "If true, the launched EC2 instance will be EBS-optimized"
                    },
                    "elastic_gpu_specifications": {
                      "default": null,
                      "description": "The elastic GPU to attach to the instance"
                    },
                    "elastic_inference_accelerator": {
                      "default": null,
                      "description": "Configuration block containing an Elastic Inference Accelerator to attach to the instance"
                    },
                    "enable_monitoring": {
                      "default": true,
                      "description": "Enables/disables detailed monitoring"
                    },
                    "enabled_metrics": {
                      "default": null,
                      "description": "A list of metrics to collect. The allowed values are `GroupDesiredCapacity`, `GroupInServiceCapacity`, `GroupPendingCapacity`, `GroupMinSize`, `GroupMaxSize`, `GroupInServiceInstances`, `GroupPendingInstances`, `GroupStandbyInstances`, `GroupStandbyCapacity`, `GroupTerminatingCapacity`, `GroupTerminatingInstances`, `GroupTotalCapacity`, `GroupTotalInstances`"
                    },
                    "enclave_options": {
                      "default": null,
                      "description": "Enable Nitro Enclaves on launched instances"
                    },
                    "force_delete": {
                      "default": null,
                      "description": "Allows deleting the Auto Scaling Group without waiting for all instances in the pool to terminate. You can force an Auto Scaling Group to delete even if it's in the process of scaling a resource. Normally, Terraform drains all the instances before deleting the group. This bypasses that behavior and potentially leaves resources dangling"
                    },
                    "health_check_grace_period": {
                      "default": null,
                      "description": "Time (in seconds) after instance comes into service before checking health"
                    },
                    "health_check_type": {
                      "default": null,
                      "description": "`EC2` or `ELB`. Controls how health checking is done"
                    },
                    "hibernation_options": {
                      "default": null,
                      "description": "The hibernation options for the instance"
                    },
                    "iam_instance_profile_arn": {
                      "default": null,
                      "description": "Amazon Resource Name (ARN) of an existing IAM instance profile that provides permissions for the node group. Required if `create_iam_instance_profile` = `false`"
                    },
                    "iam_role_additional_policies": {
                      "default": [],
                      "description": "Additional policies to be added to the IAM role"
                    },
                    "iam_role_attach_cni_policy": {
                      "default": true,
                      "description": "Whether to attach the `AmazonEKS_CNI_Policy`/`AmazonEKS_CNI_IPv6_Policy` IAM policy to the IAM IAM role. WARNING: If set `false` the permissions must be assigned to the `aws-node` DaemonSet pods via another method or nodes will not be able to join the cluster"
                    },
                    "iam_role_description": {
                      "default": null,
                      "description": "Description of the role"
                    },
                    "iam_role_name": {
                      "default": null,
                      "description": "Name to use on IAM role created"
                    },
                    "iam_role_path": {
                      "default": null,
                      "description": "IAM role path"
                    },
                    "iam_role_permissions_boundary": {
                      "default": null,
                      "description": "ARN of the policy that is used to set the permissions boundary for the IAM role"
                    },
                    "iam_role_tags": {
                      "default": {},
                      "description": "A map of additional tags to add to the IAM role created"
                    },
                    "iam_role_use_name_prefix": {
                      "default": "true",
                      "description": "Determines whether cluster IAM role name (`iam_role_name`) is used as a prefix"
                    },
                    "initial_lifecycle_hooks": {
                      "default": [],
                      "description": "One or more Lifecycle Hooks to attach to the Auto Scaling Group before instances are launched. The syntax is exactly the same as the separate `aws_autoscaling_lifecycle_hook` resource, without the `autoscaling_group_name` attribute. Please note that this will only work when creating a new Auto Scaling Group. For all other use-cases, please use `aws_autoscaling_lifecycle_hook` resource"
                    },
                    "instance_initiated_shutdown_behavior": {
                      "default": null,
                      "description": "Shutdown behavior for the instance. Can be `stop` or `terminate`. (Default: `stop`)"
                    },
                    "instance_market_options": {
                      "default": null,
                      "description": "The market (purchasing) option for the instance"
                    },
                    "instance_refresh": {
                      "default": null,
                      "description": "If this block is configured, start an Instance Refresh when this Auto Scaling Group is updated"
                    },
                    "instance_type": {
                      "default": "",
                      "description": "The type of the instance to launch"
                    },
                    "kernel_id": {
                      "default": null,
                      "description": "The kernel ID"
                    },
                    "key_name": {
                      "default": null,
                      "description": "The key name that should be used for the instance"
                    },
                    "launch_template_default_version": {
                      "default": null,
                      "description": "Default Version of the launch template"
                    },
                    "launch_template_description": {
                      "default": null,
                      "description": "Description of the launch template"
                    },
                    "launch_template_name": {
                      "default": null,
                      "description": "Launch template name - either to be created (`var.create_launch_template` = `true`) or existing (`var.create_launch_template` = `false`)"
                    },
                    "launch_template_use_name_prefix": {
                      "default": true,
                      "description": "Determines whether to use `launch_template_name` as is or create a unique name beginning with the `launch_template_name` as the prefix"
                    },
                    "launch_template_version": {
                      "default": null,
                      "description": "Launch template version. Can be version number, `$Latest`, or `$Default`"
                    },
                    "license_specifications": {
                      "default": null,
                      "description": "A list of license specifications to associate with"
                    },
                    "max_instance_lifetime": {
                      "default": null,
                      "description": "The maximum amount of time, in seconds, that an instance can be in service, values must be either equal to 0 or between 604800 and 31536000 seconds"
                    },
                    "max_size": {
                      "default": 3,
                      "description": "The maximum size of the autoscaling group"
                    },
                    "metadata_options": {
                      "default": {
                        "http_endpoint": "enabled",
                        "http_put_response_hop_limit": "2",
                        "http_tokens": "required"
                      },
                      "description": "Customize the metadata options for the instance"
                    },
                    "metrics_granularity": {
                      "default": null,
                      "description": "The granularity to associate with the metrics to collect. The only valid value is `1Minute`"
                    },
                    "min_elb_capacity": {
                      "default": null,
                      "description": "Setting this causes Terraform to wait for this number of instances to show up healthy in the ELB only on creation. Updates will not wait on ELB instance number changes"
                    },
                    "min_size": {
                      "default": 0,
                      "description": "The minimum size of the autoscaling group"
                    },
                    "mixed_instances_policy": {
                      "default": null,
                      "description": "Configuration block containing settings to define launch targets for Auto Scaling groups"
                    },
                    "name": {
                      "default": "",
                      "description": "Name of the Self managed Node Group"
                    },
                    "network_interfaces": {
                      "default": [],
                      "description": "Customize network interfaces to be attached at instance boot time"
                    },
                    "placement": {
                      "default": null,
                      "description": "The placement of the instance"
                    },
                    "placement_group": {
                      "default": null,
                      "description": "The name of the placement group into which you'll launch your instances, if any"
                    },
                    "platform": {
                      "default": "linux",
                      "description": "Identifies if the OS platform is `bottlerocket`, `linux`, or `windows` based"
                    },
                    "post_bootstrap_user_data": {
                      "default": "",
                      "description": "User data that is appended to the user data script after of the EKS bootstrap script. Not used when `platform` = `bottlerocket`"
                    },
                    "pre_bootstrap_user_data": {
                      "default": "",
                      "description": "User data that is injected into the user data script ahead of the EKS bootstrap script. Not used when `platform` = `bottlerocket`"
                    },
                    "propagate_tags": {
                      "default": [],
                      "description": "A list of tag blocks. Each element should have keys named `key`, `value`, and `propagate_at_launch`"
                    },
                    "protect_from_scale_in": {
                      "default": false,
                      "description": "Allows setting instance protection. The autoscaling group will not select instances with this setting for termination during scale in events."
                    },
                    "ram_disk_id": {
                      "default": null,
                      "description": "The ID of the ram disk"
                    },
                    "schedules": {
                      "default": {},
                      "description": "Map of autoscaling group schedule to create"
                    },
                    "security_group_description": {
                      "default": "EKS self-managed node group security group",
                      "description": "Description for the security group created"
                    },
                    "security_group_name": {
                      "default": null,
                      "description": "Name to use on security group created"
                    },
                    "security_group_rules": {
                      "default": {},
                      "description": "List of security group rules to add to the security group created"
                    },
                    "security_group_tags": {
                      "default": {},
                      "description": "A map of additional tags to add to the security group created"
                    },
                    "security_group_use_name_prefix": {
                      "default": "true",
                      "description": "Determines whether the security group name (`security_group_name`) is used as a prefix"
                    },
                    "service_linked_role_arn": {
                      "default": null,
                      "description": "The ARN of the service-linked role that the ASG will use to call other AWS services"
                    },
                    "subnet_ids": {
                      "default": null,
                      "description": "A list of subnet IDs to launch resources in. Subnets automatically determine which availability zones the group will reside. Conflicts with `availability_zones`"
                    },
                    "suspended_processes": {
                      "default": null,
                      "description": "A list of processes to suspend for the Auto Scaling Group. The allowed values are `Launch`, `Terminate`, `HealthCheck`, `ReplaceUnhealthy`, `AZRebalance`, `AlarmNotification`, `ScheduledActions`, `AddToLoadBalancer`. Note that if you suspend either the `Launch` or `Terminate` process types, it can prevent your Auto Scaling Group from functioning properly"
                    },
                    "tags": {
                      "default": {},
                      "description": "A map of tags to add to all resources"
                    },
                    "target_group_arns": {
                      "default": [],
                      "description": "A set of `aws_alb_target_group` ARNs, for use with Application or Network Load Balancing"
                    },
                    "termination_policies": {
                      "default": null,
                      "description": "A list of policies to decide how the instances in the Auto Scaling Group should be terminated. The allowed values are `OldestInstance`, `NewestInstance`, `OldestLaunchConfiguration`, `ClosestToNextInstanceHour`, `OldestLaunchTemplate`, `AllocationStrategy`, `Default`"
                    },
                    "update_launch_template_default_version": {
                      "default": true,
                      "description": "Whether to update Default Version each update. Conflicts with `launch_template_default_version`"
                    },
                    "use_mixed_instances_policy": {
                      "default": false,
                      "description": "Determines whether to use a mixed instances policy in the autoscaling group or not"
                    },
                    "use_name_prefix": {
                      "default": true,
                      "description": "Determines whether to use `name` as is or create a unique name beginning with the `name` as the prefix"
                    },
                    "user_data_template_path": {
                      "default": "",
                      "description": "Path to a local, custom user data template file to use when rendering user data"
                    },
                    "vpc_id": {
                      "default": null,
                      "description": "ID of the VPC where the security group/nodes will be provisioned"
                    },
                    "vpc_security_group_ids": {
                      "default": [],
                      "description": "A list of security group IDs to associate"
                    },
                    "wait_for_capacity_timeout": {
                      "default": null,
                      "description": "A maximum duration that Terraform should wait for ASG instances to be healthy before timing out. (See also Waiting for Capacity below.) Setting this to '0' causes Terraform to skip all Capacity Waiting behavior."
                    },
                    "wait_for_elb_capacity": {
                      "default": null,
                      "description": "Setting this will cause Terraform to wait for exactly this number of healthy instances in all attached load balancers on both create and update operations. Takes precedence over `min_elb_capacity` behavior."
                    },
                    "warm_pool": {
                      "default": null,
                      "description": "If this block is configured, add a Warm Pool to the specified Auto Scaling group"
                    }
                  }
                }
              }
            },
            "variables": {
              "cloudwatch_log_group_kms_key_id": {
                "default": null,
                "description": "If a KMS Key ARN is set, this key will be used to encrypt the corresponding log group. Please be sure that the KMS Key has an appropriate key policy (https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/encrypt-log-data-kms.html)"
              },
              "cloudwatch_log_group_retention_in_days": {
                "default": 90,
                "description": "Number of days to retain log events. Default retention - 90 days"
              },
              "cluster_additional_security_group_ids": {
                "default": [],
                "description": "List of additional, externally created security group IDs to attach to the cluster control plane"
              },
              "cluster_addons": {
                "default": {},
                "description": "Map of cluster addon configurations to enable for the cluster. Addon name can be the map keys or set with `name`"
              },
              "cluster_enabled_log_types": {
                "default": [
                  "audit",
                  "api",
                  "authenticator"
                ],
                "description": "A list of the desired control plane logs to enable. For more information, see Amazon EKS Control Plane Logging documentation (https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html)"
              },
              "cluster_encryption_config": {
                "default": [],
                "description": "Configuration block with encryption configuration for the cluster"
              },
              "cluster_endpoint_private_access": {
                "default": false,
                "description": "Indicates whether or not the Amazon EKS private API server endpoint is enabled"
              },
              "cluster_endpoint_public_access": {
                "default": true,
                "description": "Indicates whether or not the Amazon EKS public API server endpoint is enabled"
              },
              "cluster_endpoint_public_access_cidrs": {
                "default": [
                  "0.0.0.0/0"
                ],
                "description": "List of CIDR blocks which can access the Amazon EKS public API server endpoint"
              },
              "cluster_identity_providers": {
                "default": {},
                "description": "Map of cluster identity provider configurations to enable for the cluster. Note - this is different/separate from IRSA"
              },
              "cluster_ip_family": {
                "default": null,
                "description": "The IP family used to assign Kubernetes pod and service addresses. Valid values are `ipv4` (default) and `ipv6`. You can only specify an IP family when you create a cluster, changing this value will force a new cluster to be created"
              },
              "cluster_name": {
                "default": "",
                "description": "Name of the EKS cluster"
              },
              "cluster_security_group_additional_rules": {
                "default": {},
                "description": "List of additional security group rules to add to the cluster security group created"
              },
              "cluster_security_group_description": {
                "default": "EKS cluster security group",
                "description": "Description of the cluster security group created"
              },
              "cluster_security_group_id": {
                "default": "",
                "description": "Existing security group ID to be attached to the cluster. Required if `create_cluster_security_group` = `false`"
              },
              "cluster_security_group_name": {
                "default": null,
                "description": "Name to use on cluster security group created"
              },
              "cluster_security_group_tags": {
                "default": {},
                "description": "A map of additional tags to add to the cluster security group created"
              },
              "cluster_security_group_use_name_prefix": {
                "default": "true",
                "description": "Determines whether cluster security group name (`cluster_security_group_name`) is used as a prefix"
              },
              "cluster_service_ipv4_cidr": {
                "default": null,
                "description": "The CIDR block to assign Kubernetes service IP addresses from. If you don't specify a block, Kubernetes assigns addresses from either the 10.100.0.0/16 or 172.20.0.0/16 CIDR blocks"
              },
              "cluster_tags": {
                "default": {},
                "description": "A map of additional tags to add to the cluster"
              },
              "cluster_timeouts": {
                "default": {},
                "description": "Create, update, and delete timeout configurations for the cluster"
              },
              "cluster_version": {
                "default": null,
                "description": "Kubernetes `<major>.<minor>` version to use for the EKS cluster (i.e.: `1.21`)"
              },
              "create": {
                "default": true,
                "description": "Controls if EKS resources should be created (affects nearly all resources)"
              },
              "create_cloudwatch_log_group": {
                "default": true,
                "description": "Determines whether a log group is created by this module for the cluster logs. If not, AWS will automatically create one if logging is enabled"
              },
              "create_cluster_security_group": {
                "default": true,
                "description": "Determines if a security group is created for the cluster or use the existing `cluster_security_group_id`"
              },
              "create_cni_ipv6_iam_policy": {
                "default": false,
                "description": "Determines whether to create an [`AmazonEKS_CNI_IPv6_Policy`](https://docs.aws.amazon.com/eks/latest/userguide/cni-iam-role.html#cni-iam-role-create-ipv6-policy)"
              },
              "create_iam_role": {
                "default": true,
                "description": "Determines whether a an IAM role is created or to use an existing IAM role"
              },
              "create_node_security_group": {
                "default": true,
                "description": "Determines whether to create a security group for the node groups or use the existing `node_security_group_id`"
              },
              "eks_managed_node_group_defaults": {
                "default": {},
                "description": "Map of EKS managed node group default configurations"
              },
              "eks_managed_node_groups": {
                "default": {},
                "description": "Map of EKS managed node group definitions to create"
              },
              "enable_irsa": {
                "default": false,
                "description": "Determines whether to create an OpenID Connect Provider for EKS to enable IRSA"
              },
              "fargate_profile_defaults": {
                "default": {},
                "description": "Map of Fargate Profile default configurations"
              },
              "fargate_profiles": {
                "default": {},
                "description": "Map of Fargate Profile definitions to create"
              },
              "iam_role_additional_policies": {
                "default": [],
                "description": "Additional policies to be added to the IAM role"
              },
              "iam_role_arn": {
                "default": null,
                "description": "Existing IAM role ARN for the cluster. Required if `create_iam_role` is set to `false`"
              },
              "iam_role_description": {
                "default": null,
                "description": "Description of the role"
              },
              "iam_role_name": {
                "default": null,
                "description": "Name to use on IAM role created"
              },
              "iam_role_path": {
                "default": null,
                "description": "Cluster IAM role path"
              },
              "iam_role_permissions_boundary": {
                "default": null,
                "description": "ARN of the policy that is used to set the permissions boundary for the IAM role"
              },
              "iam_role_tags": {
                "default": {},
                "description": "A map of additional tags to add to the IAM role created"
              },
              "iam_role_use_name_prefix": {
                "default": "true",
                "description": "Determines whether the IAM role name (`iam_role_name`) is used as a prefix"
              },
              "node_security_group_additional_rules": {
                "default": {},
                "description": "List of additional security group rules to add to the node security group created"
              },
              "node_security_group_description": {
                "default": "EKS node shared security group",
                "description": "Description of the node security group created"
              },
              "node_security_group_id": {
                "default": "",
                "description": "ID of an existing security group to attach to the node groups created"
              },
              "node_security_group_name": {
                "default": null,
                "description": "Name to use on node security group created"
              },
              "node_security_group_tags": {
                "default": {},
                "description": "A map of additional tags to add to the node security group created"
              },
              "node_security_group_use_name_prefix": {
                "default": "true",
                "description": "Determines whether node security group name (`node_security_group_name`) is used as a prefix"
              },
              "openid_connect_audiences": {
                "default": [],
                "description": "List of OpenID Connect audience client IDs to add to the IRSA provider"
              },
              "prefix_separator": {
                "default": "-",
                "description": "The separator to use between the prefix and the generated timestamp for resource names"
              },
              "self_managed_node_group_defaults": {
                "default": {},
                "description": "Map of self-managed node group default configurations"
              },
              "self_managed_node_groups": {
                "default": {},
                "description": "Map of self-managed node group definitions to create"
              },
              "subnet_ids": {
                "default": [],
                "description": "A list of subnet IDs where the EKS cluster (ENIs) will be provisioned along with the nodes/node groups. Node groups can be deployed within a different set of subnet IDs from within the node group configuration"
              },
              "tags": {
                "default": {},
                "description": "A map of tags to add to all resources"
              },
              "vpc_id": {
                "default": null,
                "description": "ID of the VPC where the cluster and its nodes will be provisioned"
              }
            }
          },
          "version_constraint": "18.2.1"
        },
        "vpc": {
          "source": "terraform-aws-modules/vpc/aws",
          "expressions": {
            "azs": {
              "constant_value": [
                "us-east-1a",
                "us-east-1b",
                "us-east-1c"
              ]
            },
            "cidr": {
              "constant_value": "10.0.0.0/16"
            },
            "enable_dns_hostnames": {
              "constant_value": true
            },
            "enable_nat_gateway": {
              "constant_value": true
            },
            "name": {
              "references": [
                "var.environment",
                "var.vpc_name"
              ]
            },
            "private_subnet_tags": {
              "references": [
                "var.environment",
                "var.cluster_name"
              ]
            },
            "private_subnets": {
              "constant_value": [
                "10.0.1.0/24",
                "10.0.2.0/24",
                "10.0.3.0/24"
              ]
            },
            "public_subnet_tags": {
              "references": [
                "var.environment",
                "var.cluster_name"
              ]
            },
            "public_subnets": {
              "constant_value": [
                "10.0.101.0/24",
                "10.0.102.0/24",
                "10.0.103.0/24"
              ]
            },
            "single_nat_gateway": {
              "constant_value": true
            },
            "tags": {
              "references": [
                "var.tags"
              ]
            }
          },
          "module": {
            "outputs": {
              "azs": {
                "expression": {
                  "references": [
                    "var.azs"
                  ]
                },
                "description": "A list of availability zones specified as argument to this module"
              },
              "cgw_arns": {
                "expression": {
                  "references": [
                    "aws_customer_gateway.this"
                  ]
                },
                "description": "List of ARNs of Customer Gateway"
              },
              "cgw_ids": {
                "expression": {
                  "references": [
                    "aws_customer_gateway.this"
                  ]
                },
                "description": "List of IDs of Customer Gateway"
              },
              "database_internet_gateway_route_id": {
                "expression": {
                  "references": [
                    "aws_route.database_internet_gateway[0].id",
                    "aws_route.database_internet_gateway[0]",
                    "aws_route.database_internet_gateway"
                  ]
                },
                "description": "ID of the database internet gateway route"
              },
              "database_ipv6_egress_route_id": {
                "expression": {
                  "references": [
                    "aws_route.database_ipv6_egress[0].id",
                    "aws_route.database_ipv6_egress[0]",
                    "aws_route.database_ipv6_egress"
                  ]
                },
                "description": "ID of the database IPv6 egress route"
              },
              "database_nat_gateway_route_ids": {
                "expression": {
                  "references": [
                    "aws_route.database_nat_gateway"
                  ]
                },
                "description": "List of IDs of the database nat gateway route"
              },
              "database_network_acl_arn": {
                "expression": {
                  "references": [
                    "aws_network_acl.database[0].arn",
                    "aws_network_acl.database[0]",
                    "aws_network_acl.database"
                  ]
                },
                "description": "ARN of the database network ACL"
              },
              "database_network_acl_id": {
                "expression": {
                  "references": [
                    "aws_network_acl.database[0].id",
                    "aws_network_acl.database[0]",
                    "aws_network_acl.database"
                  ]
                },
                "description": "ID of the database network ACL"
              },
              "database_route_table_association_ids": {
                "expression": {
                  "references": [
                    "aws_route_table_association.database"
                  ]
                },
                "description": "List of IDs of the database route table association"
              },
              "database_route_table_ids": {
                "expression": {
                  "references": [
                    "aws_route_table.database",
                    "aws_route_table.private"
                  ]
                },
                "description": "List of IDs of database route tables"
              },
              "database_subnet_arns": {
                "expression": {
                  "references": [
                    "aws_subnet.database"
                  ]
                },
                "description": "List of ARNs of database subnets"
              },
              "database_subnet_group": {
                "expression": {
                  "references": [
                    "aws_db_subnet_group.database[0].id",
                    "aws_db_subnet_group.database[0]",
                    "aws_db_subnet_group.database"
                  ]
                },
                "description": "ID of database subnet group"
              },
              "database_subnet_group_name": {
                "expression": {
                  "references": [
                    "aws_db_subnet_group.database[0].name",
                    "aws_db_subnet_group.database[0]",
                    "aws_db_subnet_group.database"
                  ]
                },
                "description": "Name of database subnet group"
              },
              "database_subnets": {
                "expression": {
                  "references": [
                    "aws_subnet.database"
                  ]
                },
                "description": "List of IDs of database subnets"
              },
              "database_subnets_cidr_blocks": {
                "expression": {
                  "references": [
                    "aws_subnet.database"
                  ]
                },
                "description": "List of cidr_blocks of database subnets"
              },
              "database_subnets_ipv6_cidr_blocks": {
                "expression": {
                  "references": [
                    "aws_subnet.database"
                  ]
                },
                "description": "List of IPv6 cidr_blocks of database subnets in an IPv6 enabled VPC"
              },
              "default_network_acl_id": {
                "expression": {
                  "references": [
                    "aws_vpc.this[0].default_network_acl_id",
                    "aws_vpc.this[0]",
                    "aws_vpc.this"
                  ]
                },
                "description": "The ID of the default network ACL"
              },
              "default_route_table_id": {
                "expression": {
                  "references": [
                    "aws_vpc.this[0].default_route_table_id",
                    "aws_vpc.this[0]",
                    "aws_vpc.this"
                  ]
                },
                "description": "The ID of the default route table"
              },
              "default_security_group_id": {
                "expression": {
                  "references": [
                    "aws_vpc.this[0].default_security_group_id",
                    "aws_vpc.this[0]",
                    "aws_vpc.this"
                  ]
                },
                "description": "The ID of the security group created by default on VPC creation"
              },
              "default_vpc_arn": {
                "expression": {
                  "references": [
                    "aws_default_vpc.this[0].arn",
                    "aws_default_vpc.this[0]",
                    "aws_default_vpc.this"
                  ]
                },
                "description": "The ARN of the Default VPC"
              },
              "default_vpc_cidr_block": {
                "expression": {
                  "references": [
                    "aws_default_vpc.this[0].cidr_block",
                    "aws_default_vpc.this[0]",
                    "aws_default_vpc.this"
                  ]
                },
                "description": "The CIDR block of the Default VPC"
              },
              "default_vpc_default_network_acl_id": {
                "expression": {
                  "references": [
                    "aws_default_vpc.this[0].default_network_acl_id",
                    "aws_default_vpc.this[0]",
                    "aws_default_vpc.this"
                  ]
                },
                "description": "The ID of the default network ACL of the Default VPC"
              },
              "default_vpc_default_route_table_id": {
                "expression": {
                  "references": [
                    "aws_default_vpc.this[0].default_route_table_id",
                    "aws_default_vpc.this[0]",
                    "aws_default_vpc.this"
                  ]
                },
                "description": "The ID of the default route table of the Default VPC"
              },
              "default_vpc_default_security_group_id": {
                "expression": {
                  "references": [
                    "aws_default_vpc.this[0].default_security_group_id",
                    "aws_default_vpc.this[0]",
                    "aws_default_vpc.this"
                  ]
                },
                "description": "The ID of the security group created by default on Default VPC creation"
              },
              "default_vpc_enable_dns_hostnames": {
                "expression": {
                  "references": [
                    "aws_default_vpc.this[0].enable_dns_hostnames",
                    "aws_default_vpc.this[0]",
                    "aws_default_vpc.this"
                  ]
                },
                "description": "Whether or not the Default VPC has DNS hostname support"
              },
              "default_vpc_enable_dns_support": {
                "expression": {
                  "references": [
                    "aws_default_vpc.this[0].enable_dns_support",
                    "aws_default_vpc.this[0]",
                    "aws_default_vpc.this"
                  ]
                },
                "description": "Whether or not the Default VPC has DNS support"
              },
              "default_vpc_id": {
                "expression": {
                  "references": [
                    "aws_default_vpc.this[0].id",
                    "aws_default_vpc.this[0]",
                    "aws_default_vpc.this"
                  ]
                },
                "description": "The ID of the Default VPC"
              },
              "default_vpc_instance_tenancy": {
                "expression": {
                  "references": [
                    "aws_default_vpc.this[0].instance_tenancy",
                    "aws_default_vpc.this[0]",
                    "aws_default_vpc.this"
                  ]
                },
                "description": "Tenancy of instances spin up within Default VPC"
              },
              "default_vpc_main_route_table_id": {
                "expression": {
                  "references": [
                    "aws_default_vpc.this[0].main_route_table_id",
                    "aws_default_vpc.this[0]",
                    "aws_default_vpc.this"
                  ]
                },
                "description": "The ID of the main route table associated with the Default VPC"
              },
              "dhcp_options_id": {
                "expression": {
                  "references": [
                    "aws_vpc_dhcp_options.this[0].id",
                    "aws_vpc_dhcp_options.this[0]",
                    "aws_vpc_dhcp_options.this"
                  ]
                },
                "description": "The ID of the DHCP options"
              },
              "egress_only_internet_gateway_id": {
                "expression": {
                  "references": [
                    "aws_egress_only_internet_gateway.this[0].id",
                    "aws_egress_only_internet_gateway.this[0]",
                    "aws_egress_only_internet_gateway.this"
                  ]
                },
                "description": "The ID of the egress only Internet Gateway"
              },
              "elasticache_network_acl_arn": {
                "expression": {
                  "references": [
                    "aws_network_acl.elasticache[0].arn",
                    "aws_network_acl.elasticache[0]",
                    "aws_network_acl.elasticache"
                  ]
                },
                "description": "ARN of the elasticache network ACL"
              },
              "elasticache_network_acl_id": {
                "expression": {
                  "references": [
                    "aws_network_acl.elasticache[0].id",
                    "aws_network_acl.elasticache[0]",
                    "aws_network_acl.elasticache"
                  ]
                },
                "description": "ID of the elasticache network ACL"
              },
              "elasticache_route_table_association_ids": {
                "expression": {
                  "references": [
                    "aws_route_table_association.elasticache"
                  ]
                },
                "description": "List of IDs of the elasticache route table association"
              },
              "elasticache_route_table_ids": {
                "expression": {
                  "references": [
                    "aws_route_table.elasticache",
                    "aws_route_table.private"
                  ]
                },
                "description": "List of IDs of elasticache route tables"
              },
              "elasticache_subnet_arns": {
                "expression": {
                  "references": [
                    "aws_subnet.elasticache"
                  ]
                },
                "description": "List of ARNs of elasticache subnets"
              },
              "elasticache_subnet_group": {
                "expression": {
                  "references": [
                    "aws_elasticache_subnet_group.elasticache[0].id",
                    "aws_elasticache_subnet_group.elasticache[0]",
                    "aws_elasticache_subnet_group.elasticache"
                  ]
                },
                "description": "ID of elasticache subnet group"
              },
              "elasticache_subnet_group_name": {
                "expression": {
                  "references": [
                    "aws_elasticache_subnet_group.elasticache[0].name",
                    "aws_elasticache_subnet_group.elasticache[0]",
                    "aws_elasticache_subnet_group.elasticache"
                  ]
                },
                "description": "Name of elasticache subnet group"
              },
              "elasticache_subnets": {
                "expression": {
                  "references": [
                    "aws_subnet.elasticache"
                  ]
                },
                "description": "List of IDs of elasticache subnets"
              },
              "elasticache_subnets_cidr_blocks": {
                "expression": {
                  "references": [
                    "aws_subnet.elasticache"
                  ]
                },
                "description": "List of cidr_blocks of elasticache subnets"
              },
              "elasticache_subnets_ipv6_cidr_blocks": {
                "expression": {
                  "references": [
                    "aws_subnet.elasticache"
                  ]
                },
                "description": "List of IPv6 cidr_blocks of elasticache subnets in an IPv6 enabled VPC"
              },
              "igw_arn": {
                "expression": {
                  "references": [
                    "aws_internet_gateway.this[0].arn",
                    "aws_internet_gateway.this[0]",
                    "aws_internet_gateway.this"
                  ]
                },
                "description": "The ARN of the Internet Gateway"
              },
              "igw_id": {
                "expression": {
                  "references": [
                    "aws_internet_gateway.this[0].id",
                    "aws_internet_gateway.this[0]",
                    "aws_internet_gateway.this"
                  ]
                },
                "description": "The ID of the Internet Gateway"
              },
              "intra_network_acl_arn": {
                "expression": {
                  "references": [
                    "aws_network_acl.intra[0].arn",
                    "aws_network_acl.intra[0]",
                    "aws_network_acl.intra"
                  ]
                },
                "description": "ARN of the intra network ACL"
              },
              "intra_network_acl_id": {
                "expression": {
                  "references": [
                    "aws_network_acl.intra[0].id",
                    "aws_network_acl.intra[0]",
                    "aws_network_acl.intra"
                  ]
                },
                "description": "ID of the intra network ACL"
              },
              "intra_route_table_association_ids": {
                "expression": {
                  "references": [
                    "aws_route_table_association.intra"
                  ]
                },
                "description": "List of IDs of the intra route table association"
              },
              "intra_route_table_ids": {
                "expression": {
                  "references": [
                    "aws_route_table.intra"
                  ]
                },
                "description": "List of IDs of intra route tables"
              },
              "intra_subnet_arns": {
                "expression": {
                  "references": [
                    "aws_subnet.intra"
                  ]
                },
                "description": "List of ARNs of intra subnets"
              },
              "intra_subnets": {
                "expression": {
                  "references": [
                    "aws_subnet.intra"
                  ]
                },
                "description": "List of IDs of intra subnets"
              },
              "intra_subnets_cidr_blocks": {
                "expression": {
                  "references": [
                    "aws_subnet.intra"
                  ]
                },
                "description": "List of cidr_blocks of intra subnets"
              },
              "intra_subnets_ipv6_cidr_blocks": {
                "expression": {
                  "references": [
                    "aws_subnet.intra"
                  ]
                },
                "description": "List of IPv6 cidr_blocks of intra subnets in an IPv6 enabled VPC"
              },
              "name": {
                "expression": {
                  "references": [
                    "var.name"
                  ]
                },
                "description": "The name of the VPC specified as argument to this module"
              },
              "nat_ids": {
                "expression": {
                  "references": [
                    "aws_eip.nat"
                  ]
                },
                "description": "List of allocation ID of Elastic IPs created for AWS NAT Gateway"
              },
              "nat_public_ips": {
                "expression": {
                  "references": [
                    "var.reuse_nat_ips",
                    "var.external_nat_ips",
                    "aws_eip.nat"
                  ]
                },
                "description": "List of public Elastic IPs created for AWS NAT Gateway"
              },
              "natgw_ids": {
                "expression": {
                  "references": [
                    "aws_nat_gateway.this"
                  ]
                },
                "description": "List of NAT Gateway IDs"
              },
              "outpost_network_acl_arn": {
                "expression": {
                  "references": [
                    "aws_network_acl.outpost[0].arn",
                    "aws_network_acl.outpost[0]",
                    "aws_network_acl.outpost"
                  ]
                },
                "description": "ARN of the outpost network ACL"
              },
              "outpost_network_acl_id": {
                "expression": {
                  "references": [
                    "aws_network_acl.outpost[0].id",
                    "aws_network_acl.outpost[0]",
                    "aws_network_acl.outpost"
                  ]
                },
                "description": "ID of the outpost network ACL"
              },
              "outpost_subnet_arns": {
                "expression": {
                  "references": [
                    "aws_subnet.outpost"
                  ]
                },
                "description": "List of ARNs of outpost subnets"
              },
              "outpost_subnets": {
                "expression": {
                  "references": [
                    "aws_subnet.outpost"
                  ]
                },
                "description": "List of IDs of outpost subnets"
              },
              "outpost_subnets_cidr_blocks": {
                "expression": {
                  "references": [
                    "aws_subnet.outpost"
                  ]
                },
                "description": "List of cidr_blocks of outpost subnets"
              },
              "outpost_subnets_ipv6_cidr_blocks": {
                "expression": {
                  "references": [
                    "aws_subnet.outpost"
                  ]
                },
                "description": "List of IPv6 cidr_blocks of outpost subnets in an IPv6 enabled VPC"
              },
              "private_ipv6_egress_route_ids": {
                "expression": {
                  "references": [
                    "aws_route.private_ipv6_egress"
                  ]
                },
                "description": "List of IDs of the ipv6 egress route"
              },
              "private_nat_gateway_route_ids": {
                "expression": {
                  "references": [
                    "aws_route.private_nat_gateway"
                  ]
                },
                "description": "List of IDs of the private nat gateway route"
              },
              "private_network_acl_arn": {
                "expression": {
                  "references": [
                    "aws_network_acl.private[0].arn",
                    "aws_network_acl.private[0]",
                    "aws_network_acl.private"
                  ]
                },
                "description": "ARN of the private network ACL"
              },
              "private_network_acl_id": {
                "expression": {
                  "references": [
                    "aws_network_acl.private[0].id",
                    "aws_network_acl.private[0]",
                    "aws_network_acl.private"
                  ]
                },
                "description": "ID of the private network ACL"
              },
              "private_route_table_association_ids": {
                "expression": {
                  "references": [
                    "aws_route_table_association.private"
                  ]
                },
                "description": "List of IDs of the private route table association"
              },
              "private_route_table_ids": {
                "expression": {
                  "references": [
                    "aws_route_table.private"
                  ]
                },
                "description": "List of IDs of private route tables"
              },
              "private_subnet_arns": {
                "expression": {
                  "references": [
                    "aws_subnet.private"
                  ]
                },
                "description": "List of ARNs of private subnets"
              },
              "private_subnets": {
                "expression": {
                  "references": [
                    "aws_subnet.private"
                  ]
                },
                "description": "List of IDs of private subnets"
              },
              "private_subnets_cidr_blocks": {
                "expression": {
                  "references": [
                    "aws_subnet.private"
                  ]
                },
                "description": "List of cidr_blocks of private subnets"
              },
              "private_subnets_ipv6_cidr_blocks": {
                "expression": {
                  "references": [
                    "aws_subnet.private"
                  ]
                },
                "description": "List of IPv6 cidr_blocks of private subnets in an IPv6 enabled VPC"
              },
              "public_internet_gateway_ipv6_route_id": {
                "expression": {
                  "references": [
                    "aws_route.public_internet_gateway_ipv6[0].id",
                    "aws_route.public_internet_gateway_ipv6[0]",
                    "aws_route.public_internet_gateway_ipv6"
                  ]
                },
                "description": "ID of the IPv6 internet gateway route"
              },
              "public_internet_gateway_route_id": {
                "expression": {
                  "references": [
                    "aws_route.public_internet_gateway[0].id",
                    "aws_route.public_internet_gateway[0]",
                    "aws_route.public_internet_gateway"
                  ]
                },
                "description": "ID of the internet gateway route"
              },
              "public_network_acl_arn": {
                "expression": {
                  "references": [
                    "aws_network_acl.public[0].arn",
                    "aws_network_acl.public[0]",
                    "aws_network_acl.public"
                  ]
                },
                "description": "ARN of the public network ACL"
              },
              "public_network_acl_id": {
                "expression": {
                  "references": [
                    "aws_network_acl.public[0].id",
                    "aws_network_acl.public[0]",
                    "aws_network_acl.public"
                  ]
                },
                "description": "ID of the public network ACL"
              },
              "public_route_table_association_ids": {
                "expression": {
                  "references": [
                    "aws_route_table_association.public"
                  ]
                },
                "description": "List of IDs of the public route table association"
              },
              "public_route_table_ids": {
                "expression": {
                  "references": [
                    "aws_route_table.public"
                  ]
                },
                "description": "List of IDs of public route tables"
              },
              "public_subnet_arns": {
                "expression": {
                  "references": [
                    "aws_subnet.public"
                  ]
                },
                "description": "List of ARNs of public subnets"
              },
              "public_subnets": {
                "expression": {
                  "references": [
                    "aws_subnet.public"
                  ]
                },
                "description": "List of IDs of public subnets"
              },
              "public_subnets_cidr_blocks": {
                "expression": {
                  "references": [
                    "aws_subnet.public"
                  ]
                },
                "description": "List of cidr_blocks of public subnets"
              },
              "public_subnets_ipv6_cidr_blocks": {
                "expression": {
                  "references": [
                    "aws_subnet.public"
                  ]
                },
                "description": "List of IPv6 cidr_blocks of public subnets in an IPv6 enabled VPC"
              },
              "redshift_network_acl_arn": {
                "expression": {
                  "references": [
                    "aws_network_acl.redshift[0].arn",
                    "aws_network_acl.redshift[0]",
                    "aws_network_acl.redshift"
                  ]
                },
                "description": "ARN of the redshift network ACL"
              },
              "redshift_network_acl_id": {
                "expression": {
                  "references": [
                    "aws_network_acl.redshift[0].id",
                    "aws_network_acl.redshift[0]",
                    "aws_network_acl.redshift"
                  ]
                },
                "description": "ID of the redshift network ACL"
              },
              "redshift_public_route_table_association_ids": {
                "expression": {
                  "references": [
                    "aws_route_table_association.redshift_public"
                  ]
                },
                "description": "List of IDs of the public redshidt route table association"
              },
              "redshift_route_table_association_ids": {
                "expression": {
                  "references": [
                    "aws_route_table_association.redshift"
                  ]
                },
                "description": "List of IDs of the redshift route table association"
              },
              "redshift_route_table_ids": {
                "expression": {
                  "references": [
                    "aws_route_table.redshift",
                    "aws_route_table.public",
                    "aws_route_table.private"
                  ]
                },
                "description": "List of IDs of redshift route tables"
              },
              "redshift_subnet_arns": {
                "expression": {
                  "references": [
                    "aws_subnet.redshift"
                  ]
                },
                "description": "List of ARNs of redshift subnets"
              },
              "redshift_subnet_group": {
                "expression": {
                  "references": [
                    "aws_redshift_subnet_group.redshift[0].id",
                    "aws_redshift_subnet_group.redshift[0]",
                    "aws_redshift_subnet_group.redshift"
                  ]
                },
                "description": "ID of redshift subnet group"
              },
              "redshift_subnets": {
                "expression": {
                  "references": [
                    "aws_subnet.redshift"
                  ]
                },
                "description": "List of IDs of redshift subnets"
              },
              "redshift_subnets_cidr_blocks": {
                "expression": {
                  "references": [
                    "aws_subnet.redshift"
                  ]
                },
                "description": "List of cidr_blocks of redshift subnets"
              },
              "redshift_subnets_ipv6_cidr_blocks": {
                "expression": {
                  "references": [
                    "aws_subnet.redshift"
                  ]
                },
                "description": "List of IPv6 cidr_blocks of redshift subnets in an IPv6 enabled VPC"
              },
              "this_customer_gateway": {
                "expression": {
                  "references": [
                    "aws_customer_gateway.this"
                  ]
                },
                "description": "Map of Customer Gateway attributes"
              },
              "vgw_arn": {
                "expression": {
                  "references": [
                    "aws_vpn_gateway.this[0].arn",
                    "aws_vpn_gateway.this[0]",
                    "aws_vpn_gateway.this"
                  ]
                },
                "description": "The ARN of the VPN Gateway"
              },
              "vgw_id": {
                "expression": {
                  "references": [
                    "aws_vpn_gateway.this[0].id",
                    "aws_vpn_gateway.this[0]",
                    "aws_vpn_gateway.this",
                    "aws_vpn_gateway_attachment.this[0].vpn_gateway_id",
                    "aws_vpn_gateway_attachment.this[0]",
                    "aws_vpn_gateway_attachment.this"
                  ]
                },
                "description": "The ID of the VPN Gateway"
              },
              "vpc_arn": {
                "expression": {
                  "references": [
                    "aws_vpc.this[0].arn",
                    "aws_vpc.this[0]",
                    "aws_vpc.this"
                  ]
                },
                "description": "The ARN of the VPC"
              },
              "vpc_cidr_block": {
                "expression": {
                  "references": [
                    "aws_vpc.this[0].cidr_block",
                    "aws_vpc.this[0]",
                    "aws_vpc.this"
                  ]
                },
                "description": "The CIDR block of the VPC"
              },
              "vpc_enable_dns_hostnames": {
                "expression": {
                  "references": [
                    "aws_vpc.this[0].enable_dns_hostnames",
                    "aws_vpc.this[0]",
                    "aws_vpc.this"
                  ]
                },
                "description": "Whether or not the VPC has DNS hostname support"
              },
              "vpc_enable_dns_support": {
                "expression": {
                  "references": [
                    "aws_vpc.this[0].enable_dns_support",
                    "aws_vpc.this[0]",
                    "aws_vpc.this"
                  ]
                },
                "description": "Whether or not the VPC has DNS support"
              },
              "vpc_flow_log_cloudwatch_iam_role_arn": {
                "expression": {
                  "references": [
                    "local.flow_log_iam_role_arn"
                  ]
                },
                "description": "The ARN of the IAM role used when pushing logs to Cloudwatch log group"
              },
              "vpc_flow_log_destination_arn": {
                "expression": {
                  "references": [
                    "local.flow_log_destination_arn"
                  ]
                },
                "description": "The ARN of the destination for VPC Flow Logs"
              },
              "vpc_flow_log_destination_type": {
                "expression": {
                  "references": [
                    "var.flow_log_destination_type"
                  ]
                },
                "description": "The type of the destination for VPC Flow Logs"
              },
              "vpc_flow_log_id": {
                "expression": {
                  "references": [
                    "aws_flow_log.this[0].id",
                    "aws_flow_log.this[0]",
                    "aws_flow_log.this"
                  ]
                },
                "description": "The ID of the Flow Log resource"
              },
              "vpc_id": {
                "expression": {
                  "references": [
                    "aws_vpc.this[0].id",
                    "aws_vpc.this[0]",
                    "aws_vpc.this"
                  ]
                },
                "description": "The ID of the VPC"
              },
              "vpc_instance_tenancy": {
                "expression": {
                  "references": [
                    "aws_vpc.this[0].instance_tenancy",
                    "aws_vpc.this[0]",
                    "aws_vpc.this"
                  ]
                },
                "description": "Tenancy of instances spin up within VPC"
              },
              "vpc_ipv6_association_id": {
                "expression": {
                  "references": [
                    "aws_vpc.this[0].ipv6_association_id",
                    "aws_vpc.this[0]",
                    "aws_vpc.this"
                  ]
                },
                "description": "The association ID for the IPv6 CIDR block"
              },
              "vpc_ipv6_cidr_block": {
                "expression": {
                  "references": [
                    "aws_vpc.this[0].ipv6_cidr_block",
                    "aws_vpc.this[0]",
                    "aws_vpc.this"
                  ]
                },
                "description": "The IPv6 CIDR block"
              },
              "vpc_main_route_table_id": {
                "expression": {
                  "references": [
                    "aws_vpc.this[0].main_route_table_id",
                    "aws_vpc.this[0]",
                    "aws_vpc.this"
                  ]
                },
                "description": "The ID of the main route table associated with this VPC"
              },
              "vpc_owner_id": {
                "expression": {
                  "references": [
                    "aws_vpc.this[0].owner_id",
                    "aws_vpc.this[0]",
                    "aws_vpc.this"
                  ]
                },
                "description": "The ID of the AWS account that owns the VPC"
              },
              "vpc_secondary_cidr_blocks": {
                "expression": {
                  "references": [
                    "aws_vpc_ipv4_cidr_block_association.this"
                  ]
                },
                "description": "List of secondary CIDR blocks of the VPC"
              }
            },
            "resources": [
              {
                "address": "aws_cloudwatch_log_group.flow_log",
                "mode": "managed",
                "type": "aws_cloudwatch_log_group",
                "name": "flow_log",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "kms_key_id": {
                    "references": [
                      "var.flow_log_cloudwatch_log_group_kms_key_id"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.flow_log_cloudwatch_log_group_name_prefix",
                      "local.vpc_id"
                    ]
                  },
                  "retention_in_days": {
                    "references": [
                      "var.flow_log_cloudwatch_log_group_retention_in_days"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.tags",
                      "var.vpc_flow_log_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_flow_log_cloudwatch_log_group"
                  ]
                }
              },
              {
                "address": "aws_customer_gateway.this",
                "mode": "managed",
                "type": "aws_customer_gateway",
                "name": "this",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "bgp_asn": {
                    "references": [
                      "each.value[\"bgp_asn\"]",
                      "each.value"
                    ]
                  },
                  "device_name": {
                    "references": [
                      "each.value"
                    ]
                  },
                  "ip_address": {
                    "references": [
                      "each.value[\"ip_address\"]",
                      "each.value"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.name",
                      "each.key",
                      "var.tags",
                      "var.customer_gateway_tags"
                    ]
                  },
                  "type": {
                    "constant_value": "ipsec.1"
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.customer_gateways"
                  ]
                }
              },
              {
                "address": "aws_db_subnet_group.database",
                "mode": "managed",
                "type": "aws_db_subnet_group",
                "name": "database",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "description": {
                    "references": [
                      "var.name"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.database_subnet_group_name",
                      "var.name"
                    ]
                  },
                  "subnet_ids": {
                    "references": [
                      "aws_subnet.database"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.database_subnet_group_name",
                      "var.name",
                      "var.tags",
                      "var.database_subnet_group_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.database_subnets",
                    "var.create_database_subnet_group"
                  ]
                }
              },
              {
                "address": "aws_default_network_acl.this",
                "mode": "managed",
                "type": "aws_default_network_acl",
                "name": "this",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "default_network_acl_id": {
                    "references": [
                      "aws_vpc.this[0].default_network_acl_id",
                      "aws_vpc.this[0]",
                      "aws_vpc.this"
                    ]
                  },
                  "subnet_ids": {
                    "references": [
                      "aws_subnet.public",
                      "aws_subnet.private",
                      "aws_subnet.intra",
                      "aws_subnet.database",
                      "aws_subnet.redshift",
                      "aws_subnet.elasticache",
                      "aws_subnet.outpost",
                      "aws_network_acl.public",
                      "aws_network_acl.private",
                      "aws_network_acl.intra",
                      "aws_network_acl.database",
                      "aws_network_acl.redshift",
                      "aws_network_acl.elasticache",
                      "aws_network_acl.outpost"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.default_network_acl_name",
                      "var.name",
                      "var.tags",
                      "var.default_network_acl_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.manage_default_network_acl"
                  ]
                }
              },
              {
                "address": "aws_default_route_table.default",
                "mode": "managed",
                "type": "aws_default_route_table",
                "name": "default",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "default_route_table_id": {
                    "references": [
                      "aws_vpc.this[0].default_route_table_id",
                      "aws_vpc.this[0]",
                      "aws_vpc.this"
                    ]
                  },
                  "propagating_vgws": {
                    "references": [
                      "var.default_route_table_propagating_vgws"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.default_route_table_name",
                      "var.name",
                      "var.tags",
                      "var.default_route_table_tags"
                    ]
                  },
                  "timeouts": {
                    "create": {
                      "constant_value": "5m"
                    },
                    "update": {
                      "constant_value": "5m"
                    }
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.manage_default_route_table"
                  ]
                }
              },
              {
                "address": "aws_default_security_group.this",
                "mode": "managed",
                "type": "aws_default_security_group",
                "name": "this",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "tags": {
                    "references": [
                      "var.default_security_group_name",
                      "var.name",
                      "var.tags",
                      "var.default_security_group_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "aws_vpc.this[0].id",
                      "aws_vpc.this[0]",
                      "aws_vpc.this"
                    ]
                  }
                },
                "schema_version": 1,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.manage_default_security_group"
                  ]
                }
              },
              {
                "address": "aws_default_vpc.this",
                "mode": "managed",
                "type": "aws_default_vpc",
                "name": "this",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "enable_classiclink": {
                    "references": [
                      "var.default_vpc_enable_classiclink"
                    ]
                  },
                  "enable_dns_hostnames": {
                    "references": [
                      "var.default_vpc_enable_dns_hostnames"
                    ]
                  },
                  "enable_dns_support": {
                    "references": [
                      "var.default_vpc_enable_dns_support"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.default_vpc_name",
                      "var.tags",
                      "var.default_vpc_tags"
                    ]
                  }
                },
                "schema_version": 1,
                "count_expression": {
                  "references": [
                    "var.manage_default_vpc"
                  ]
                }
              },
              {
                "address": "aws_egress_only_internet_gateway.this",
                "mode": "managed",
                "type": "aws_egress_only_internet_gateway",
                "name": "this",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "tags": {
                    "references": [
                      "var.name",
                      "var.tags",
                      "var.igw_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.create_egress_only_igw",
                    "var.enable_ipv6",
                    "local.max_subnet_length"
                  ]
                }
              },
              {
                "address": "aws_eip.nat",
                "mode": "managed",
                "type": "aws_eip",
                "name": "nat",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "tags": {
                    "references": [
                      "var.name",
                      "var.azs",
                      "var.single_nat_gateway",
                      "count.index",
                      "var.tags",
                      "var.nat_eip_tags"
                    ]
                  },
                  "vpc": {
                    "constant_value": true
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.enable_nat_gateway",
                    "var.reuse_nat_ips",
                    "local.nat_gateway_count"
                  ]
                }
              },
              {
                "address": "aws_elasticache_subnet_group.elasticache",
                "mode": "managed",
                "type": "aws_elasticache_subnet_group",
                "name": "elasticache",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "description": {
                    "references": [
                      "var.name"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.elasticache_subnet_group_name",
                      "var.name"
                    ]
                  },
                  "subnet_ids": {
                    "references": [
                      "aws_subnet.elasticache"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.elasticache_subnet_group_name",
                      "var.name",
                      "var.tags",
                      "var.elasticache_subnet_group_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.elasticache_subnets",
                    "var.create_elasticache_subnet_group"
                  ]
                }
              },
              {
                "address": "aws_flow_log.this",
                "mode": "managed",
                "type": "aws_flow_log",
                "name": "this",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "iam_role_arn": {
                    "references": [
                      "local.flow_log_iam_role_arn"
                    ]
                  },
                  "log_destination": {
                    "references": [
                      "local.flow_log_destination_arn"
                    ]
                  },
                  "log_destination_type": {
                    "references": [
                      "var.flow_log_destination_type"
                    ]
                  },
                  "log_format": {
                    "references": [
                      "var.flow_log_log_format"
                    ]
                  },
                  "max_aggregation_interval": {
                    "references": [
                      "var.flow_log_max_aggregation_interval"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.tags",
                      "var.vpc_flow_log_tags"
                    ]
                  },
                  "traffic_type": {
                    "references": [
                      "var.flow_log_traffic_type"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.enable_flow_log"
                  ]
                }
              },
              {
                "address": "aws_iam_policy.vpc_flow_log_cloudwatch",
                "mode": "managed",
                "type": "aws_iam_policy",
                "name": "vpc_flow_log_cloudwatch",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "name_prefix": {
                    "constant_value": "vpc-flow-log-to-cloudwatch-"
                  },
                  "policy": {
                    "references": [
                      "data.aws_iam_policy_document.vpc_flow_log_cloudwatch[0].json",
                      "data.aws_iam_policy_document.vpc_flow_log_cloudwatch[0]",
                      "data.aws_iam_policy_document.vpc_flow_log_cloudwatch"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.tags",
                      "var.vpc_flow_log_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_flow_log_cloudwatch_iam_role"
                  ]
                }
              },
              {
                "address": "aws_iam_role.vpc_flow_log_cloudwatch",
                "mode": "managed",
                "type": "aws_iam_role",
                "name": "vpc_flow_log_cloudwatch",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "assume_role_policy": {
                    "references": [
                      "data.aws_iam_policy_document.flow_log_cloudwatch_assume_role[0].json",
                      "data.aws_iam_policy_document.flow_log_cloudwatch_assume_role[0]",
                      "data.aws_iam_policy_document.flow_log_cloudwatch_assume_role"
                    ]
                  },
                  "name_prefix": {
                    "constant_value": "vpc-flow-log-role-"
                  },
                  "permissions_boundary": {
                    "references": [
                      "var.vpc_flow_log_permissions_boundary"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.tags",
                      "var.vpc_flow_log_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_flow_log_cloudwatch_iam_role"
                  ]
                }
              },
              {
                "address": "aws_iam_role_policy_attachment.vpc_flow_log_cloudwatch",
                "mode": "managed",
                "type": "aws_iam_role_policy_attachment",
                "name": "vpc_flow_log_cloudwatch",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "policy_arn": {
                    "references": [
                      "aws_iam_policy.vpc_flow_log_cloudwatch[0].arn",
                      "aws_iam_policy.vpc_flow_log_cloudwatch[0]",
                      "aws_iam_policy.vpc_flow_log_cloudwatch"
                    ]
                  },
                  "role": {
                    "references": [
                      "aws_iam_role.vpc_flow_log_cloudwatch[0].name",
                      "aws_iam_role.vpc_flow_log_cloudwatch[0]",
                      "aws_iam_role.vpc_flow_log_cloudwatch"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_flow_log_cloudwatch_iam_role"
                  ]
                }
              },
              {
                "address": "aws_internet_gateway.this",
                "mode": "managed",
                "type": "aws_internet_gateway",
                "name": "this",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "tags": {
                    "references": [
                      "var.name",
                      "var.tags",
                      "var.igw_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.create_igw",
                    "var.public_subnets"
                  ]
                }
              },
              {
                "address": "aws_nat_gateway.this",
                "mode": "managed",
                "type": "aws_nat_gateway",
                "name": "this",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "allocation_id": {
                    "references": [
                      "local.nat_gateway_ips",
                      "var.single_nat_gateway",
                      "count.index"
                    ]
                  },
                  "subnet_id": {
                    "references": [
                      "aws_subnet.public",
                      "var.single_nat_gateway",
                      "count.index"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.name",
                      "var.azs",
                      "var.single_nat_gateway",
                      "count.index",
                      "var.tags",
                      "var.nat_gateway_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.enable_nat_gateway",
                    "local.nat_gateway_count"
                  ]
                },
                "depends_on": [
                  "aws_internet_gateway.this"
                ]
              },
              {
                "address": "aws_network_acl.database",
                "mode": "managed",
                "type": "aws_network_acl",
                "name": "database",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "subnet_ids": {
                    "references": [
                      "aws_subnet.database"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.name",
                      "var.database_subnet_suffix",
                      "var.tags",
                      "var.database_acl_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.database_dedicated_network_acl",
                    "var.database_subnets"
                  ]
                }
              },
              {
                "address": "aws_network_acl.elasticache",
                "mode": "managed",
                "type": "aws_network_acl",
                "name": "elasticache",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "subnet_ids": {
                    "references": [
                      "aws_subnet.elasticache"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.name",
                      "var.elasticache_subnet_suffix",
                      "var.tags",
                      "var.elasticache_acl_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.elasticache_dedicated_network_acl",
                    "var.elasticache_subnets"
                  ]
                }
              },
              {
                "address": "aws_network_acl.intra",
                "mode": "managed",
                "type": "aws_network_acl",
                "name": "intra",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "subnet_ids": {
                    "references": [
                      "aws_subnet.intra"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.name",
                      "var.intra_subnet_suffix",
                      "var.tags",
                      "var.intra_acl_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.intra_dedicated_network_acl",
                    "var.intra_subnets"
                  ]
                }
              },
              {
                "address": "aws_network_acl.outpost",
                "mode": "managed",
                "type": "aws_network_acl",
                "name": "outpost",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "subnet_ids": {
                    "references": [
                      "aws_subnet.outpost"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.name",
                      "var.outpost_subnet_suffix",
                      "var.tags",
                      "var.outpost_acl_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.outpost_dedicated_network_acl",
                    "var.outpost_subnets"
                  ]
                }
              },
              {
                "address": "aws_network_acl.private",
                "mode": "managed",
                "type": "aws_network_acl",
                "name": "private",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "subnet_ids": {
                    "references": [
                      "aws_subnet.private"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.name",
                      "var.private_subnet_suffix",
                      "var.tags",
                      "var.private_acl_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.private_dedicated_network_acl",
                    "var.private_subnets"
                  ]
                }
              },
              {
                "address": "aws_network_acl.public",
                "mode": "managed",
                "type": "aws_network_acl",
                "name": "public",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "subnet_ids": {
                    "references": [
                      "aws_subnet.public"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.name",
                      "var.public_subnet_suffix",
                      "var.tags",
                      "var.public_acl_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.public_dedicated_network_acl",
                    "var.public_subnets"
                  ]
                }
              },
              {
                "address": "aws_network_acl.redshift",
                "mode": "managed",
                "type": "aws_network_acl",
                "name": "redshift",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "subnet_ids": {
                    "references": [
                      "aws_subnet.redshift"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.name",
                      "var.redshift_subnet_suffix",
                      "var.tags",
                      "var.redshift_acl_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.redshift_dedicated_network_acl",
                    "var.redshift_subnets"
                  ]
                }
              },
              {
                "address": "aws_network_acl_rule.database_inbound",
                "mode": "managed",
                "type": "aws_network_acl_rule",
                "name": "database_inbound",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "cidr_block": {
                    "references": [
                      "var.database_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "egress": {
                    "constant_value": false
                  },
                  "from_port": {
                    "references": [
                      "var.database_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_code": {
                    "references": [
                      "var.database_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_type": {
                    "references": [
                      "var.database_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.database_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "network_acl_id": {
                    "references": [
                      "aws_network_acl.database[0].id",
                      "aws_network_acl.database[0]",
                      "aws_network_acl.database"
                    ]
                  },
                  "protocol": {
                    "references": [
                      "var.database_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_action": {
                    "references": [
                      "var.database_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_number": {
                    "references": [
                      "var.database_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "to_port": {
                    "references": [
                      "var.database_inbound_acl_rules",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.database_dedicated_network_acl",
                    "var.database_subnets",
                    "var.database_inbound_acl_rules"
                  ]
                }
              },
              {
                "address": "aws_network_acl_rule.database_outbound",
                "mode": "managed",
                "type": "aws_network_acl_rule",
                "name": "database_outbound",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "cidr_block": {
                    "references": [
                      "var.database_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "egress": {
                    "constant_value": true
                  },
                  "from_port": {
                    "references": [
                      "var.database_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_code": {
                    "references": [
                      "var.database_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_type": {
                    "references": [
                      "var.database_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.database_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "network_acl_id": {
                    "references": [
                      "aws_network_acl.database[0].id",
                      "aws_network_acl.database[0]",
                      "aws_network_acl.database"
                    ]
                  },
                  "protocol": {
                    "references": [
                      "var.database_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_action": {
                    "references": [
                      "var.database_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_number": {
                    "references": [
                      "var.database_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "to_port": {
                    "references": [
                      "var.database_outbound_acl_rules",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.database_dedicated_network_acl",
                    "var.database_subnets",
                    "var.database_outbound_acl_rules"
                  ]
                }
              },
              {
                "address": "aws_network_acl_rule.elasticache_inbound",
                "mode": "managed",
                "type": "aws_network_acl_rule",
                "name": "elasticache_inbound",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "cidr_block": {
                    "references": [
                      "var.elasticache_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "egress": {
                    "constant_value": false
                  },
                  "from_port": {
                    "references": [
                      "var.elasticache_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_code": {
                    "references": [
                      "var.elasticache_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_type": {
                    "references": [
                      "var.elasticache_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.elasticache_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "network_acl_id": {
                    "references": [
                      "aws_network_acl.elasticache[0].id",
                      "aws_network_acl.elasticache[0]",
                      "aws_network_acl.elasticache"
                    ]
                  },
                  "protocol": {
                    "references": [
                      "var.elasticache_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_action": {
                    "references": [
                      "var.elasticache_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_number": {
                    "references": [
                      "var.elasticache_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "to_port": {
                    "references": [
                      "var.elasticache_inbound_acl_rules",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.elasticache_dedicated_network_acl",
                    "var.elasticache_subnets",
                    "var.elasticache_inbound_acl_rules"
                  ]
                }
              },
              {
                "address": "aws_network_acl_rule.elasticache_outbound",
                "mode": "managed",
                "type": "aws_network_acl_rule",
                "name": "elasticache_outbound",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "cidr_block": {
                    "references": [
                      "var.elasticache_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "egress": {
                    "constant_value": true
                  },
                  "from_port": {
                    "references": [
                      "var.elasticache_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_code": {
                    "references": [
                      "var.elasticache_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_type": {
                    "references": [
                      "var.elasticache_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.elasticache_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "network_acl_id": {
                    "references": [
                      "aws_network_acl.elasticache[0].id",
                      "aws_network_acl.elasticache[0]",
                      "aws_network_acl.elasticache"
                    ]
                  },
                  "protocol": {
                    "references": [
                      "var.elasticache_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_action": {
                    "references": [
                      "var.elasticache_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_number": {
                    "references": [
                      "var.elasticache_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "to_port": {
                    "references": [
                      "var.elasticache_outbound_acl_rules",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.elasticache_dedicated_network_acl",
                    "var.elasticache_subnets",
                    "var.elasticache_outbound_acl_rules"
                  ]
                }
              },
              {
                "address": "aws_network_acl_rule.intra_inbound",
                "mode": "managed",
                "type": "aws_network_acl_rule",
                "name": "intra_inbound",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "cidr_block": {
                    "references": [
                      "var.intra_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "egress": {
                    "constant_value": false
                  },
                  "from_port": {
                    "references": [
                      "var.intra_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_code": {
                    "references": [
                      "var.intra_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_type": {
                    "references": [
                      "var.intra_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.intra_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "network_acl_id": {
                    "references": [
                      "aws_network_acl.intra[0].id",
                      "aws_network_acl.intra[0]",
                      "aws_network_acl.intra"
                    ]
                  },
                  "protocol": {
                    "references": [
                      "var.intra_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_action": {
                    "references": [
                      "var.intra_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_number": {
                    "references": [
                      "var.intra_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "to_port": {
                    "references": [
                      "var.intra_inbound_acl_rules",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.intra_dedicated_network_acl",
                    "var.intra_subnets",
                    "var.intra_inbound_acl_rules"
                  ]
                }
              },
              {
                "address": "aws_network_acl_rule.intra_outbound",
                "mode": "managed",
                "type": "aws_network_acl_rule",
                "name": "intra_outbound",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "cidr_block": {
                    "references": [
                      "var.intra_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "egress": {
                    "constant_value": true
                  },
                  "from_port": {
                    "references": [
                      "var.intra_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_code": {
                    "references": [
                      "var.intra_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_type": {
                    "references": [
                      "var.intra_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.intra_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "network_acl_id": {
                    "references": [
                      "aws_network_acl.intra[0].id",
                      "aws_network_acl.intra[0]",
                      "aws_network_acl.intra"
                    ]
                  },
                  "protocol": {
                    "references": [
                      "var.intra_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_action": {
                    "references": [
                      "var.intra_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_number": {
                    "references": [
                      "var.intra_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "to_port": {
                    "references": [
                      "var.intra_outbound_acl_rules",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.intra_dedicated_network_acl",
                    "var.intra_subnets",
                    "var.intra_outbound_acl_rules"
                  ]
                }
              },
              {
                "address": "aws_network_acl_rule.outpost_inbound",
                "mode": "managed",
                "type": "aws_network_acl_rule",
                "name": "outpost_inbound",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "cidr_block": {
                    "references": [
                      "var.outpost_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "egress": {
                    "constant_value": false
                  },
                  "from_port": {
                    "references": [
                      "var.outpost_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_code": {
                    "references": [
                      "var.outpost_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_type": {
                    "references": [
                      "var.outpost_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.outpost_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "network_acl_id": {
                    "references": [
                      "aws_network_acl.outpost[0].id",
                      "aws_network_acl.outpost[0]",
                      "aws_network_acl.outpost"
                    ]
                  },
                  "protocol": {
                    "references": [
                      "var.outpost_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_action": {
                    "references": [
                      "var.outpost_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_number": {
                    "references": [
                      "var.outpost_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "to_port": {
                    "references": [
                      "var.outpost_inbound_acl_rules",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.outpost_dedicated_network_acl",
                    "var.outpost_subnets",
                    "var.outpost_inbound_acl_rules"
                  ]
                }
              },
              {
                "address": "aws_network_acl_rule.outpost_outbound",
                "mode": "managed",
                "type": "aws_network_acl_rule",
                "name": "outpost_outbound",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "cidr_block": {
                    "references": [
                      "var.outpost_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "egress": {
                    "constant_value": true
                  },
                  "from_port": {
                    "references": [
                      "var.outpost_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_code": {
                    "references": [
                      "var.outpost_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_type": {
                    "references": [
                      "var.outpost_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.outpost_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "network_acl_id": {
                    "references": [
                      "aws_network_acl.outpost[0].id",
                      "aws_network_acl.outpost[0]",
                      "aws_network_acl.outpost"
                    ]
                  },
                  "protocol": {
                    "references": [
                      "var.outpost_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_action": {
                    "references": [
                      "var.outpost_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_number": {
                    "references": [
                      "var.outpost_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "to_port": {
                    "references": [
                      "var.outpost_outbound_acl_rules",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.outpost_dedicated_network_acl",
                    "var.outpost_subnets",
                    "var.outpost_outbound_acl_rules"
                  ]
                }
              },
              {
                "address": "aws_network_acl_rule.private_inbound",
                "mode": "managed",
                "type": "aws_network_acl_rule",
                "name": "private_inbound",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "cidr_block": {
                    "references": [
                      "var.private_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "egress": {
                    "constant_value": false
                  },
                  "from_port": {
                    "references": [
                      "var.private_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_code": {
                    "references": [
                      "var.private_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_type": {
                    "references": [
                      "var.private_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.private_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "network_acl_id": {
                    "references": [
                      "aws_network_acl.private[0].id",
                      "aws_network_acl.private[0]",
                      "aws_network_acl.private"
                    ]
                  },
                  "protocol": {
                    "references": [
                      "var.private_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_action": {
                    "references": [
                      "var.private_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_number": {
                    "references": [
                      "var.private_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "to_port": {
                    "references": [
                      "var.private_inbound_acl_rules",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.private_dedicated_network_acl",
                    "var.private_subnets",
                    "var.private_inbound_acl_rules"
                  ]
                }
              },
              {
                "address": "aws_network_acl_rule.private_outbound",
                "mode": "managed",
                "type": "aws_network_acl_rule",
                "name": "private_outbound",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "cidr_block": {
                    "references": [
                      "var.private_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "egress": {
                    "constant_value": true
                  },
                  "from_port": {
                    "references": [
                      "var.private_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_code": {
                    "references": [
                      "var.private_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_type": {
                    "references": [
                      "var.private_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.private_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "network_acl_id": {
                    "references": [
                      "aws_network_acl.private[0].id",
                      "aws_network_acl.private[0]",
                      "aws_network_acl.private"
                    ]
                  },
                  "protocol": {
                    "references": [
                      "var.private_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_action": {
                    "references": [
                      "var.private_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_number": {
                    "references": [
                      "var.private_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "to_port": {
                    "references": [
                      "var.private_outbound_acl_rules",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.private_dedicated_network_acl",
                    "var.private_subnets",
                    "var.private_outbound_acl_rules"
                  ]
                }
              },
              {
                "address": "aws_network_acl_rule.public_inbound",
                "mode": "managed",
                "type": "aws_network_acl_rule",
                "name": "public_inbound",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "cidr_block": {
                    "references": [
                      "var.public_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "egress": {
                    "constant_value": false
                  },
                  "from_port": {
                    "references": [
                      "var.public_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_code": {
                    "references": [
                      "var.public_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_type": {
                    "references": [
                      "var.public_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.public_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "network_acl_id": {
                    "references": [
                      "aws_network_acl.public[0].id",
                      "aws_network_acl.public[0]",
                      "aws_network_acl.public"
                    ]
                  },
                  "protocol": {
                    "references": [
                      "var.public_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_action": {
                    "references": [
                      "var.public_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_number": {
                    "references": [
                      "var.public_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "to_port": {
                    "references": [
                      "var.public_inbound_acl_rules",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.public_dedicated_network_acl",
                    "var.public_subnets",
                    "var.public_inbound_acl_rules"
                  ]
                }
              },
              {
                "address": "aws_network_acl_rule.public_outbound",
                "mode": "managed",
                "type": "aws_network_acl_rule",
                "name": "public_outbound",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "cidr_block": {
                    "references": [
                      "var.public_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "egress": {
                    "constant_value": true
                  },
                  "from_port": {
                    "references": [
                      "var.public_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_code": {
                    "references": [
                      "var.public_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_type": {
                    "references": [
                      "var.public_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.public_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "network_acl_id": {
                    "references": [
                      "aws_network_acl.public[0].id",
                      "aws_network_acl.public[0]",
                      "aws_network_acl.public"
                    ]
                  },
                  "protocol": {
                    "references": [
                      "var.public_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_action": {
                    "references": [
                      "var.public_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_number": {
                    "references": [
                      "var.public_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "to_port": {
                    "references": [
                      "var.public_outbound_acl_rules",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.public_dedicated_network_acl",
                    "var.public_subnets",
                    "var.public_outbound_acl_rules"
                  ]
                }
              },
              {
                "address": "aws_network_acl_rule.redshift_inbound",
                "mode": "managed",
                "type": "aws_network_acl_rule",
                "name": "redshift_inbound",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "cidr_block": {
                    "references": [
                      "var.redshift_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "egress": {
                    "constant_value": false
                  },
                  "from_port": {
                    "references": [
                      "var.redshift_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_code": {
                    "references": [
                      "var.redshift_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_type": {
                    "references": [
                      "var.redshift_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.redshift_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "network_acl_id": {
                    "references": [
                      "aws_network_acl.redshift[0].id",
                      "aws_network_acl.redshift[0]",
                      "aws_network_acl.redshift"
                    ]
                  },
                  "protocol": {
                    "references": [
                      "var.redshift_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_action": {
                    "references": [
                      "var.redshift_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_number": {
                    "references": [
                      "var.redshift_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "to_port": {
                    "references": [
                      "var.redshift_inbound_acl_rules",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.redshift_dedicated_network_acl",
                    "var.redshift_subnets",
                    "var.redshift_inbound_acl_rules"
                  ]
                }
              },
              {
                "address": "aws_network_acl_rule.redshift_outbound",
                "mode": "managed",
                "type": "aws_network_acl_rule",
                "name": "redshift_outbound",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "cidr_block": {
                    "references": [
                      "var.redshift_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "egress": {
                    "constant_value": true
                  },
                  "from_port": {
                    "references": [
                      "var.redshift_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_code": {
                    "references": [
                      "var.redshift_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_type": {
                    "references": [
                      "var.redshift_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.redshift_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "network_acl_id": {
                    "references": [
                      "aws_network_acl.redshift[0].id",
                      "aws_network_acl.redshift[0]",
                      "aws_network_acl.redshift"
                    ]
                  },
                  "protocol": {
                    "references": [
                      "var.redshift_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_action": {
                    "references": [
                      "var.redshift_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_number": {
                    "references": [
                      "var.redshift_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "to_port": {
                    "references": [
                      "var.redshift_outbound_acl_rules",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.redshift_dedicated_network_acl",
                    "var.redshift_subnets",
                    "var.redshift_outbound_acl_rules"
                  ]
                }
              },
              {
                "address": "aws_redshift_subnet_group.redshift",
                "mode": "managed",
                "type": "aws_redshift_subnet_group",
                "name": "redshift",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "description": {
                    "references": [
                      "var.name"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.redshift_subnet_group_name",
                      "var.name"
                    ]
                  },
                  "subnet_ids": {
                    "references": [
                      "aws_subnet.redshift"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.redshift_subnet_group_name",
                      "var.name",
                      "var.tags",
                      "var.redshift_subnet_group_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.redshift_subnets",
                    "var.create_redshift_subnet_group"
                  ]
                }
              },
              {
                "address": "aws_route.database_internet_gateway",
                "mode": "managed",
                "type": "aws_route",
                "name": "database_internet_gateway",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "destination_cidr_block": {
                    "constant_value": "0.0.0.0/0"
                  },
                  "gateway_id": {
                    "references": [
                      "aws_internet_gateway.this[0].id",
                      "aws_internet_gateway.this[0]",
                      "aws_internet_gateway.this"
                    ]
                  },
                  "route_table_id": {
                    "references": [
                      "aws_route_table.database[0].id",
                      "aws_route_table.database[0]",
                      "aws_route_table.database"
                    ]
                  },
                  "timeouts": {
                    "create": {
                      "constant_value": "5m"
                    }
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.create_igw",
                    "var.create_database_subnet_route_table",
                    "var.database_subnets",
                    "var.create_database_internet_gateway_route",
                    "var.create_database_nat_gateway_route"
                  ]
                }
              },
              {
                "address": "aws_route.database_ipv6_egress",
                "mode": "managed",
                "type": "aws_route",
                "name": "database_ipv6_egress",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "destination_ipv6_cidr_block": {
                    "constant_value": "::/0"
                  },
                  "egress_only_gateway_id": {
                    "references": [
                      "aws_egress_only_internet_gateway.this[0].id",
                      "aws_egress_only_internet_gateway.this[0]",
                      "aws_egress_only_internet_gateway.this"
                    ]
                  },
                  "route_table_id": {
                    "references": [
                      "aws_route_table.database[0].id",
                      "aws_route_table.database[0]",
                      "aws_route_table.database"
                    ]
                  },
                  "timeouts": {
                    "create": {
                      "constant_value": "5m"
                    }
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.create_egress_only_igw",
                    "var.enable_ipv6",
                    "var.create_database_subnet_route_table",
                    "var.database_subnets",
                    "var.create_database_internet_gateway_route"
                  ]
                }
              },
              {
                "address": "aws_route.database_nat_gateway",
                "mode": "managed",
                "type": "aws_route",
                "name": "database_nat_gateway",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "destination_cidr_block": {
                    "constant_value": "0.0.0.0/0"
                  },
                  "nat_gateway_id": {
                    "references": [
                      "aws_nat_gateway.this",
                      "count.index"
                    ]
                  },
                  "route_table_id": {
                    "references": [
                      "aws_route_table.database",
                      "count.index"
                    ]
                  },
                  "timeouts": {
                    "create": {
                      "constant_value": "5m"
                    }
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.create_database_subnet_route_table",
                    "var.database_subnets",
                    "var.create_database_internet_gateway_route",
                    "var.create_database_nat_gateway_route",
                    "var.enable_nat_gateway",
                    "var.single_nat_gateway",
                    "var.database_subnets"
                  ]
                }
              },
              {
                "address": "aws_route.private_ipv6_egress",
                "mode": "managed",
                "type": "aws_route",
                "name": "private_ipv6_egress",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "destination_ipv6_cidr_block": {
                    "constant_value": "::/0"
                  },
                  "egress_only_gateway_id": {
                    "references": [
                      "aws_egress_only_internet_gateway.this"
                    ]
                  },
                  "route_table_id": {
                    "references": [
                      "aws_route_table.private",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.create_egress_only_igw",
                    "var.enable_ipv6",
                    "var.private_subnets"
                  ]
                }
              },
              {
                "address": "aws_route.private_nat_gateway",
                "mode": "managed",
                "type": "aws_route",
                "name": "private_nat_gateway",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "destination_cidr_block": {
                    "constant_value": "0.0.0.0/0"
                  },
                  "nat_gateway_id": {
                    "references": [
                      "aws_nat_gateway.this",
                      "count.index"
                    ]
                  },
                  "route_table_id": {
                    "references": [
                      "aws_route_table.private",
                      "count.index"
                    ]
                  },
                  "timeouts": {
                    "create": {
                      "constant_value": "5m"
                    }
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.enable_nat_gateway",
                    "local.nat_gateway_count"
                  ]
                }
              },
              {
                "address": "aws_route.public_internet_gateway",
                "mode": "managed",
                "type": "aws_route",
                "name": "public_internet_gateway",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "destination_cidr_block": {
                    "constant_value": "0.0.0.0/0"
                  },
                  "gateway_id": {
                    "references": [
                      "aws_internet_gateway.this[0].id",
                      "aws_internet_gateway.this[0]",
                      "aws_internet_gateway.this"
                    ]
                  },
                  "route_table_id": {
                    "references": [
                      "aws_route_table.public[0].id",
                      "aws_route_table.public[0]",
                      "aws_route_table.public"
                    ]
                  },
                  "timeouts": {
                    "create": {
                      "constant_value": "5m"
                    }
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.create_igw",
                    "var.public_subnets"
                  ]
                }
              },
              {
                "address": "aws_route.public_internet_gateway_ipv6",
                "mode": "managed",
                "type": "aws_route",
                "name": "public_internet_gateway_ipv6",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "destination_ipv6_cidr_block": {
                    "constant_value": "::/0"
                  },
                  "gateway_id": {
                    "references": [
                      "aws_internet_gateway.this[0].id",
                      "aws_internet_gateway.this[0]",
                      "aws_internet_gateway.this"
                    ]
                  },
                  "route_table_id": {
                    "references": [
                      "aws_route_table.public[0].id",
                      "aws_route_table.public[0]",
                      "aws_route_table.public"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.create_igw",
                    "var.enable_ipv6",
                    "var.public_subnets"
                  ]
                }
              },
              {
                "address": "aws_route_table.database",
                "mode": "managed",
                "type": "aws_route_table",
                "name": "database",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "tags": {
                    "references": [
                      "var.single_nat_gateway",
                      "var.create_database_internet_gateway_route",
                      "var.name",
                      "var.database_subnet_suffix",
                      "var.name",
                      "var.database_subnet_suffix",
                      "var.azs",
                      "count.index",
                      "var.tags",
                      "var.database_route_table_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.create_database_subnet_route_table",
                    "var.database_subnets",
                    "var.single_nat_gateway",
                    "var.create_database_internet_gateway_route",
                    "var.database_subnets"
                  ]
                }
              },
              {
                "address": "aws_route_table.elasticache",
                "mode": "managed",
                "type": "aws_route_table",
                "name": "elasticache",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "tags": {
                    "references": [
                      "var.name",
                      "var.elasticache_subnet_suffix",
                      "var.tags",
                      "var.elasticache_route_table_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.create_elasticache_subnet_route_table",
                    "var.elasticache_subnets"
                  ]
                }
              },
              {
                "address": "aws_route_table.intra",
                "mode": "managed",
                "type": "aws_route_table",
                "name": "intra",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "tags": {
                    "references": [
                      "var.name",
                      "var.intra_subnet_suffix",
                      "var.tags",
                      "var.intra_route_table_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.intra_subnets"
                  ]
                }
              },
              {
                "address": "aws_route_table.private",
                "mode": "managed",
                "type": "aws_route_table",
                "name": "private",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "tags": {
                    "references": [
                      "var.single_nat_gateway",
                      "var.name",
                      "var.private_subnet_suffix",
                      "var.name",
                      "var.private_subnet_suffix",
                      "var.azs",
                      "count.index",
                      "var.tags",
                      "var.private_route_table_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "local.max_subnet_length",
                    "local.nat_gateway_count"
                  ]
                }
              },
              {
                "address": "aws_route_table.public",
                "mode": "managed",
                "type": "aws_route_table",
                "name": "public",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "tags": {
                    "references": [
                      "var.name",
                      "var.public_subnet_suffix",
                      "var.tags",
                      "var.public_route_table_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.public_subnets"
                  ]
                }
              },
              {
                "address": "aws_route_table.redshift",
                "mode": "managed",
                "type": "aws_route_table",
                "name": "redshift",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "tags": {
                    "references": [
                      "var.name",
                      "var.redshift_subnet_suffix",
                      "var.tags",
                      "var.redshift_route_table_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.create_redshift_subnet_route_table",
                    "var.redshift_subnets"
                  ]
                }
              },
              {
                "address": "aws_route_table_association.database",
                "mode": "managed",
                "type": "aws_route_table_association",
                "name": "database",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "route_table_id": {
                    "references": [
                      "aws_route_table.database",
                      "aws_route_table.private",
                      "var.create_database_subnet_route_table",
                      "var.single_nat_gateway",
                      "var.create_database_internet_gateway_route",
                      "count.index",
                      "count.index"
                    ]
                  },
                  "subnet_id": {
                    "references": [
                      "aws_subnet.database",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.database_subnets",
                    "var.database_subnets"
                  ]
                }
              },
              {
                "address": "aws_route_table_association.elasticache",
                "mode": "managed",
                "type": "aws_route_table_association",
                "name": "elasticache",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "route_table_id": {
                    "references": [
                      "aws_route_table.elasticache",
                      "aws_route_table.private",
                      "var.single_nat_gateway",
                      "var.create_elasticache_subnet_route_table",
                      "count.index"
                    ]
                  },
                  "subnet_id": {
                    "references": [
                      "aws_subnet.elasticache",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.elasticache_subnets",
                    "var.elasticache_subnets"
                  ]
                }
              },
              {
                "address": "aws_route_table_association.intra",
                "mode": "managed",
                "type": "aws_route_table_association",
                "name": "intra",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "route_table_id": {
                    "references": [
                      "aws_route_table.intra"
                    ]
                  },
                  "subnet_id": {
                    "references": [
                      "aws_subnet.intra",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.intra_subnets",
                    "var.intra_subnets"
                  ]
                }
              },
              {
                "address": "aws_route_table_association.outpost",
                "mode": "managed",
                "type": "aws_route_table_association",
                "name": "outpost",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "route_table_id": {
                    "references": [
                      "aws_route_table.private",
                      "var.single_nat_gateway",
                      "count.index"
                    ]
                  },
                  "subnet_id": {
                    "references": [
                      "aws_subnet.outpost",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.outpost_subnets",
                    "var.outpost_subnets"
                  ]
                }
              },
              {
                "address": "aws_route_table_association.private",
                "mode": "managed",
                "type": "aws_route_table_association",
                "name": "private",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "route_table_id": {
                    "references": [
                      "aws_route_table.private",
                      "var.single_nat_gateway",
                      "count.index"
                    ]
                  },
                  "subnet_id": {
                    "references": [
                      "aws_subnet.private",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.private_subnets",
                    "var.private_subnets"
                  ]
                }
              },
              {
                "address": "aws_route_table_association.public",
                "mode": "managed",
                "type": "aws_route_table_association",
                "name": "public",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "route_table_id": {
                    "references": [
                      "aws_route_table.public[0].id",
                      "aws_route_table.public[0]",
                      "aws_route_table.public"
                    ]
                  },
                  "subnet_id": {
                    "references": [
                      "aws_subnet.public",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.public_subnets",
                    "var.public_subnets"
                  ]
                }
              },
              {
                "address": "aws_route_table_association.redshift",
                "mode": "managed",
                "type": "aws_route_table_association",
                "name": "redshift",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "route_table_id": {
                    "references": [
                      "aws_route_table.redshift",
                      "aws_route_table.private",
                      "var.single_nat_gateway",
                      "var.create_redshift_subnet_route_table",
                      "count.index"
                    ]
                  },
                  "subnet_id": {
                    "references": [
                      "aws_subnet.redshift",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.redshift_subnets",
                    "var.enable_public_redshift",
                    "var.redshift_subnets"
                  ]
                }
              },
              {
                "address": "aws_route_table_association.redshift_public",
                "mode": "managed",
                "type": "aws_route_table_association",
                "name": "redshift_public",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "route_table_id": {
                    "references": [
                      "aws_route_table.redshift",
                      "aws_route_table.public",
                      "var.single_nat_gateway",
                      "var.create_redshift_subnet_route_table",
                      "count.index"
                    ]
                  },
                  "subnet_id": {
                    "references": [
                      "aws_subnet.redshift",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.redshift_subnets",
                    "var.enable_public_redshift",
                    "var.redshift_subnets"
                  ]
                }
              },
              {
                "address": "aws_subnet.database",
                "mode": "managed",
                "type": "aws_subnet",
                "name": "database",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "assign_ipv6_address_on_creation": {
                    "references": [
                      "var.database_subnet_assign_ipv6_address_on_creation",
                      "var.assign_ipv6_address_on_creation",
                      "var.database_subnet_assign_ipv6_address_on_creation"
                    ]
                  },
                  "availability_zone": {
                    "references": [
                      "var.azs",
                      "count.index",
                      "var.azs",
                      "count.index"
                    ]
                  },
                  "availability_zone_id": {
                    "references": [
                      "var.azs",
                      "count.index",
                      "var.azs",
                      "count.index"
                    ]
                  },
                  "cidr_block": {
                    "references": [
                      "var.database_subnets",
                      "count.index"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.enable_ipv6",
                      "var.database_subnet_ipv6_prefixes",
                      "aws_vpc.this[0].ipv6_cidr_block",
                      "aws_vpc.this[0]",
                      "aws_vpc.this",
                      "var.database_subnet_ipv6_prefixes",
                      "count.index"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.name",
                      "var.database_subnet_suffix",
                      "var.azs",
                      "count.index",
                      "var.tags",
                      "var.database_subnet_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 1,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.database_subnets",
                    "var.database_subnets"
                  ]
                }
              },
              {
                "address": "aws_subnet.elasticache",
                "mode": "managed",
                "type": "aws_subnet",
                "name": "elasticache",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "assign_ipv6_address_on_creation": {
                    "references": [
                      "var.elasticache_subnet_assign_ipv6_address_on_creation",
                      "var.assign_ipv6_address_on_creation",
                      "var.elasticache_subnet_assign_ipv6_address_on_creation"
                    ]
                  },
                  "availability_zone": {
                    "references": [
                      "var.azs",
                      "count.index",
                      "var.azs",
                      "count.index"
                    ]
                  },
                  "availability_zone_id": {
                    "references": [
                      "var.azs",
                      "count.index",
                      "var.azs",
                      "count.index"
                    ]
                  },
                  "cidr_block": {
                    "references": [
                      "var.elasticache_subnets",
                      "count.index"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.enable_ipv6",
                      "var.elasticache_subnet_ipv6_prefixes",
                      "aws_vpc.this[0].ipv6_cidr_block",
                      "aws_vpc.this[0]",
                      "aws_vpc.this",
                      "var.elasticache_subnet_ipv6_prefixes",
                      "count.index"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.name",
                      "var.elasticache_subnet_suffix",
                      "var.azs",
                      "count.index",
                      "var.tags",
                      "var.elasticache_subnet_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 1,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.elasticache_subnets",
                    "var.elasticache_subnets"
                  ]
                }
              },
              {
                "address": "aws_subnet.intra",
                "mode": "managed",
                "type": "aws_subnet",
                "name": "intra",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "assign_ipv6_address_on_creation": {
                    "references": [
                      "var.intra_subnet_assign_ipv6_address_on_creation",
                      "var.assign_ipv6_address_on_creation",
                      "var.intra_subnet_assign_ipv6_address_on_creation"
                    ]
                  },
                  "availability_zone": {
                    "references": [
                      "var.azs",
                      "count.index",
                      "var.azs",
                      "count.index"
                    ]
                  },
                  "availability_zone_id": {
                    "references": [
                      "var.azs",
                      "count.index",
                      "var.azs",
                      "count.index"
                    ]
                  },
                  "cidr_block": {
                    "references": [
                      "var.intra_subnets",
                      "count.index"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.enable_ipv6",
                      "var.intra_subnet_ipv6_prefixes",
                      "aws_vpc.this[0].ipv6_cidr_block",
                      "aws_vpc.this[0]",
                      "aws_vpc.this",
                      "var.intra_subnet_ipv6_prefixes",
                      "count.index"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.name",
                      "var.intra_subnet_suffix",
                      "var.azs",
                      "count.index",
                      "var.tags",
                      "var.intra_subnet_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 1,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.intra_subnets",
                    "var.intra_subnets"
                  ]
                }
              },
              {
                "address": "aws_subnet.outpost",
                "mode": "managed",
                "type": "aws_subnet",
                "name": "outpost",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "assign_ipv6_address_on_creation": {
                    "references": [
                      "var.outpost_subnet_assign_ipv6_address_on_creation",
                      "var.assign_ipv6_address_on_creation",
                      "var.outpost_subnet_assign_ipv6_address_on_creation"
                    ]
                  },
                  "availability_zone": {
                    "references": [
                      "var.outpost_az"
                    ]
                  },
                  "cidr_block": {
                    "references": [
                      "var.outpost_subnets",
                      "count.index"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.enable_ipv6",
                      "var.outpost_subnet_ipv6_prefixes",
                      "aws_vpc.this[0].ipv6_cidr_block",
                      "aws_vpc.this[0]",
                      "aws_vpc.this",
                      "var.outpost_subnet_ipv6_prefixes",
                      "count.index"
                    ]
                  },
                  "outpost_arn": {
                    "references": [
                      "var.outpost_arn"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.name",
                      "var.outpost_subnet_suffix",
                      "var.outpost_az",
                      "var.tags",
                      "var.outpost_subnet_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 1,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.outpost_subnets",
                    "var.outpost_subnets"
                  ]
                }
              },
              {
                "address": "aws_subnet.private",
                "mode": "managed",
                "type": "aws_subnet",
                "name": "private",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "assign_ipv6_address_on_creation": {
                    "references": [
                      "var.private_subnet_assign_ipv6_address_on_creation",
                      "var.assign_ipv6_address_on_creation",
                      "var.private_subnet_assign_ipv6_address_on_creation"
                    ]
                  },
                  "availability_zone": {
                    "references": [
                      "var.azs",
                      "count.index",
                      "var.azs",
                      "count.index"
                    ]
                  },
                  "availability_zone_id": {
                    "references": [
                      "var.azs",
                      "count.index",
                      "var.azs",
                      "count.index"
                    ]
                  },
                  "cidr_block": {
                    "references": [
                      "var.private_subnets",
                      "count.index"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.enable_ipv6",
                      "var.private_subnet_ipv6_prefixes",
                      "aws_vpc.this[0].ipv6_cidr_block",
                      "aws_vpc.this[0]",
                      "aws_vpc.this",
                      "var.private_subnet_ipv6_prefixes",
                      "count.index"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.name",
                      "var.private_subnet_suffix",
                      "var.azs",
                      "count.index",
                      "var.tags",
                      "var.private_subnet_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 1,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.private_subnets",
                    "var.private_subnets"
                  ]
                }
              },
              {
                "address": "aws_subnet.public",
                "mode": "managed",
                "type": "aws_subnet",
                "name": "public",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "assign_ipv6_address_on_creation": {
                    "references": [
                      "var.public_subnet_assign_ipv6_address_on_creation",
                      "var.assign_ipv6_address_on_creation",
                      "var.public_subnet_assign_ipv6_address_on_creation"
                    ]
                  },
                  "availability_zone": {
                    "references": [
                      "var.azs",
                      "count.index",
                      "var.azs",
                      "count.index"
                    ]
                  },
                  "availability_zone_id": {
                    "references": [
                      "var.azs",
                      "count.index",
                      "var.azs",
                      "count.index"
                    ]
                  },
                  "cidr_block": {
                    "references": [
                      "var.public_subnets",
                      "count.index"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.enable_ipv6",
                      "var.public_subnet_ipv6_prefixes",
                      "aws_vpc.this[0].ipv6_cidr_block",
                      "aws_vpc.this[0]",
                      "aws_vpc.this",
                      "var.public_subnet_ipv6_prefixes",
                      "count.index"
                    ]
                  },
                  "map_public_ip_on_launch": {
                    "references": [
                      "var.map_public_ip_on_launch"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.name",
                      "var.public_subnet_suffix",
                      "var.azs",
                      "count.index",
                      "var.tags",
                      "var.public_subnet_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 1,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.public_subnets",
                    "var.one_nat_gateway_per_az",
                    "var.public_subnets",
                    "var.azs",
                    "var.public_subnets"
                  ]
                }
              },
              {
                "address": "aws_subnet.redshift",
                "mode": "managed",
                "type": "aws_subnet",
                "name": "redshift",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "assign_ipv6_address_on_creation": {
                    "references": [
                      "var.redshift_subnet_assign_ipv6_address_on_creation",
                      "var.assign_ipv6_address_on_creation",
                      "var.redshift_subnet_assign_ipv6_address_on_creation"
                    ]
                  },
                  "availability_zone": {
                    "references": [
                      "var.azs",
                      "count.index",
                      "var.azs",
                      "count.index"
                    ]
                  },
                  "availability_zone_id": {
                    "references": [
                      "var.azs",
                      "count.index",
                      "var.azs",
                      "count.index"
                    ]
                  },
                  "cidr_block": {
                    "references": [
                      "var.redshift_subnets",
                      "count.index"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.enable_ipv6",
                      "var.redshift_subnet_ipv6_prefixes",
                      "aws_vpc.this[0].ipv6_cidr_block",
                      "aws_vpc.this[0]",
                      "aws_vpc.this",
                      "var.redshift_subnet_ipv6_prefixes",
                      "count.index"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.name",
                      "var.redshift_subnet_suffix",
                      "var.azs",
                      "count.index",
                      "var.tags",
                      "var.redshift_subnet_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 1,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.redshift_subnets",
                    "var.redshift_subnets"
                  ]
                }
              },
              {
                "address": "aws_vpc.this",
                "mode": "managed",
                "type": "aws_vpc",
                "name": "this",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "assign_generated_ipv6_cidr_block": {
                    "references": [
                      "var.enable_ipv6"
                    ]
                  },
                  "cidr_block": {
                    "references": [
                      "var.cidr"
                    ]
                  },
                  "enable_classiclink": {
                    "references": [
                      "var.enable_classiclink"
                    ]
                  },
                  "enable_classiclink_dns_support": {
                    "references": [
                      "var.enable_classiclink_dns_support"
                    ]
                  },
                  "enable_dns_hostnames": {
                    "references": [
                      "var.enable_dns_hostnames"
                    ]
                  },
                  "enable_dns_support": {
                    "references": [
                      "var.enable_dns_support"
                    ]
                  },
                  "instance_tenancy": {
                    "references": [
                      "var.instance_tenancy"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.name",
                      "var.tags",
                      "var.vpc_tags"
                    ]
                  }
                },
                "schema_version": 1,
                "count_expression": {
                  "references": [
                    "var.create_vpc"
                  ]
                }
              },
              {
                "address": "aws_vpc_dhcp_options.this",
                "mode": "managed",
                "type": "aws_vpc_dhcp_options",
                "name": "this",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "domain_name": {
                    "references": [
                      "var.dhcp_options_domain_name"
                    ]
                  },
                  "domain_name_servers": {
                    "references": [
                      "var.dhcp_options_domain_name_servers"
                    ]
                  },
                  "netbios_name_servers": {
                    "references": [
                      "var.dhcp_options_netbios_name_servers"
                    ]
                  },
                  "netbios_node_type": {
                    "references": [
                      "var.dhcp_options_netbios_node_type"
                    ]
                  },
                  "ntp_servers": {
                    "references": [
                      "var.dhcp_options_ntp_servers"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.name",
                      "var.tags",
                      "var.dhcp_options_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.enable_dhcp_options"
                  ]
                }
              },
              {
                "address": "aws_vpc_dhcp_options_association.this",
                "mode": "managed",
                "type": "aws_vpc_dhcp_options_association",
                "name": "this",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "dhcp_options_id": {
                    "references": [
                      "aws_vpc_dhcp_options.this[0].id",
                      "aws_vpc_dhcp_options.this[0]",
                      "aws_vpc_dhcp_options.this"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.enable_dhcp_options"
                  ]
                }
              },
              {
                "address": "aws_vpc_ipv4_cidr_block_association.this",
                "mode": "managed",
                "type": "aws_vpc_ipv4_cidr_block_association",
                "name": "this",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "cidr_block": {
                    "references": [
                      "var.secondary_cidr_blocks",
                      "count.index"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "aws_vpc.this[0].id",
                      "aws_vpc.this[0]",
                      "aws_vpc.this"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.secondary_cidr_blocks",
                    "var.secondary_cidr_blocks"
                  ]
                }
              },
              {
                "address": "aws_vpn_gateway.this",
                "mode": "managed",
                "type": "aws_vpn_gateway",
                "name": "this",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "amazon_side_asn": {
                    "references": [
                      "var.amazon_side_asn"
                    ]
                  },
                  "availability_zone": {
                    "references": [
                      "var.vpn_gateway_az"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.name",
                      "var.tags",
                      "var.vpn_gateway_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.enable_vpn_gateway"
                  ]
                }
              },
              {
                "address": "aws_vpn_gateway_attachment.this",
                "mode": "managed",
                "type": "aws_vpn_gateway_attachment",
                "name": "this",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  },
                  "vpn_gateway_id": {
                    "references": [
                      "var.vpn_gateway_id"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.vpn_gateway_id"
                  ]
                }
              },
              {
                "address": "aws_vpn_gateway_route_propagation.intra",
                "mode": "managed",
                "type": "aws_vpn_gateway_route_propagation",
                "name": "intra",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "route_table_id": {
                    "references": [
                      "aws_route_table.intra",
                      "count.index"
                    ]
                  },
                  "vpn_gateway_id": {
                    "references": [
                      "aws_vpn_gateway.this",
                      "aws_vpn_gateway_attachment.this",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.propagate_intra_route_tables_vgw",
                    "var.enable_vpn_gateway",
                    "var.vpn_gateway_id",
                    "var.intra_subnets"
                  ]
                }
              },
              {
                "address": "aws_vpn_gateway_route_propagation.private",
                "mode": "managed",
                "type": "aws_vpn_gateway_route_propagation",
                "name": "private",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "route_table_id": {
                    "references": [
                      "aws_route_table.private",
                      "count.index"
                    ]
                  },
                  "vpn_gateway_id": {
                    "references": [
                      "aws_vpn_gateway.this",
                      "aws_vpn_gateway_attachment.this",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.propagate_private_route_tables_vgw",
                    "var.enable_vpn_gateway",
                    "var.vpn_gateway_id",
                    "var.private_subnets"
                  ]
                }
              },
              {
                "address": "aws_vpn_gateway_route_propagation.public",
                "mode": "managed",
                "type": "aws_vpn_gateway_route_propagation",
                "name": "public",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "route_table_id": {
                    "references": [
                      "aws_route_table.public",
                      "count.index"
                    ]
                  },
                  "vpn_gateway_id": {
                    "references": [
                      "aws_vpn_gateway.this",
                      "aws_vpn_gateway_attachment.this",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.propagate_public_route_tables_vgw",
                    "var.enable_vpn_gateway",
                    "var.vpn_gateway_id"
                  ]
                }
              },
              {
                "address": "data.aws_iam_policy_document.flow_log_cloudwatch_assume_role",
                "mode": "data",
                "type": "aws_iam_policy_document",
                "name": "flow_log_cloudwatch_assume_role",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "statement": [
                    {
                      "actions": {
                        "constant_value": [
                          "sts:AssumeRole"
                        ]
                      },
                      "effect": {
                        "constant_value": "Allow"
                      },
                      "principals": [
                        {
                          "identifiers": {
                            "constant_value": [
                              "vpc-flow-logs.amazonaws.com"
                            ]
                          },
                          "type": {
                            "constant_value": "Service"
                          }
                        }
                      ],
                      "sid": {
                        "constant_value": "AWSVPCFlowLogsAssumeRole"
                      }
                    }
                  ]
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_flow_log_cloudwatch_iam_role"
                  ]
                }
              },
              {
                "address": "data.aws_iam_policy_document.vpc_flow_log_cloudwatch",
                "mode": "data",
                "type": "aws_iam_policy_document",
                "name": "vpc_flow_log_cloudwatch",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "statement": [
                    {
                      "actions": {
                        "constant_value": [
                          "logs:CreateLogStream",
                          "logs:PutLogEvents",
                          "logs:DescribeLogGroups",
                          "logs:DescribeLogStreams"
                        ]
                      },
                      "effect": {
                        "constant_value": "Allow"
                      },
                      "resources": {
                        "constant_value": [
                          "*"
                        ]
                      },
                      "sid": {
                        "constant_value": "AWSVPCFlowLogsPushToCloudWatch"
                      }
                    }
                  ]
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_flow_log_cloudwatch_iam_role"
                  ]
                }
              }
            ],
            "variables": {
              "amazon_side_asn": {
                "default": "64512",
                "description": "The Autonomous System Number (ASN) for the Amazon side of the gateway. By default the virtual private gateway is created with the current default Amazon ASN."
              },
              "assign_ipv6_address_on_creation": {
                "default": false,
                "description": "Assign IPv6 address on subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch"
              },
              "azs": {
                "default": [],
                "description": "A list of availability zones names or ids in the region"
              },
              "cidr": {
                "default": "0.0.0.0/0",
                "description": "The CIDR block for the VPC. Default value is a valid CIDR, but not acceptable by AWS and should be overridden"
              },
              "create_database_internet_gateway_route": {
                "default": false,
                "description": "Controls if an internet gateway route for public database access should be created"
              },
              "create_database_nat_gateway_route": {
                "default": false,
                "description": "Controls if a nat gateway route should be created to give internet access to the database subnets"
              },
              "create_database_subnet_group": {
                "default": true,
                "description": "Controls if database subnet group should be created (n.b. database_subnets must also be set)"
              },
              "create_database_subnet_route_table": {
                "default": false,
                "description": "Controls if separate route table for database should be created"
              },
              "create_egress_only_igw": {
                "default": true,
                "description": "Controls if an Egress Only Internet Gateway is created and its related routes."
              },
              "create_elasticache_subnet_group": {
                "default": true,
                "description": "Controls if elasticache subnet group should be created"
              },
              "create_elasticache_subnet_route_table": {
                "default": false,
                "description": "Controls if separate route table for elasticache should be created"
              },
              "create_flow_log_cloudwatch_iam_role": {
                "default": false,
                "description": "Whether to create IAM role for VPC Flow Logs"
              },
              "create_flow_log_cloudwatch_log_group": {
                "default": false,
                "description": "Whether to create CloudWatch log group for VPC Flow Logs"
              },
              "create_igw": {
                "default": true,
                "description": "Controls if an Internet Gateway is created for public subnets and the related routes that connect them."
              },
              "create_redshift_subnet_group": {
                "default": true,
                "description": "Controls if redshift subnet group should be created"
              },
              "create_redshift_subnet_route_table": {
                "default": false,
                "description": "Controls if separate route table for redshift should be created"
              },
              "create_vpc": {
                "default": true,
                "description": "Controls if VPC should be created (it affects almost all resources)"
              },
              "customer_gateway_tags": {
                "default": {},
                "description": "Additional tags for the Customer Gateway"
              },
              "customer_gateways": {
                "default": {},
                "description": "Maps of Customer Gateway's attributes (BGP ASN and Gateway's Internet-routable external IP address)"
              },
              "database_acl_tags": {
                "default": {},
                "description": "Additional tags for the database subnets network ACL"
              },
              "database_dedicated_network_acl": {
                "default": false,
                "description": "Whether to use dedicated network ACL (not default) and custom rules for database subnets"
              },
              "database_inbound_acl_rules": {
                "default": [
                  {
                    "cidr_block": "0.0.0.0/0",
                    "from_port": "0",
                    "protocol": "-1",
                    "rule_action": "allow",
                    "rule_number": "100",
                    "to_port": "0"
                  }
                ],
                "description": "Database subnets inbound network ACL rules"
              },
              "database_outbound_acl_rules": {
                "default": [
                  {
                    "cidr_block": "0.0.0.0/0",
                    "from_port": "0",
                    "protocol": "-1",
                    "rule_action": "allow",
                    "rule_number": "100",
                    "to_port": "0"
                  }
                ],
                "description": "Database subnets outbound network ACL rules"
              },
              "database_route_table_tags": {
                "default": {},
                "description": "Additional tags for the database route tables"
              },
              "database_subnet_assign_ipv6_address_on_creation": {
                "default": null,
                "description": "Assign IPv6 address on database subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch"
              },
              "database_subnet_group_name": {
                "default": null,
                "description": "Name of database subnet group"
              },
              "database_subnet_group_tags": {
                "default": {},
                "description": "Additional tags for the database subnet group"
              },
              "database_subnet_ipv6_prefixes": {
                "default": [],
                "description": "Assigns IPv6 database subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
              },
              "database_subnet_suffix": {
                "default": "db",
                "description": "Suffix to append to database subnets name"
              },
              "database_subnet_tags": {
                "default": {},
                "description": "Additional tags for the database subnets"
              },
              "database_subnets": {
                "default": [],
                "description": "A list of database subnets"
              },
              "default_network_acl_egress": {
                "default": [
                  {
                    "action": "allow",
                    "cidr_block": "0.0.0.0/0",
                    "from_port": "0",
                    "protocol": "-1",
                    "rule_no": "100",
                    "to_port": "0"
                  },
                  {
                    "action": "allow",
                    "from_port": "0",
                    "ipv6_cidr_block": "::/0",
                    "protocol": "-1",
                    "rule_no": "101",
                    "to_port": "0"
                  }
                ],
                "description": "List of maps of egress rules to set on the Default Network ACL"
              },
              "default_network_acl_ingress": {
                "default": [
                  {
                    "action": "allow",
                    "cidr_block": "0.0.0.0/0",
                    "from_port": "0",
                    "protocol": "-1",
                    "rule_no": "100",
                    "to_port": "0"
                  },
                  {
                    "action": "allow",
                    "from_port": "0",
                    "ipv6_cidr_block": "::/0",
                    "protocol": "-1",
                    "rule_no": "101",
                    "to_port": "0"
                  }
                ],
                "description": "List of maps of ingress rules to set on the Default Network ACL"
              },
              "default_network_acl_name": {
                "default": null,
                "description": "Name to be used on the Default Network ACL"
              },
              "default_network_acl_tags": {
                "default": {},
                "description": "Additional tags for the Default Network ACL"
              },
              "default_route_table_name": {
                "default": null,
                "description": "Name to be used on the default route table"
              },
              "default_route_table_propagating_vgws": {
                "default": [],
                "description": "List of virtual gateways for propagation"
              },
              "default_route_table_routes": {
                "default": [],
                "description": "Configuration block of routes. See https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/default_route_table#route"
              },
              "default_route_table_tags": {
                "default": {},
                "description": "Additional tags for the default route table"
              },
              "default_security_group_egress": {
                "default": [],
                "description": "List of maps of egress rules to set on the default security group"
              },
              "default_security_group_ingress": {
                "default": [],
                "description": "List of maps of ingress rules to set on the default security group"
              },
              "default_security_group_name": {
                "default": null,
                "description": "Name to be used on the default security group"
              },
              "default_security_group_tags": {
                "default": {},
                "description": "Additional tags for the default security group"
              },
              "default_vpc_enable_classiclink": {
                "default": false,
                "description": "Should be true to enable ClassicLink in the Default VPC"
              },
              "default_vpc_enable_dns_hostnames": {
                "default": false,
                "description": "Should be true to enable DNS hostnames in the Default VPC"
              },
              "default_vpc_enable_dns_support": {
                "default": true,
                "description": "Should be true to enable DNS support in the Default VPC"
              },
              "default_vpc_name": {
                "default": null,
                "description": "Name to be used on the Default VPC"
              },
              "default_vpc_tags": {
                "default": {},
                "description": "Additional tags for the Default VPC"
              },
              "dhcp_options_domain_name": {
                "default": "",
                "description": "Specifies DNS name for DHCP options set (requires enable_dhcp_options set to true)"
              },
              "dhcp_options_domain_name_servers": {
                "default": [
                  "AmazonProvidedDNS"
                ],
                "description": "Specify a list of DNS server addresses for DHCP options set, default to AWS provided (requires enable_dhcp_options set to true)"
              },
              "dhcp_options_netbios_name_servers": {
                "default": [],
                "description": "Specify a list of netbios servers for DHCP options set (requires enable_dhcp_options set to true)"
              },
              "dhcp_options_netbios_node_type": {
                "default": "",
                "description": "Specify netbios node_type for DHCP options set (requires enable_dhcp_options set to true)"
              },
              "dhcp_options_ntp_servers": {
                "default": [],
                "description": "Specify a list of NTP servers for DHCP options set (requires enable_dhcp_options set to true)"
              },
              "dhcp_options_tags": {
                "default": {},
                "description": "Additional tags for the DHCP option set (requires enable_dhcp_options set to true)"
              },
              "elasticache_acl_tags": {
                "default": {},
                "description": "Additional tags for the elasticache subnets network ACL"
              },
              "elasticache_dedicated_network_acl": {
                "default": false,
                "description": "Whether to use dedicated network ACL (not default) and custom rules for elasticache subnets"
              },
              "elasticache_inbound_acl_rules": {
                "default": [
                  {
                    "cidr_block": "0.0.0.0/0",
                    "from_port": "0",
                    "protocol": "-1",
                    "rule_action": "allow",
                    "rule_number": "100",
                    "to_port": "0"
                  }
                ],
                "description": "Elasticache subnets inbound network ACL rules"
              },
              "elasticache_outbound_acl_rules": {
                "default": [
                  {
                    "cidr_block": "0.0.0.0/0",
                    "from_port": "0",
                    "protocol": "-1",
                    "rule_action": "allow",
                    "rule_number": "100",
                    "to_port": "0"
                  }
                ],
                "description": "Elasticache subnets outbound network ACL rules"
              },
              "elasticache_route_table_tags": {
                "default": {},
                "description": "Additional tags for the elasticache route tables"
              },
              "elasticache_subnet_assign_ipv6_address_on_creation": {
                "default": null,
                "description": "Assign IPv6 address on elasticache subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch"
              },
              "elasticache_subnet_group_name": {
                "default": null,
                "description": "Name of elasticache subnet group"
              },
              "elasticache_subnet_group_tags": {
                "default": {},
                "description": "Additional tags for the elasticache subnet group"
              },
              "elasticache_subnet_ipv6_prefixes": {
                "default": [],
                "description": "Assigns IPv6 elasticache subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
              },
              "elasticache_subnet_suffix": {
                "default": "elasticache",
                "description": "Suffix to append to elasticache subnets name"
              },
              "elasticache_subnet_tags": {
                "default": {},
                "description": "Additional tags for the elasticache subnets"
              },
              "elasticache_subnets": {
                "default": [],
                "description": "A list of elasticache subnets"
              },
              "enable_classiclink": {
                "default": null,
                "description": "Should be true to enable ClassicLink for the VPC. Only valid in regions and accounts that support EC2 Classic."
              },
              "enable_classiclink_dns_support": {
                "default": null,
                "description": "Should be true to enable ClassicLink DNS Support for the VPC. Only valid in regions and accounts that support EC2 Classic."
              },
              "enable_dhcp_options": {
                "default": false,
                "description": "Should be true if you want to specify a DHCP options set with a custom domain name, DNS servers, NTP servers, netbios servers, and/or netbios server type"
              },
              "enable_dns_hostnames": {
                "default": false,
                "description": "Should be true to enable DNS hostnames in the VPC"
              },
              "enable_dns_support": {
                "default": true,
                "description": "Should be true to enable DNS support in the VPC"
              },
              "enable_flow_log": {
                "default": false,
                "description": "Whether or not to enable VPC Flow Logs"
              },
              "enable_ipv6": {
                "default": false,
                "description": "Requests an Amazon-provided IPv6 CIDR block with a /56 prefix length for the VPC. You cannot specify the range of IP addresses, or the size of the CIDR block."
              },
              "enable_nat_gateway": {
                "default": false,
                "description": "Should be true if you want to provision NAT Gateways for each of your private networks"
              },
              "enable_public_redshift": {
                "default": false,
                "description": "Controls if redshift should have public routing table"
              },
              "enable_vpn_gateway": {
                "default": false,
                "description": "Should be true if you want to create a new VPN Gateway resource and attach it to the VPC"
              },
              "external_nat_ip_ids": {
                "default": [],
                "description": "List of EIP IDs to be assigned to the NAT Gateways (used in combination with reuse_nat_ips)"
              },
              "external_nat_ips": {
                "default": [],
                "description": "List of EIPs to be used for `nat_public_ips` output (used in combination with reuse_nat_ips and external_nat_ip_ids)"
              },
              "flow_log_cloudwatch_iam_role_arn": {
                "default": "",
                "description": "The ARN for the IAM role that's used to post flow logs to a CloudWatch Logs log group. When flow_log_destination_arn is set to ARN of Cloudwatch Logs, this argument needs to be provided."
              },
              "flow_log_cloudwatch_log_group_kms_key_id": {
                "default": null,
                "description": "The ARN of the KMS Key to use when encrypting log data for VPC flow logs."
              },
              "flow_log_cloudwatch_log_group_name_prefix": {
                "default": "/aws/vpc-flow-log/",
                "description": "Specifies the name prefix of CloudWatch Log Group for VPC flow logs."
              },
              "flow_log_cloudwatch_log_group_retention_in_days": {
                "default": null,
                "description": "Specifies the number of days you want to retain log events in the specified log group for VPC flow logs."
              },
              "flow_log_destination_arn": {
                "default": "",
                "description": "The ARN of the CloudWatch log group or S3 bucket where VPC Flow Logs will be pushed. If this ARN is a S3 bucket the appropriate permissions need to be set on that bucket's policy. When create_flow_log_cloudwatch_log_group is set to false this argument must be provided."
              },
              "flow_log_destination_type": {
                "default": "cloud-watch-logs",
                "description": "Type of flow log destination. Can be s3 or cloud-watch-logs."
              },
              "flow_log_file_format": {
                "default": "plain-text",
                "description": "(Optional) The format for the flow log. Valid values: `plain-text`, `parquet`."
              },
              "flow_log_hive_compatible_partitions": {
                "default": false,
                "description": "(Optional) Indicates whether to use Hive-compatible prefixes for flow logs stored in Amazon S3."
              },
              "flow_log_log_format": {
                "default": null,
                "description": "The fields to include in the flow log record, in the order in which they should appear."
              },
              "flow_log_max_aggregation_interval": {
                "default": 600,
                "description": "The maximum interval of time during which a flow of packets is captured and aggregated into a flow log record. Valid Values: `60` seconds or `600` seconds."
              },
              "flow_log_per_hour_partition": {
                "default": false,
                "description": "(Optional) Indicates whether to partition the flow log per hour. This reduces the cost and response time for queries."
              },
              "flow_log_traffic_type": {
                "default": "ALL",
                "description": "The type of traffic to capture. Valid values: ACCEPT, REJECT, ALL."
              },
              "igw_tags": {
                "default": {},
                "description": "Additional tags for the internet gateway"
              },
              "instance_tenancy": {
                "default": "default",
                "description": "A tenancy option for instances launched into the VPC"
              },
              "intra_acl_tags": {
                "default": {},
                "description": "Additional tags for the intra subnets network ACL"
              },
              "intra_dedicated_network_acl": {
                "default": false,
                "description": "Whether to use dedicated network ACL (not default) and custom rules for intra subnets"
              },
              "intra_inbound_acl_rules": {
                "default": [
                  {
                    "cidr_block": "0.0.0.0/0",
                    "from_port": "0",
                    "protocol": "-1",
                    "rule_action": "allow",
                    "rule_number": "100",
                    "to_port": "0"
                  }
                ],
                "description": "Intra subnets inbound network ACLs"
              },
              "intra_outbound_acl_rules": {
                "default": [
                  {
                    "cidr_block": "0.0.0.0/0",
                    "from_port": "0",
                    "protocol": "-1",
                    "rule_action": "allow",
                    "rule_number": "100",
                    "to_port": "0"
                  }
                ],
                "description": "Intra subnets outbound network ACLs"
              },
              "intra_route_table_tags": {
                "default": {},
                "description": "Additional tags for the intra route tables"
              },
              "intra_subnet_assign_ipv6_address_on_creation": {
                "default": null,
                "description": "Assign IPv6 address on intra subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch"
              },
              "intra_subnet_ipv6_prefixes": {
                "default": [],
                "description": "Assigns IPv6 intra subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
              },
              "intra_subnet_suffix": {
                "default": "intra",
                "description": "Suffix to append to intra subnets name"
              },
              "intra_subnet_tags": {
                "default": {},
                "description": "Additional tags for the intra subnets"
              },
              "intra_subnets": {
                "default": [],
                "description": "A list of intra subnets"
              },
              "manage_default_network_acl": {
                "default": false,
                "description": "Should be true to adopt and manage Default Network ACL"
              },
              "manage_default_route_table": {
                "default": false,
                "description": "Should be true to manage default route table"
              },
              "manage_default_security_group": {
                "default": false,
                "description": "Should be true to adopt and manage default security group"
              },
              "manage_default_vpc": {
                "default": false,
                "description": "Should be true to adopt and manage Default VPC"
              },
              "map_public_ip_on_launch": {
                "default": true,
                "description": "Should be false if you do not want to auto-assign public IP on launch"
              },
              "name": {
                "default": "",
                "description": "Name to be used on all the resources as identifier"
              },
              "nat_eip_tags": {
                "default": {},
                "description": "Additional tags for the NAT EIP"
              },
              "nat_gateway_tags": {
                "default": {},
                "description": "Additional tags for the NAT gateways"
              },
              "one_nat_gateway_per_az": {
                "default": false,
                "description": "Should be true if you want only one NAT Gateway per availability zone. Requires `var.azs` to be set, and the number of `public_subnets` created to be greater than or equal to the number of availability zones specified in `var.azs`."
              },
              "outpost_acl_tags": {
                "default": {},
                "description": "Additional tags for the outpost subnets network ACL"
              },
              "outpost_arn": {
                "default": null,
                "description": "ARN of Outpost you want to create a subnet in."
              },
              "outpost_az": {
                "default": null,
                "description": "AZ where Outpost is anchored."
              },
              "outpost_dedicated_network_acl": {
                "default": false,
                "description": "Whether to use dedicated network ACL (not default) and custom rules for outpost subnets"
              },
              "outpost_inbound_acl_rules": {
                "default": [
                  {
                    "cidr_block": "0.0.0.0/0",
                    "from_port": "0",
                    "protocol": "-1",
                    "rule_action": "allow",
                    "rule_number": "100",
                    "to_port": "0"
                  }
                ],
                "description": "Outpost subnets inbound network ACLs"
              },
              "outpost_outbound_acl_rules": {
                "default": [
                  {
                    "cidr_block": "0.0.0.0/0",
                    "from_port": "0",
                    "protocol": "-1",
                    "rule_action": "allow",
                    "rule_number": "100",
                    "to_port": "0"
                  }
                ],
                "description": "Outpost subnets outbound network ACLs"
              },
              "outpost_subnet_assign_ipv6_address_on_creation": {
                "default": null,
                "description": "Assign IPv6 address on outpost subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch"
              },
              "outpost_subnet_ipv6_prefixes": {
                "default": [],
                "description": "Assigns IPv6 outpost subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
              },
              "outpost_subnet_suffix": {
                "default": "outpost",
                "description": "Suffix to append to outpost subnets name"
              },
              "outpost_subnet_tags": {
                "default": {},
                "description": "Additional tags for the outpost subnets"
              },
              "outpost_subnets": {
                "default": [],
                "description": "A list of outpost subnets inside the VPC"
              },
              "private_acl_tags": {
                "default": {},
                "description": "Additional tags for the private subnets network ACL"
              },
              "private_dedicated_network_acl": {
                "default": false,
                "description": "Whether to use dedicated network ACL (not default) and custom rules for private subnets"
              },
              "private_inbound_acl_rules": {
                "default": [
                  {
                    "cidr_block": "0.0.0.0/0",
                    "from_port": "0",
                    "protocol": "-1",
                    "rule_action": "allow",
                    "rule_number": "100",
                    "to_port": "0"
                  }
                ],
                "description": "Private subnets inbound network ACLs"
              },
              "private_outbound_acl_rules": {
                "default": [
                  {
                    "cidr_block": "0.0.0.0/0",
                    "from_port": "0",
                    "protocol": "-1",
                    "rule_action": "allow",
                    "rule_number": "100",
                    "to_port": "0"
                  }
                ],
                "description": "Private subnets outbound network ACLs"
              },
              "private_route_table_tags": {
                "default": {},
                "description": "Additional tags for the private route tables"
              },
              "private_subnet_assign_ipv6_address_on_creation": {
                "default": null,
                "description": "Assign IPv6 address on private subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch"
              },
              "private_subnet_ipv6_prefixes": {
                "default": [],
                "description": "Assigns IPv6 private subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
              },
              "private_subnet_suffix": {
                "default": "private",
                "description": "Suffix to append to private subnets name"
              },
              "private_subnet_tags": {
                "default": {},
                "description": "Additional tags for the private subnets"
              },
              "private_subnets": {
                "default": [],
                "description": "A list of private subnets inside the VPC"
              },
              "propagate_intra_route_tables_vgw": {
                "default": false,
                "description": "Should be true if you want route table propagation"
              },
              "propagate_private_route_tables_vgw": {
                "default": false,
                "description": "Should be true if you want route table propagation"
              },
              "propagate_public_route_tables_vgw": {
                "default": false,
                "description": "Should be true if you want route table propagation"
              },
              "public_acl_tags": {
                "default": {},
                "description": "Additional tags for the public subnets network ACL"
              },
              "public_dedicated_network_acl": {
                "default": false,
                "description": "Whether to use dedicated network ACL (not default) and custom rules for public subnets"
              },
              "public_inbound_acl_rules": {
                "default": [
                  {
                    "cidr_block": "0.0.0.0/0",
                    "from_port": "0",
                    "protocol": "-1",
                    "rule_action": "allow",
                    "rule_number": "100",
                    "to_port": "0"
                  }
                ],
                "description": "Public subnets inbound network ACLs"
              },
              "public_outbound_acl_rules": {
                "default": [
                  {
                    "cidr_block": "0.0.0.0/0",
                    "from_port": "0",
                    "protocol": "-1",
                    "rule_action": "allow",
                    "rule_number": "100",
                    "to_port": "0"
                  }
                ],
                "description": "Public subnets outbound network ACLs"
              },
              "public_route_table_tags": {
                "default": {},
                "description": "Additional tags for the public route tables"
              },
              "public_subnet_assign_ipv6_address_on_creation": {
                "default": null,
                "description": "Assign IPv6 address on public subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch"
              },
              "public_subnet_ipv6_prefixes": {
                "default": [],
                "description": "Assigns IPv6 public subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
              },
              "public_subnet_suffix": {
                "default": "public",
                "description": "Suffix to append to public subnets name"
              },
              "public_subnet_tags": {
                "default": {},
                "description": "Additional tags for the public subnets"
              },
              "public_subnets": {
                "default": [],
                "description": "A list of public subnets inside the VPC"
              },
              "redshift_acl_tags": {
                "default": {},
                "description": "Additional tags for the redshift subnets network ACL"
              },
              "redshift_dedicated_network_acl": {
                "default": false,
                "description": "Whether to use dedicated network ACL (not default) and custom rules for redshift subnets"
              },
              "redshift_inbound_acl_rules": {
                "default": [
                  {
                    "cidr_block": "0.0.0.0/0",
                    "from_port": "0",
                    "protocol": "-1",
                    "rule_action": "allow",
                    "rule_number": "100",
                    "to_port": "0"
                  }
                ],
                "description": "Redshift subnets inbound network ACL rules"
              },
              "redshift_outbound_acl_rules": {
                "default": [
                  {
                    "cidr_block": "0.0.0.0/0",
                    "from_port": "0",
                    "protocol": "-1",
                    "rule_action": "allow",
                    "rule_number": "100",
                    "to_port": "0"
                  }
                ],
                "description": "Redshift subnets outbound network ACL rules"
              },
              "redshift_route_table_tags": {
                "default": {},
                "description": "Additional tags for the redshift route tables"
              },
              "redshift_subnet_assign_ipv6_address_on_creation": {
                "default": null,
                "description": "Assign IPv6 address on redshift subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch"
              },
              "redshift_subnet_group_name": {
                "default": null,
                "description": "Name of redshift subnet group"
              },
              "redshift_subnet_group_tags": {
                "default": {},
                "description": "Additional tags for the redshift subnet group"
              },
              "redshift_subnet_ipv6_prefixes": {
                "default": [],
                "description": "Assigns IPv6 redshift subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
              },
              "redshift_subnet_suffix": {
                "default": "redshift",
                "description": "Suffix to append to redshift subnets name"
              },
              "redshift_subnet_tags": {
                "default": {},
                "description": "Additional tags for the redshift subnets"
              },
              "redshift_subnets": {
                "default": [],
                "description": "A list of redshift subnets"
              },
              "reuse_nat_ips": {
                "default": false,
                "description": "Should be true if you don't want EIPs to be created for your NAT Gateways and will instead pass them in via the 'external_nat_ip_ids' variable"
              },
              "secondary_cidr_blocks": {
                "default": [],
                "description": "List of secondary CIDR blocks to associate with the VPC to extend the IP Address pool"
              },
              "single_nat_gateway": {
                "default": false,
                "description": "Should be true if you want to provision a single shared NAT Gateway across all of your private networks"
              },
              "tags": {
                "default": {},
                "description": "A map of tags to add to all resources"
              },
              "vpc_flow_log_permissions_boundary": {
                "default": null,
                "description": "The ARN of the Permissions Boundary for the VPC Flow Log IAM Role"
              },
              "vpc_flow_log_tags": {
                "default": {},
                "description": "Additional tags for the VPC Flow Logs"
              },
              "vpc_tags": {
                "default": {},
                "description": "Additional tags for the VPC"
              },
              "vpn_gateway_az": {
                "default": null,
                "description": "The Availability Zone for the VPN Gateway"
              },
              "vpn_gateway_id": {
                "default": "",
                "description": "ID of VPN Gateway to attach to the VPC"
              },
              "vpn_gateway_tags": {
                "default": {},
                "description": "Additional tags for the VPN gateway"
              }
            }
          },
          "version_constraint": "3.11.3"
        }
      },
      "variables": {
        "cluster_name": {
          "default": "demo",
          "description": "Cluster Name"
        },
        "environment": {
          "description": "Environment name (dev, qa, prod)"
        },
        "kubernetes_version": {
          "default": "1.21",
          "description": "Kubernetes Version"
        },
        "tags": {
          "default": {},
          "description": "Tags to be applied to resources"
        },
        "vpc_name": {
          "default": "demo",
          "description": "VPC Name"
        }
      }
    }
  }
}
