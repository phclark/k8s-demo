apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/backend-protocol: HTTP
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTPS
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80},{"HTTPS":443}]'
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    alb.ingress.kubernetes.io/group.name: shared
    external-dns.alpha.kubernetes.io/hostname: api.grainfreewoodworks.com
  name: ingress
  namespace: argo-events
spec:
  rules:
  - host: api.grainfreewoodworks.com
    http:
      paths:
      - path: /example
        backend:
          service:
            name: ssl-redirect
            port: 
              name: use-annotation
        pathType: ImplementationSpecific
      - path: /example
        backend:
          service:
            name: example
            port: 
              name: http-metrics
        pathType: ImplementationSpecific
  {{ end }}
  tls:
  - hosts:
    - api.grainfreewoodworks.com
---
apiVersion: argoproj.io/v1alpha1
kind: EventSource
metadata:
  name: webhook-example
  namespace: argo-events
spec:
  service:
    ports:
      - port: 12000
        targetPort: 12000
  webhook:
    # event-source can run multiple HTTP servers. Simply define a unique port to start a new HTTP server
    example:
      # port to run HTTP server on
      port: "12000"
      # endpoint to listen to
      endpoint: /example
      # HTTP request method to allow. In this case, only POST requests are accepted
      method: POST

#    example-foo:
#      port: "12000"
#      endpoint: /example2
#      method: POST

# Uncomment to use secure webhook
#    example-secure:
#      port: "13000"
#      endpoint: "/secure"
#      method: "POST"
#      # k8s secret that contains the cert
#      serverCertSecret:
#        name: my-secret
#        key: cert-key
#      # k8s secret that contains the private key
#      serverKeySecret:
#        name: my-secret
#        key: pk-key