apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/backend-protocol: HTTP
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80},{"HTTPS":443}]'
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    alb.ingress.kubernetes.io/group.name: shared
    external-dns.alpha.kubernetes.io/hostname: webhook.grainfreewoodworks.com
  name: webhook-example
  namespace: argo-workflows
spec:
  rules:
  - host: webhook.grainfreewoodworks.com
    http:
      paths:
      - path: /*
        backend:
          service:
            name: ssl-redirect
            port: 
              name: use-annotation
        pathType: ImplementationSpecific
      - backend:
          service:
            name: webhook-example
            port: 
              name: http
        pathType: ImplementationSpecific
  tls:
  - hosts:
    - webhook.grainfreewoodworks.com
---
apiVersion: argoproj.io/v1alpha1
kind: EventSource
metadata:
  name: webhook-example
  namespace: argo-workflows
  labels:
    app: webhook-example
spec:
  webhook:
    example:
      port: "12000"
      endpoint: /example
      method: POST
---
apiVersion: v1
kind: Service
metadata:
  name: webhook-example
  namespace: argo-workflows
spec:
  type: NodePort
  ports:
    - port: 12000
      targetPort: http
      protocol: TCP
      name: http
  selector:
    eventsource-name: webhook-example