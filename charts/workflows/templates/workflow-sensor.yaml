apiVersion: argoproj.io/v1alpha1
kind: Sensor
metadata:
  name: webhook
  namespace: argo-workflows
spec:
  template:
    serviceAccountName: argo-workflows-actions
  dependencies:
    - name: slack
      eventSourceName: slack
      eventName: example-insecure
  triggers:
    - template:
        name: webhook-workflow-trigger
        k8s:
          group: argoproj.io
          version: v1alpha1
          resource: workflows
          operation: create
          source:
            resource:
              apiVersion: argoproj.io/v1alpha1
              kind: Workflow
              metadata:
                generateName: slack-
                namespace: argo-workflows
              spec:
                entrypoint: script
                serviceAccountName: argo-workflows-actions
                arguments:
                  parameters:
                  - name: payload
                    value: '{"message":"default"}'
                templates:
                - name: script
                  inputs:
                    parameters:
                    - name: payload
                  script:
                    image: jshimko/kube-tools-aws:latest
                    command: [/bin/bash]
                    source: |
                      aws s3 ls
                      kubectl get namespaces
                      slack_data=$(echo {{`{{inputs.parameters.payload}}`}} | jq -r '.data' | base64 -d)
                      echo {{`{{inputs.parameters.payload}}`}}
                      command=$(echo $slack_data | jq -r '.command')
                      text=$(echo $slack_data | jq -r '.text')
                      response_url=$(echo $slack_data | jq -r '.response_url')
                      echo "command: $command"
                      echo "text: $text"
                      echo "response_url: $response_url"
                      curl -X post $response_url -H 'content-type: application/json' -D '{"text": "Message received: $text"}'
          parameters:
            - src:
                dependencyName: slack
              dest: spec.arguments.parameters.0.value