# Builds new Docker images of services and updates helm chart values

name: Services CI

on:
  push:
    branches:
      - main
    paths:
      - services/**

  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  DOCKER_REGISTRY: 767534018423.dkr.ecr.us-east-1.amazonaws.com

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
          cache: pip
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@13d241b293754004c80624b5567555c4a39ffbe3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Setup environment
        run: |
          export 
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin $DOCKER_REGISTRY
          pip install \
            pyyaml==6.0 \
            semver==2.13.0 \
            boto3==1.20.43
      - name: Create ECRs
        uses: jannekem/run-python-script-action@v1.2
        with:
          script: |
            import boto3
            import yaml

            ecr = boto3.client('ecr')
            response = ecr.describe_repositories()
            repositories = [ r['repositoryName'] for r in response['repositories'] ]


            with open("docker-compose.yml") as f:
              compose = yaml.safe_load(f.read())

            for service_name, service_definition in compose['services'].items():
              image_name = str(service_definition['image']).split('/')[1].split[':'][0]
              if image_name not in repositories:
                ecr.create_repository(repositoryName=image_name)
      - name: Build images
        run: |
          # Unit tests are performed as part of the Docker build
          docker-compose build
      - name: Push images
        run: |
          docker-compose push
      - name: Update image tags in charts
        uses: jannekem/run-python-script-action@v1.2
        with:
          script: |
            # Iterate through services defined in docker-compose.yml and
            # update chart values tag references to match
            import yaml
            with open("docker-compose.yml") as f:
              compose = yaml.safe_load(f.read())
            for service_name, service_definition in compose['services'].items():
              image = str(service_definition['image']).split('/')[1]
              with open(f"../charts/{service_name}/values.yaml") as f:
                values = yaml.safe_load(f.read())
              values['image']['tag'] = image.split(':')[1]
              with open(f"../charts/{service_name}/values.yaml", "w") as f:
                f.write(yaml.dump(values))
