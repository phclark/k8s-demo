# Deploys Terraform configurations on changes

name: Terraform CI

on:
  push:
    branches: 
      - main
    paths:
      - terraform/modules/**

  workflow_dispatch:

env:
  environment: dev
  AWS_REGION: us-east-1

jobs:
  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      modules: ${{ steps.generate-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2
      - name: Generate matrix
        id: generate-matrix
        uses: hellofresh/action-changed-files@v2
        with:
          pattern: terraform/modules/(?P<module>[^/]+)

  build:
    needs: generate-matrix
    strategy:
      matrix: ${{ fromJson(needs.generate-matrix.outputs.modules) }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@13d241b293754004c80624b5567555c4a39ffbe3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.4
          terraform_wrapper: false
      - uses: actions/setup-go@v3
        with:
          go-version: '^1.17'
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - uses: bridgecrewio/checkov-action@master
        with:
          quiet: true 
          directory: terraform/modules/${{ matrix.module }}
          framework: terraform
      - name: terraform validate
        working-directory: terraform/modules/${{ matrix.module }}
        run: terraform validate
      - name: terratest
        working-directory: terraform/modules/${{ matrix.module }}
        run: |
          go test -v ./test
      - name: Bump version and push tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          initial_version: 0.0.0
          prefix: terraform/modules/${{ matrix.module }}_v
        run: |
          wget -O /usr/local/bin/semver \
            https://raw.githubusercontent.com/fsaintjacques/semver-tool/master/src/semver
          chmod +x /usr/local/bin/semver

          latest_version=$(git describe --tags --match "${prefix}[0-9]*" --abbrev=4 HEAD) | sed "s/${prefix}// | true" 
          if [[ "$latest_version" ]];
          then 
            echo "No previous version found. Setting initial version to 0.0.0"
          else
            echo "Latest version: $latest_version"
          fi

          case "${{ github.event.head_commit.message }}" in
          major) 
            bump_type=major ;;
          minor)
            bump_type=minor ;;
          patch)
            bump_type=patch ;;
          *)
            echo "No bump directive found, skipping version bump"
          esac
          
          if [[ -z "$bump_type" ]];
          then
            new_version=$(semver bump $bump_type $latest_version)
            echo "Tagging ${prefix}${new_version}"
            git tag ${prefix}${new_version}
          fi
